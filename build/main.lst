ARM GAS  /tmp/ccB0msW5.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB135:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "ili9341.h"
  25:Core/Src/main.c **** #include "nrf24.h"
  26:Core/Src/main.c **** #include "usb-cdc-device.h"
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /tmp/ccB0msW5.s 			page 2


  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** UART_HandleTypeDef huart2;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** PCD_HandleTypeDef hpcd_USB_OTG_FS;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** uint8_t cdc_buffer[64];
  50:Core/Src/main.c **** extern char lcd_string[128];
  51:Core/Src/main.c **** /* USER CODE END PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  54:Core/Src/main.c **** void SystemClock_Config(void);
  55:Core/Src/main.c **** static void MX_GPIO_Init(void);
  56:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  57:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  62:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE END 0 */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /**
  67:Core/Src/main.c ****   * @brief  The application entry point.
  68:Core/Src/main.c ****   * @retval int
  69:Core/Src/main.c ****   */
  70:Core/Src/main.c **** int main(void)
  71:Core/Src/main.c **** {
  72:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* USER CODE END 1 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  79:Core/Src/main.c ****   HAL_Init();
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE END Init */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Configure the system clock */
  86:Core/Src/main.c ****   SystemClock_Config();
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  89:Core/Src/main.c **** 
ARM GAS  /tmp/ccB0msW5.s 			page 3


  90:Core/Src/main.c ****   /* USER CODE END SysInit */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Initialize all configured peripherals */
  93:Core/Src/main.c ****   MX_GPIO_Init();
  94:Core/Src/main.c ****   MX_USART2_UART_Init();
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  97:Core/Src/main.c ****   usb_device_init(); 
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   ili9341_init();
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   uint8_t id4[4];
 102:Core/Src/main.c ****   ili9341_get_id4(id4);
 103:Core/Src/main.c ****   uint8_t id2[2];
 104:Core/Src/main.c ****   ili9341_get_id3(id2);
 105:Core/Src/main.c ****   lcd_set_rotation(0);
 106:Core/Src/main.c ****   ili9341_set_CTRL_display();
 107:Core/Src/main.c ****   ili9341_set_display_brightness();
 108:Core/Src/main.c ****   uint8_t brightness[2];
 109:Core/Src/main.c ****   ili9341_get_display_brightness(brightness);
 110:Core/Src/main.c ****   uint8_t display_format[2];
 111:Core/Src/main.c ****   ili9341_get_display_pixel_format(display_format);
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   ili9341_set_CTRL_display();
 114:Core/Src/main.c ****   uint8_t ctrl_display[2];
 115:Core/Src/main.c ****   ili9341_get_CTRL_display(ctrl_display);
 116:Core/Src/main.c **** 
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   ili9341_set_tearing_effect_line_on();
 119:Core/Src/main.c ****   uint8_t display_signal_mode[2];
 120:Core/Src/main.c ****   ili9341_get_display_signal_mode(display_signal_mode);
 121:Core/Src/main.c ****   
 122:Core/Src/main.c ****   // nRF24_tx_self_test();
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   lcd_clear_all(WHITE);
 125:Core/Src/main.c ****   /*
 126:Core/Src/main.c **** 	char message[64] = "> Hello. My Name is Luyao Han. Great to meet you!";
 127:Core/Src/main.c **** 	lcd_write_message(message, 0, 10, 1, BLUE, WHITE);
 128:Core/Src/main.c **** 	strcpy(message, "> What's your name?");
 129:Core/Src/main.c **** 	lcd_write_message(message, 0, 20, 1, BLUE, WHITE);
 130:Core/Src/main.c **** 	strcpy(message, "Some say the world will end in fire,");
 131:Core/Src/main.c **** 	lcd_write_message(message, 0, 30, 1, BLUE, WHITE);
 132:Core/Src/main.c ****   strcpy(message, "Some say in ice.");
 133:Core/Src/main.c **** 	lcd_write_message(message, 0, 40, 1, BLUE, WHITE);
 134:Core/Src/main.c ****   strcpy(message, "From what Ive tasted of desire");
 135:Core/Src/main.c **** 	lcd_write_message(message, 0, 50, 1, BLUE, WHITE);
 136:Core/Src/main.c ****   strcpy(message, "I hold with those who favour fire.");
 137:Core/Src/main.c **** 	lcd_write_message(message, 0, 60, 1, BLUE, WHITE);
 138:Core/Src/main.c ****   strcpy(message, "But if it had to perish twice,");
 139:Core/Src/main.c **** 	lcd_write_message(message, 0, 70, 1, BLUE, WHITE);
 140:Core/Src/main.c ****   strcpy(message, "I think I know enough of hate");
 141:Core/Src/main.c **** 	lcd_write_message(message, 0, 80, 1, BLUE, WHITE);
 142:Core/Src/main.c ****   strcpy(message, "To say that for destruction ice");
 143:Core/Src/main.c **** 	lcd_write_message(message, 0, 90, 1, BLUE, WHITE);
 144:Core/Src/main.c ****   strcpy(message, "Is also great");
 145:Core/Src/main.c **** 	lcd_write_message(message, 0, 100, 1, BLUE, WHITE);
 146:Core/Src/main.c ****   strcpy(message, "And would suffice.");
ARM GAS  /tmp/ccB0msW5.s 			page 4


 147:Core/Src/main.c **** 	lcd_write_message(message, 0, 110, 1, BLUE, WHITE);
 148:Core/Src/main.c ****   */
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   uint8_t buffer[] = "Hello, World!\r\n";
 151:Core/Src/main.c ****   /* USER CODE END 2 */
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   /* Infinite loop */
 154:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 155:Core/Src/main.c ****   
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   // lcd_enter_vertical_scroll_mode(); 
 158:Core/Src/main.c ****   while (1)
 159:Core/Src/main.c ****   {
 160:Core/Src/main.c ****     // CDC_Transmit_FS(buffer, sizeof(buffer));
 161:Core/Src/main.c ****     
 162:Core/Src/main.c ****     usbd_transmit(buffer, sizeof(buffer));
 163:Core/Src/main.c ****     // lcd_continuous_scroll();
 164:Core/Src/main.c ****     HAL_Delay(1000);
 165:Core/Src/main.c **** 	  lcd_write_message(lcd_string, 0, 0, 1, BLUE, WHITE);
 166:Core/Src/main.c ****     /* USER CODE END WHILE */
 167:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 168:Core/Src/main.c ****   }
 169:Core/Src/main.c ****   /* USER CODE END 3 */
 170:Core/Src/main.c **** }
 171:Core/Src/main.c **** 
 172:Core/Src/main.c **** /**
 173:Core/Src/main.c ****   * @brief System Clock Configuration
 174:Core/Src/main.c ****   * @retval None
 175:Core/Src/main.c ****   */
 176:Core/Src/main.c **** void SystemClock_Config(void)
 177:Core/Src/main.c **** {
 178:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 179:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 182:Core/Src/main.c ****   */
 183:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 184:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 187:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 188:Core/Src/main.c ****   */
 189:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 190:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 197:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 198:Core/Src/main.c ****   {
 199:Core/Src/main.c ****     Error_Handler();
 200:Core/Src/main.c ****   }
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 203:Core/Src/main.c ****   */
ARM GAS  /tmp/ccB0msW5.s 			page 5


 204:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 205:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 206:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 207:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 208:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 209:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 212:Core/Src/main.c ****   {
 213:Core/Src/main.c ****     Error_Handler();
 214:Core/Src/main.c ****   }
 215:Core/Src/main.c **** }
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** /**
 218:Core/Src/main.c ****   * @brief USART2 Initialization Function
 219:Core/Src/main.c ****   * @param None
 220:Core/Src/main.c ****   * @retval None
 221:Core/Src/main.c ****   */
 222:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 223:Core/Src/main.c **** {
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 232:Core/Src/main.c ****   huart2.Instance = USART2;
 233:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 234:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 235:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 236:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 237:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 238:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 239:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 240:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 241:Core/Src/main.c ****   {
 242:Core/Src/main.c ****     Error_Handler();
 243:Core/Src/main.c ****   }
 244:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 247:Core/Src/main.c **** 
 248:Core/Src/main.c **** }
 249:Core/Src/main.c **** 
 250:Core/Src/main.c **** /**
 251:Core/Src/main.c ****   * @brief GPIO Initialization Function
 252:Core/Src/main.c ****   * @param None
 253:Core/Src/main.c ****   * @retval None
 254:Core/Src/main.c ****   */
 255:Core/Src/main.c **** static void MX_GPIO_Init(void)
 256:Core/Src/main.c **** {
  27              		.loc 1 256 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 40
  30              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccB0msW5.s 			page 6


  31 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 28
  34              		.cfi_offset 4, -28
  35              		.cfi_offset 5, -24
  36              		.cfi_offset 6, -20
  37              		.cfi_offset 7, -16
  38              		.cfi_offset 8, -12
  39              		.cfi_offset 9, -8
  40              		.cfi_offset 14, -4
  41 0004 8BB0     		sub	sp, sp, #44
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 72
 257:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  44              		.loc 1 257 0
  45 0006 0024     		movs	r4, #0
  46 0008 0594     		str	r4, [sp, #20]
  47 000a 0694     		str	r4, [sp, #24]
  48 000c 0794     		str	r4, [sp, #28]
  49 000e 0894     		str	r4, [sp, #32]
  50 0010 0994     		str	r4, [sp, #36]
  51              	.LBB4:
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 260:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  52              		.loc 1 260 0
  53 0012 0094     		str	r4, [sp]
  54 0014 464B     		ldr	r3, .L3
  55 0016 1A6B     		ldr	r2, [r3, #48]
  56 0018 42F00402 		orr	r2, r2, #4
  57 001c 1A63     		str	r2, [r3, #48]
  58 001e 1A6B     		ldr	r2, [r3, #48]
  59 0020 02F00402 		and	r2, r2, #4
  60 0024 0092     		str	r2, [sp]
  61 0026 009A     		ldr	r2, [sp]
  62              	.LBE4:
  63              	.LBB5:
 261:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  64              		.loc 1 261 0
  65 0028 0194     		str	r4, [sp, #4]
  66 002a 1A6B     		ldr	r2, [r3, #48]
  67 002c 42F08002 		orr	r2, r2, #128
  68 0030 1A63     		str	r2, [r3, #48]
  69 0032 1A6B     		ldr	r2, [r3, #48]
  70 0034 02F08002 		and	r2, r2, #128
  71 0038 0192     		str	r2, [sp, #4]
  72 003a 019A     		ldr	r2, [sp, #4]
  73              	.LBE5:
  74              	.LBB6:
 262:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  75              		.loc 1 262 0
  76 003c 0294     		str	r4, [sp, #8]
  77 003e 1A6B     		ldr	r2, [r3, #48]
  78 0040 42F00102 		orr	r2, r2, #1
  79 0044 1A63     		str	r2, [r3, #48]
  80 0046 1A6B     		ldr	r2, [r3, #48]
  81 0048 02F00102 		and	r2, r2, #1
ARM GAS  /tmp/ccB0msW5.s 			page 7


  82 004c 0292     		str	r2, [sp, #8]
  83 004e 029A     		ldr	r2, [sp, #8]
  84              	.LBE6:
  85              	.LBB7:
 263:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  86              		.loc 1 263 0
  87 0050 0394     		str	r4, [sp, #12]
  88 0052 1A6B     		ldr	r2, [r3, #48]
  89 0054 42F00202 		orr	r2, r2, #2
  90 0058 1A63     		str	r2, [r3, #48]
  91 005a 1A6B     		ldr	r2, [r3, #48]
  92 005c 02F00202 		and	r2, r2, #2
  93 0060 0392     		str	r2, [sp, #12]
  94 0062 039A     		ldr	r2, [sp, #12]
  95              	.LBE7:
  96              	.LBB8:
 264:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  97              		.loc 1 264 0
  98 0064 0494     		str	r4, [sp, #16]
  99 0066 1A6B     		ldr	r2, [r3, #48]
 100 0068 42F00802 		orr	r2, r2, #8
 101 006c 1A63     		str	r2, [r3, #48]
 102 006e 1B6B     		ldr	r3, [r3, #48]
 103 0070 03F00803 		and	r3, r3, #8
 104 0074 0493     		str	r3, [sp, #16]
 105 0076 049B     		ldr	r3, [sp, #16]
 106              	.LBE8:
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 267:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_7|GPIO_PIN_10
 107              		.loc 1 267 0
 108 0078 2E4E     		ldr	r6, .L3+4
 109 007a 2246     		mov	r2, r4
 110 007c 41F68341 		movw	r1, #7299
 111 0080 3046     		mov	r0, r6
 112 0082 FFF7FEFF 		bl	HAL_GPIO_WritePin
 113              	.LVL0:
 268:Core/Src/main.c ****                           |GPIO_PIN_11|GPIO_PIN_12, GPIO_PIN_RESET);
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 271:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|LD2_Pin
 114              		.loc 1 271 0
 115 0086 DFF8B490 		ldr	r9, .L3+12
 116 008a 2246     		mov	r2, r4
 117 008c 40F23371 		movw	r1, #1843
 118 0090 4846     		mov	r0, r9
 119 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
 120              	.LVL1:
 272:Core/Src/main.c ****                           |GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10, GPIO_PIN_RESET);
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 275:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_3|GPIO_PIN_4
 121              		.loc 1 275 0
 122 0096 DFF8A880 		ldr	r8, .L3+16
 123 009a 2246     		mov	r2, r4
 124 009c 40F23941 		movw	r1, #1081
 125 00a0 4046     		mov	r0, r8
ARM GAS  /tmp/ccB0msW5.s 			page 8


 126 00a2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 127              	.LVL2:
 276:Core/Src/main.c ****                           |GPIO_PIN_5, GPIO_PIN_RESET);
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 279:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_RESET);
 128              		.loc 1 279 0
 129 00a6 244F     		ldr	r7, .L3+8
 130 00a8 2246     		mov	r2, r4
 131 00aa 0421     		movs	r1, #4
 132 00ac 3846     		mov	r0, r7
 133 00ae FFF7FEFF 		bl	HAL_GPIO_WritePin
 134              	.LVL3:
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 282:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 135              		.loc 1 282 0
 136 00b2 4FF40053 		mov	r3, #8192
 137 00b6 0593     		str	r3, [sp, #20]
 283:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 138              		.loc 1 283 0
 139 00b8 4FF40413 		mov	r3, #2162688
 140 00bc 0693     		str	r3, [sp, #24]
 284:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 141              		.loc 1 284 0
 142 00be 0794     		str	r4, [sp, #28]
 285:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 143              		.loc 1 285 0
 144 00c0 05A9     		add	r1, sp, #20
 145 00c2 3046     		mov	r0, r6
 146 00c4 FFF7FEFF 		bl	HAL_GPIO_Init
 147              	.LVL4:
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****   /*Configure GPIO pins : PC0 PC1 PC7 PC10
 288:Core/Src/main.c ****                            PC11 PC12 */
 289:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_7|GPIO_PIN_10
 148              		.loc 1 289 0
 149 00c8 41F68343 		movw	r3, #7299
 150 00cc 0593     		str	r3, [sp, #20]
 290:Core/Src/main.c ****                           |GPIO_PIN_11|GPIO_PIN_12;
 291:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 151              		.loc 1 291 0
 152 00ce 0125     		movs	r5, #1
 153 00d0 0695     		str	r5, [sp, #24]
 292:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 154              		.loc 1 292 0
 155 00d2 0794     		str	r4, [sp, #28]
 293:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 156              		.loc 1 293 0
 157 00d4 0894     		str	r4, [sp, #32]
 294:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 158              		.loc 1 294 0
 159 00d6 05A9     		add	r1, sp, #20
 160 00d8 3046     		mov	r0, r6
 161 00da FFF7FEFF 		bl	HAL_GPIO_Init
 162              	.LVL5:
 295:Core/Src/main.c **** 
ARM GAS  /tmp/ccB0msW5.s 			page 9


 296:Core/Src/main.c ****   /*Configure GPIO pins : PC2 PC3 */
 297:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 163              		.loc 1 297 0
 164 00de 0C23     		movs	r3, #12
 165 00e0 0593     		str	r3, [sp, #20]
 298:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 166              		.loc 1 298 0
 167 00e2 0694     		str	r4, [sp, #24]
 299:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 168              		.loc 1 299 0
 169 00e4 0794     		str	r4, [sp, #28]
 300:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 170              		.loc 1 300 0
 171 00e6 05A9     		add	r1, sp, #20
 172 00e8 3046     		mov	r0, r6
 173 00ea FFF7FEFF 		bl	HAL_GPIO_Init
 174              	.LVL6:
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****   /*Configure GPIO pins : PA0 PA1 PA4 LD2_Pin
 303:Core/Src/main.c ****                            PA8 PA9 PA10 */
 304:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|LD2_Pin
 175              		.loc 1 304 0
 176 00ee 40F23373 		movw	r3, #1843
 177 00f2 0593     		str	r3, [sp, #20]
 305:Core/Src/main.c ****                           |GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10;
 306:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 178              		.loc 1 306 0
 179 00f4 0695     		str	r5, [sp, #24]
 307:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 180              		.loc 1 307 0
 181 00f6 0794     		str	r4, [sp, #28]
 308:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 182              		.loc 1 308 0
 183 00f8 0894     		str	r4, [sp, #32]
 309:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 184              		.loc 1 309 0
 185 00fa 05A9     		add	r1, sp, #20
 186 00fc 4846     		mov	r0, r9
 187 00fe FFF7FEFF 		bl	HAL_GPIO_Init
 188              	.LVL7:
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB10 PB3 PB4
 312:Core/Src/main.c ****                            PB5 */
 313:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_3|GPIO_PIN_4
 189              		.loc 1 313 0
 190 0102 40F23943 		movw	r3, #1081
 191 0106 0593     		str	r3, [sp, #20]
 314:Core/Src/main.c ****                           |GPIO_PIN_5;
 315:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 192              		.loc 1 315 0
 193 0108 0695     		str	r5, [sp, #24]
 316:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 194              		.loc 1 316 0
 195 010a 0794     		str	r4, [sp, #28]
 317:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 196              		.loc 1 317 0
 197 010c 0894     		str	r4, [sp, #32]
ARM GAS  /tmp/ccB0msW5.s 			page 10


 318:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 198              		.loc 1 318 0
 199 010e 05A9     		add	r1, sp, #20
 200 0110 4046     		mov	r0, r8
 201 0112 FFF7FEFF 		bl	HAL_GPIO_Init
 202              	.LVL8:
 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****   /*Configure GPIO pin : PD2 */
 321:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_2;
 203              		.loc 1 321 0
 204 0116 0423     		movs	r3, #4
 205 0118 0593     		str	r3, [sp, #20]
 322:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 206              		.loc 1 322 0
 207 011a 0695     		str	r5, [sp, #24]
 323:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 208              		.loc 1 323 0
 209 011c 0794     		str	r4, [sp, #28]
 324:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 210              		.loc 1 324 0
 211 011e 0894     		str	r4, [sp, #32]
 325:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 212              		.loc 1 325 0
 213 0120 05A9     		add	r1, sp, #20
 214 0122 3846     		mov	r0, r7
 215 0124 FFF7FEFF 		bl	HAL_GPIO_Init
 216              	.LVL9:
 326:Core/Src/main.c **** 
 327:Core/Src/main.c **** }
 217              		.loc 1 327 0
 218 0128 0BB0     		add	sp, sp, #44
 219              	.LCFI2:
 220              		.cfi_def_cfa_offset 28
 221              		@ sp needed
 222 012a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 223              	.L4:
 224 012e 00BF     		.align	2
 225              	.L3:
 226 0130 00380240 		.word	1073887232
 227 0134 00080240 		.word	1073874944
 228 0138 000C0240 		.word	1073875968
 229 013c 00000240 		.word	1073872896
 230 0140 00040240 		.word	1073873920
 231              		.cfi_endproc
 232              	.LFE135:
 234              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 235              		.align	1
 236              		.global	HAL_TIM_PeriodElapsedCallback
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 240              		.fpu fpv4-sp-d16
 242              	HAL_TIM_PeriodElapsedCallback:
 243              	.LFB136:
 328:Core/Src/main.c **** 
 329:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 330:Core/Src/main.c **** 
ARM GAS  /tmp/ccB0msW5.s 			page 11


 331:Core/Src/main.c **** /* USER CODE END 4 */
 332:Core/Src/main.c **** 
 333:Core/Src/main.c **** /**
 334:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 335:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 336:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 337:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 338:Core/Src/main.c ****   * @param  htim : TIM handle
 339:Core/Src/main.c ****   * @retval None
 340:Core/Src/main.c ****   */
 341:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 342:Core/Src/main.c **** {
 244              		.loc 1 342 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              	.LVL10:
 249 0000 08B5     		push	{r3, lr}
 250              	.LCFI3:
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 3, -8
 253              		.cfi_offset 14, -4
 343:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 346:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 254              		.loc 1 346 0
 255 0002 0268     		ldr	r2, [r0]
 256 0004 034B     		ldr	r3, .L9
 257 0006 9A42     		cmp	r2, r3
 258 0008 00D0     		beq	.L8
 259              	.LVL11:
 260              	.L5:
 261 000a 08BD     		pop	{r3, pc}
 262              	.LVL12:
 263              	.L8:
 347:Core/Src/main.c ****     HAL_IncTick();
 264              		.loc 1 347 0
 265 000c FFF7FEFF 		bl	HAL_IncTick
 266              	.LVL13:
 348:Core/Src/main.c ****   }
 349:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 350:Core/Src/main.c **** 
 351:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 352:Core/Src/main.c **** }
 267              		.loc 1 352 0
 268 0010 FBE7     		b	.L5
 269              	.L10:
 270 0012 00BF     		.align	2
 271              	.L9:
 272 0014 00000140 		.word	1073807360
 273              		.cfi_endproc
 274              	.LFE136:
 276              		.section	.text.Error_Handler,"ax",%progbits
 277              		.align	1
 278              		.global	Error_Handler
 279              		.syntax unified
ARM GAS  /tmp/ccB0msW5.s 			page 12


 280              		.thumb
 281              		.thumb_func
 282              		.fpu fpv4-sp-d16
 284              	Error_Handler:
 285              	.LFB137:
 353:Core/Src/main.c **** 
 354:Core/Src/main.c **** /**
 355:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 356:Core/Src/main.c ****   * @retval None
 357:Core/Src/main.c ****   */
 358:Core/Src/main.c **** void Error_Handler(void)
 359:Core/Src/main.c **** {
 286              		.loc 1 359 0
 287              		.cfi_startproc
 288              		@ Volatile: function does not return.
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291              		@ link register save eliminated.
 292              	.LBB9:
 293              	.LBB10:
 294              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
ARM GAS  /tmp/ccB0msW5.s 			page 13


  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccB0msW5.s 			page 14


  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 295              		.loc 2 142 0
 296              		.syntax unified
 297              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 298 0000 72B6     		cpsid i
 299              	@ 0 "" 2
 300              		.thumb
 301              		.syntax unified
 302              	.L12:
ARM GAS  /tmp/ccB0msW5.s 			page 15


 303 0002 FEE7     		b	.L12
 304              	.LBE10:
 305              	.LBE9:
 306              		.cfi_endproc
 307              	.LFE137:
 309              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 310              		.align	1
 311              		.syntax unified
 312              		.thumb
 313              		.thumb_func
 314              		.fpu fpv4-sp-d16
 316              	MX_USART2_UART_Init:
 317              	.LFB134:
 223:Core/Src/main.c **** 
 318              		.loc 1 223 0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322 0000 08B5     		push	{r3, lr}
 323              	.LCFI4:
 324              		.cfi_def_cfa_offset 8
 325              		.cfi_offset 3, -8
 326              		.cfi_offset 14, -4
 232:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 327              		.loc 1 232 0
 328 0002 0A48     		ldr	r0, .L17
 329 0004 0A4B     		ldr	r3, .L17+4
 330 0006 0360     		str	r3, [r0]
 233:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 331              		.loc 1 233 0
 332 0008 4FF4E133 		mov	r3, #115200
 333 000c 4360     		str	r3, [r0, #4]
 234:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 334              		.loc 1 234 0
 335 000e 0023     		movs	r3, #0
 336 0010 8360     		str	r3, [r0, #8]
 235:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 337              		.loc 1 235 0
 338 0012 C360     		str	r3, [r0, #12]
 236:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 339              		.loc 1 236 0
 340 0014 0361     		str	r3, [r0, #16]
 237:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 341              		.loc 1 237 0
 342 0016 0C22     		movs	r2, #12
 343 0018 4261     		str	r2, [r0, #20]
 238:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 344              		.loc 1 238 0
 345 001a 8361     		str	r3, [r0, #24]
 239:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 346              		.loc 1 239 0
 347 001c C361     		str	r3, [r0, #28]
 240:Core/Src/main.c ****   {
 348              		.loc 1 240 0
 349 001e FFF7FEFF 		bl	HAL_UART_Init
 350              	.LVL14:
 351 0022 00B9     		cbnz	r0, .L16
ARM GAS  /tmp/ccB0msW5.s 			page 16


 352 0024 08BD     		pop	{r3, pc}
 353              	.L16:
 242:Core/Src/main.c ****   }
 354              		.loc 1 242 0
 355 0026 FFF7FEFF 		bl	Error_Handler
 356              	.LVL15:
 357              	.L18:
 358 002a 00BF     		.align	2
 359              	.L17:
 360 002c 00000000 		.word	huart2
 361 0030 00440040 		.word	1073759232
 362              		.cfi_endproc
 363              	.LFE134:
 365              		.section	.text.SystemClock_Config,"ax",%progbits
 366              		.align	1
 367              		.global	SystemClock_Config
 368              		.syntax unified
 369              		.thumb
 370              		.thumb_func
 371              		.fpu fpv4-sp-d16
 373              	SystemClock_Config:
 374              	.LFB133:
 177:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 375              		.loc 1 177 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 80
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379 0000 00B5     		push	{lr}
 380              	.LCFI5:
 381              		.cfi_def_cfa_offset 4
 382              		.cfi_offset 14, -4
 383 0002 95B0     		sub	sp, sp, #84
 384              	.LCFI6:
 385              		.cfi_def_cfa_offset 88
 178:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 386              		.loc 1 178 0
 387 0004 3022     		movs	r2, #48
 388 0006 0021     		movs	r1, #0
 389 0008 08A8     		add	r0, sp, #32
 390 000a FFF7FEFF 		bl	memset
 391              	.LVL16:
 179:Core/Src/main.c **** 
 392              		.loc 1 179 0
 393 000e 0023     		movs	r3, #0
 394 0010 0393     		str	r3, [sp, #12]
 395 0012 0493     		str	r3, [sp, #16]
 396 0014 0593     		str	r3, [sp, #20]
 397 0016 0693     		str	r3, [sp, #24]
 398 0018 0793     		str	r3, [sp, #28]
 399              	.LBB11:
 183:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 400              		.loc 1 183 0
 401 001a 0193     		str	r3, [sp, #4]
 402 001c 204A     		ldr	r2, .L25
 403 001e 116C     		ldr	r1, [r2, #64]
 404 0020 41F08051 		orr	r1, r1, #268435456
 405 0024 1164     		str	r1, [r2, #64]
ARM GAS  /tmp/ccB0msW5.s 			page 17


 406 0026 126C     		ldr	r2, [r2, #64]
 407 0028 02F08052 		and	r2, r2, #268435456
 408 002c 0192     		str	r2, [sp, #4]
 409 002e 019A     		ldr	r2, [sp, #4]
 410              	.LBE11:
 411              	.LBB12:
 184:Core/Src/main.c **** 
 412              		.loc 1 184 0
 413 0030 0293     		str	r3, [sp, #8]
 414 0032 1C4A     		ldr	r2, .L25+4
 415 0034 1368     		ldr	r3, [r2]
 416 0036 23F44043 		bic	r3, r3, #49152
 417 003a 43F40043 		orr	r3, r3, #32768
 418 003e 1360     		str	r3, [r2]
 419 0040 1368     		ldr	r3, [r2]
 420 0042 03F44043 		and	r3, r3, #49152
 421 0046 0293     		str	r3, [sp, #8]
 422 0048 029B     		ldr	r3, [sp, #8]
 423              	.LBE12:
 189:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 424              		.loc 1 189 0
 425 004a 0123     		movs	r3, #1
 426 004c 0893     		str	r3, [sp, #32]
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 427              		.loc 1 190 0
 428 004e 4FF48033 		mov	r3, #65536
 429 0052 0993     		str	r3, [sp, #36]
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 430              		.loc 1 191 0
 431 0054 0223     		movs	r3, #2
 432 0056 0E93     		str	r3, [sp, #56]
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 433              		.loc 1 192 0
 434 0058 4FF48003 		mov	r3, #4194304
 435 005c 0F93     		str	r3, [sp, #60]
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 436              		.loc 1 193 0
 437 005e 0423     		movs	r3, #4
 438 0060 1093     		str	r3, [sp, #64]
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 439              		.loc 1 194 0
 440 0062 A822     		movs	r2, #168
 441 0064 1192     		str	r2, [sp, #68]
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 442              		.loc 1 195 0
 443 0066 1293     		str	r3, [sp, #72]
 196:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 444              		.loc 1 196 0
 445 0068 0723     		movs	r3, #7
 446 006a 1393     		str	r3, [sp, #76]
 197:Core/Src/main.c ****   {
 447              		.loc 1 197 0
 448 006c 08A8     		add	r0, sp, #32
 449 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 450              	.LVL17:
 451 0072 80B9     		cbnz	r0, .L23
 204:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /tmp/ccB0msW5.s 			page 18


 452              		.loc 1 204 0
 453 0074 0F23     		movs	r3, #15
 454 0076 0393     		str	r3, [sp, #12]
 206:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 455              		.loc 1 206 0
 456 0078 0221     		movs	r1, #2
 457 007a 0491     		str	r1, [sp, #16]
 207:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 458              		.loc 1 207 0
 459 007c 0023     		movs	r3, #0
 460 007e 0593     		str	r3, [sp, #20]
 208:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 461              		.loc 1 208 0
 462 0080 4FF48052 		mov	r2, #4096
 463 0084 0692     		str	r2, [sp, #24]
 209:Core/Src/main.c **** 
 464              		.loc 1 209 0
 465 0086 0793     		str	r3, [sp, #28]
 211:Core/Src/main.c ****   {
 466              		.loc 1 211 0
 467 0088 03A8     		add	r0, sp, #12
 468 008a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 469              	.LVL18:
 470 008e 20B9     		cbnz	r0, .L24
 215:Core/Src/main.c **** 
 471              		.loc 1 215 0
 472 0090 15B0     		add	sp, sp, #84
 473              	.LCFI7:
 474              		.cfi_remember_state
 475              		.cfi_def_cfa_offset 4
 476              		@ sp needed
 477 0092 5DF804FB 		ldr	pc, [sp], #4
 478              	.L23:
 479              	.LCFI8:
 480              		.cfi_restore_state
 199:Core/Src/main.c ****   }
 481              		.loc 1 199 0
 482 0096 FFF7FEFF 		bl	Error_Handler
 483              	.LVL19:
 484              	.L24:
 213:Core/Src/main.c ****   }
 485              		.loc 1 213 0
 486 009a FFF7FEFF 		bl	Error_Handler
 487              	.LVL20:
 488              	.L26:
 489 009e 00BF     		.align	2
 490              	.L25:
 491 00a0 00380240 		.word	1073887232
 492 00a4 00700040 		.word	1073770496
 493              		.cfi_endproc
 494              	.LFE133:
 496              		.section	.text.main,"ax",%progbits
 497              		.align	1
 498              		.global	main
 499              		.syntax unified
 500              		.thumb
 501              		.thumb_func
ARM GAS  /tmp/ccB0msW5.s 			page 19


 502              		.fpu fpv4-sp-d16
 504              	main:
 505              	.LFB132:
  71:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 506              		.loc 1 71 0
 507              		.cfi_startproc
 508              		@ Volatile: function does not return.
 509              		@ args = 0, pretend = 0, frame = 40
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511 0000 00B5     		push	{lr}
 512              	.LCFI9:
 513              		.cfi_def_cfa_offset 4
 514              		.cfi_offset 14, -4
 515 0002 8DB0     		sub	sp, sp, #52
 516              	.LCFI10:
 517              		.cfi_def_cfa_offset 56
  79:Core/Src/main.c **** 
 518              		.loc 1 79 0
 519 0004 FFF7FEFF 		bl	HAL_Init
 520              	.LVL21:
  86:Core/Src/main.c **** 
 521              		.loc 1 86 0
 522 0008 FFF7FEFF 		bl	SystemClock_Config
 523              	.LVL22:
  93:Core/Src/main.c ****   MX_USART2_UART_Init();
 524              		.loc 1 93 0
 525 000c FFF7FEFF 		bl	MX_GPIO_Init
 526              	.LVL23:
  94:Core/Src/main.c **** 
 527              		.loc 1 94 0
 528 0010 FFF7FEFF 		bl	MX_USART2_UART_Init
 529              	.LVL24:
  97:Core/Src/main.c **** 
 530              		.loc 1 97 0
 531 0014 FFF7FEFF 		bl	usb_device_init
 532              	.LVL25:
  99:Core/Src/main.c **** 
 533              		.loc 1 99 0
 534 0018 FFF7FEFF 		bl	ili9341_init
 535              	.LVL26:
 102:Core/Src/main.c ****   uint8_t id2[2];
 536              		.loc 1 102 0
 537 001c 0BA8     		add	r0, sp, #44
 538 001e FFF7FEFF 		bl	ili9341_get_id4
 539              	.LVL27:
 104:Core/Src/main.c ****   lcd_set_rotation(0);
 540              		.loc 1 104 0
 541 0022 0AA8     		add	r0, sp, #40
 542 0024 FFF7FEFF 		bl	ili9341_get_id3
 543              	.LVL28:
 105:Core/Src/main.c ****   ili9341_set_CTRL_display();
 544              		.loc 1 105 0
 545 0028 0020     		movs	r0, #0
 546 002a FFF7FEFF 		bl	lcd_set_rotation
 547              	.LVL29:
 106:Core/Src/main.c ****   ili9341_set_display_brightness();
 548              		.loc 1 106 0
ARM GAS  /tmp/ccB0msW5.s 			page 20


 549 002e FFF7FEFF 		bl	ili9341_set_CTRL_display
 550              	.LVL30:
 107:Core/Src/main.c ****   uint8_t brightness[2];
 551              		.loc 1 107 0
 552 0032 FFF7FEFF 		bl	ili9341_set_display_brightness
 553              	.LVL31:
 109:Core/Src/main.c ****   uint8_t display_format[2];
 554              		.loc 1 109 0
 555 0036 09A8     		add	r0, sp, #36
 556 0038 FFF7FEFF 		bl	ili9341_get_display_brightness
 557              	.LVL32:
 111:Core/Src/main.c **** 
 558              		.loc 1 111 0
 559 003c 08A8     		add	r0, sp, #32
 560 003e FFF7FEFF 		bl	ili9341_get_display_pixel_format
 561              	.LVL33:
 113:Core/Src/main.c ****   uint8_t ctrl_display[2];
 562              		.loc 1 113 0
 563 0042 FFF7FEFF 		bl	ili9341_set_CTRL_display
 564              	.LVL34:
 115:Core/Src/main.c **** 
 565              		.loc 1 115 0
 566 0046 07A8     		add	r0, sp, #28
 567 0048 FFF7FEFF 		bl	ili9341_get_CTRL_display
 568              	.LVL35:
 118:Core/Src/main.c ****   uint8_t display_signal_mode[2];
 569              		.loc 1 118 0
 570 004c FFF7FEFF 		bl	ili9341_set_tearing_effect_line_on
 571              	.LVL36:
 120:Core/Src/main.c ****   
 572              		.loc 1 120 0
 573 0050 06A8     		add	r0, sp, #24
 574 0052 FFF7FEFF 		bl	ili9341_get_display_signal_mode
 575              	.LVL37:
 124:Core/Src/main.c ****   /*
 576              		.loc 1 124 0
 577 0056 4FF6FF70 		movw	r0, #65535
 578 005a FFF7FEFF 		bl	lcd_clear_all
 579              	.LVL38:
 150:Core/Src/main.c ****   /* USER CODE END 2 */
 580              		.loc 1 150 0
 581 005e 0C4B     		ldr	r3, .L30
 582 0060 02AC     		add	r4, sp, #8
 583 0062 0FCB     		ldm	r3, {r0, r1, r2, r3}
 584 0064 84E80F00 		stm	r4, {r0, r1, r2, r3}
 585              	.L28:
 162:Core/Src/main.c ****     // lcd_continuous_scroll();
 586              		.loc 1 162 0 discriminator 1
 587 0068 1021     		movs	r1, #16
 588 006a 02A8     		add	r0, sp, #8
 589 006c FFF7FEFF 		bl	usbd_transmit
 590              	.LVL39:
 164:Core/Src/main.c **** 	  lcd_write_message(lcd_string, 0, 0, 1, BLUE, WHITE);
 591              		.loc 1 164 0 discriminator 1
 592 0070 4FF47A70 		mov	r0, #1000
 593 0074 FFF7FEFF 		bl	HAL_Delay
 594              	.LVL40:
ARM GAS  /tmp/ccB0msW5.s 			page 21


 165:Core/Src/main.c ****     /* USER CODE END WHILE */
 595              		.loc 1 165 0 discriminator 1
 596 0078 4FF6FF73 		movw	r3, #65535
 597 007c 0193     		str	r3, [sp, #4]
 598 007e 1F23     		movs	r3, #31
 599 0080 0093     		str	r3, [sp]
 600 0082 0123     		movs	r3, #1
 601 0084 0022     		movs	r2, #0
 602 0086 1146     		mov	r1, r2
 603 0088 0248     		ldr	r0, .L30+4
 604 008a FFF7FEFF 		bl	lcd_write_message
 605              	.LVL41:
 606 008e EBE7     		b	.L28
 607              	.L31:
 608              		.align	2
 609              	.L30:
 610 0090 00000000 		.word	.LC0
 611 0094 00000000 		.word	lcd_string
 612              		.cfi_endproc
 613              	.LFE132:
 615              		.comm	cdc_buffer,64,4
 616              		.comm	hpcd_USB_OTG_FS,1292,4
 617              		.comm	huart2,68,4
 618              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 619              		.align	2
 620              	.LC0:
 621 0000 48656C6C 		.ascii	"Hello, World!\015\012\000"
 621      6F2C2057 
 621      6F726C64 
 621      210D0A00 
 622              		.text
 623              	.Letext0:
 624              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 625              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 626              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 627              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 628              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 629              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 630              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 631              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 632              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 633              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 634              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 635              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 636              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usb.h"
 637              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pcd.h"
 638              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 639              		.file 18 "/usr/include/newlib/sys/lock.h"
 640              		.file 19 "/usr/include/newlib/sys/_types.h"
 641              		.file 20 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 642              		.file 21 "/usr/include/newlib/sys/reent.h"
 643              		.file 22 "application-library/ili9341-lcd/ili9341.h"
 644              		.file 23 "/usr/include/newlib/stdlib.h"
 645              		.file 24 "application-library/usb-device/usb-cdc-device.h"
ARM GAS  /tmp/ccB0msW5.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccB0msW5.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccB0msW5.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccB0msW5.s:226    .text.MX_GPIO_Init:0000000000000130 $d
     /tmp/ccB0msW5.s:235    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccB0msW5.s:242    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccB0msW5.s:272    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/ccB0msW5.s:277    .text.Error_Handler:0000000000000000 $t
     /tmp/ccB0msW5.s:284    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccB0msW5.s:310    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccB0msW5.s:316    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccB0msW5.s:360    .text.MX_USART2_UART_Init:000000000000002c $d
                            *COM*:0000000000000044 huart2
     /tmp/ccB0msW5.s:366    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccB0msW5.s:373    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccB0msW5.s:491    .text.SystemClock_Config:00000000000000a0 $d
     /tmp/ccB0msW5.s:497    .text.main:0000000000000000 $t
     /tmp/ccB0msW5.s:504    .text.main:0000000000000000 main
     /tmp/ccB0msW5.s:610    .text.main:0000000000000090 $d
                            *COM*:0000000000000040 cdc_buffer
                            *COM*:000000000000050c hpcd_USB_OTG_FS
     /tmp/ccB0msW5.s:619    .rodata.main.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_IncTick
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
usb_device_init
ili9341_init
ili9341_get_id4
ili9341_get_id3
lcd_set_rotation
ili9341_set_CTRL_display
ili9341_set_display_brightness
ili9341_get_display_brightness
ili9341_get_display_pixel_format
ili9341_get_CTRL_display
ili9341_set_tearing_effect_line_on
ili9341_get_display_signal_mode
lcd_clear_all
usbd_transmit
HAL_Delay
lcd_write_message
lcd_string
