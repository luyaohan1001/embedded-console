ARM GAS  /tmp/ccdNI3SV.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.OTG_FS_IRQHandler,"ax",%progbits
  18              		.align	1
  19              		.global	OTG_FS_IRQHandler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	OTG_FS_IRQHandler:
  26              	.LFB130:
  27              		.file 1 "Core/Src/stm32f4xx_it.c"
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f4xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f4xx_it.c ****   *
  16:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f4xx_it.c ****   */
  18:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f4xx_it.c **** 
  20:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f4xx_it.c **** #include "main.h"
  22:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  23:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f4xx_it.c **** 
  27:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32f4xx_it.c **** 
  30:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
  31:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccdNI3SV.s 			page 2


  32:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32f4xx_it.c **** 
  35:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32f4xx_it.c **** 
  37:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32f4xx_it.c **** 
  40:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32f4xx_it.c **** 
  42:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32f4xx_it.c **** 
  45:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32f4xx_it.c **** 
  47:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32f4xx_it.c **** 
  50:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32f4xx_it.c **** 
  52:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32f4xx_it.c **** 
  55:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32f4xx_it.c **** 
  57:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim1;
  59:Core/Src/stm32f4xx_it.c **** 
  60:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  61:Core/Src/stm32f4xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_OTG_FS;
  62:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  63:Core/Src/stm32f4xx_it.c **** 
  64:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  65:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  66:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  67:Core/Src/stm32f4xx_it.c **** 
  68:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  69:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
  70:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
  71:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
  72:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
  73:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  74:Core/Src/stm32f4xx_it.c **** 
  75:Core/Src/stm32f4xx_it.c **** /**
  76:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USB On The Go FS global interrupt.
  77:Core/Src/stm32f4xx_it.c ****   */
  78:Core/Src/stm32f4xx_it.c **** void OTG_FS_IRQHandler(void)
  79:Core/Src/stm32f4xx_it.c **** {
  28              		.loc 1 79 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
ARM GAS  /tmp/ccdNI3SV.s 			page 3


  80:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN OTG_FS_IRQn 0 */
  81:Core/Src/stm32f4xx_it.c **** 
  82:Core/Src/stm32f4xx_it.c ****   /* USER CODE END OTG_FS_IRQn 0 */
  83:Core/Src/stm32f4xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_OTG_FS);
  37              		.loc 1 83 0
  38 0002 0248     		ldr	r0, .L3
  39 0004 FFF7FEFF 		bl	HAL_PCD_IRQHandler
  40              	.LVL0:
  41 0008 08BD     		pop	{r3, pc}
  42              	.L4:
  43 000a 00BF     		.align	2
  44              	.L3:
  45 000c 00000000 		.word	hpcd_USB_OTG_FS
  46              		.cfi_endproc
  47              	.LFE130:
  49              		.section	.text.NMI_Handler,"ax",%progbits
  50              		.align	1
  51              		.global	NMI_Handler
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  55              		.fpu fpv4-sp-d16
  57              	NMI_Handler:
  58              	.LFB131:
  84:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN OTG_FS_IRQn 1 */
  85:Core/Src/stm32f4xx_it.c **** 
  86:Core/Src/stm32f4xx_it.c ****   /* USER CODE END OTG_FS_IRQn 1 */
  87:Core/Src/stm32f4xx_it.c **** }
  88:Core/Src/stm32f4xx_it.c **** 
  89:Core/Src/stm32f4xx_it.c **** 
  90:Core/Src/stm32f4xx_it.c **** /**
  91:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  92:Core/Src/stm32f4xx_it.c ****   */
  93:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  94:Core/Src/stm32f4xx_it.c **** {
  59              		.loc 1 94 0
  60              		.cfi_startproc
  61              		@ Volatile: function does not return.
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              		@ link register save eliminated.
  65              	.L6:
  66 0000 FEE7     		b	.L6
  67              		.cfi_endproc
  68              	.LFE131:
  70              		.section	.text.HardFault_Handler,"ax",%progbits
  71              		.align	1
  72              		.global	HardFault_Handler
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  76              		.fpu fpv4-sp-d16
  78              	HardFault_Handler:
  79              	.LFB132:
  95:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  96:Core/Src/stm32f4xx_it.c **** 
  97:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
ARM GAS  /tmp/ccdNI3SV.s 			page 4


  98:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  99:Core/Src/stm32f4xx_it.c ****   while (1)
 100:Core/Src/stm32f4xx_it.c ****   {
 101:Core/Src/stm32f4xx_it.c ****   }
 102:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
 103:Core/Src/stm32f4xx_it.c **** }
 104:Core/Src/stm32f4xx_it.c **** 
 105:Core/Src/stm32f4xx_it.c **** /**
 106:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
 107:Core/Src/stm32f4xx_it.c ****   */
 108:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
 109:Core/Src/stm32f4xx_it.c **** {
  80              		.loc 1 109 0
  81              		.cfi_startproc
  82              		@ Volatile: function does not return.
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85              		@ link register save eliminated.
  86              	.L8:
  87 0000 FEE7     		b	.L8
  88              		.cfi_endproc
  89              	.LFE132:
  91              		.section	.text.MemManage_Handler,"ax",%progbits
  92              		.align	1
  93              		.global	MemManage_Handler
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu fpv4-sp-d16
  99              	MemManage_Handler:
 100              	.LFB133:
 110:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
 111:Core/Src/stm32f4xx_it.c **** 
 112:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
 113:Core/Src/stm32f4xx_it.c ****   while (1)
 114:Core/Src/stm32f4xx_it.c ****   {
 115:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 116:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 117:Core/Src/stm32f4xx_it.c ****   }
 118:Core/Src/stm32f4xx_it.c **** }
 119:Core/Src/stm32f4xx_it.c **** 
 120:Core/Src/stm32f4xx_it.c **** /**
 121:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 122:Core/Src/stm32f4xx_it.c ****   */
 123:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 124:Core/Src/stm32f4xx_it.c **** {
 101              		.loc 1 124 0
 102              		.cfi_startproc
 103              		@ Volatile: function does not return.
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 107              	.L10:
 108 0000 FEE7     		b	.L10
 109              		.cfi_endproc
 110              	.LFE133:
 112              		.section	.text.BusFault_Handler,"ax",%progbits
ARM GAS  /tmp/ccdNI3SV.s 			page 5


 113              		.align	1
 114              		.global	BusFault_Handler
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 118              		.fpu fpv4-sp-d16
 120              	BusFault_Handler:
 121              	.LFB134:
 125:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 126:Core/Src/stm32f4xx_it.c **** 
 127:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 128:Core/Src/stm32f4xx_it.c ****   while (1)
 129:Core/Src/stm32f4xx_it.c ****   {
 130:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 131:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 132:Core/Src/stm32f4xx_it.c ****   }
 133:Core/Src/stm32f4xx_it.c **** }
 134:Core/Src/stm32f4xx_it.c **** 
 135:Core/Src/stm32f4xx_it.c **** /**
 136:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 137:Core/Src/stm32f4xx_it.c ****   */
 138:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 139:Core/Src/stm32f4xx_it.c **** {
 122              		.loc 1 139 0
 123              		.cfi_startproc
 124              		@ Volatile: function does not return.
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 128              	.L12:
 129 0000 FEE7     		b	.L12
 130              		.cfi_endproc
 131              	.LFE134:
 133              		.section	.text.UsageFault_Handler,"ax",%progbits
 134              		.align	1
 135              		.global	UsageFault_Handler
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 139              		.fpu fpv4-sp-d16
 141              	UsageFault_Handler:
 142              	.LFB135:
 140:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 141:Core/Src/stm32f4xx_it.c **** 
 142:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 143:Core/Src/stm32f4xx_it.c ****   while (1)
 144:Core/Src/stm32f4xx_it.c ****   {
 145:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 146:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 147:Core/Src/stm32f4xx_it.c ****   }
 148:Core/Src/stm32f4xx_it.c **** }
 149:Core/Src/stm32f4xx_it.c **** 
 150:Core/Src/stm32f4xx_it.c **** /**
 151:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 152:Core/Src/stm32f4xx_it.c ****   */
 153:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 154:Core/Src/stm32f4xx_it.c **** {
ARM GAS  /tmp/ccdNI3SV.s 			page 6


 143              		.loc 1 154 0
 144              		.cfi_startproc
 145              		@ Volatile: function does not return.
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 149              	.L14:
 150 0000 FEE7     		b	.L14
 151              		.cfi_endproc
 152              	.LFE135:
 154              		.section	.text.SVC_Handler,"ax",%progbits
 155              		.align	1
 156              		.global	SVC_Handler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 160              		.fpu fpv4-sp-d16
 162              	SVC_Handler:
 163              	.LFB136:
 155:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 156:Core/Src/stm32f4xx_it.c **** 
 157:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 158:Core/Src/stm32f4xx_it.c ****   while (1)
 159:Core/Src/stm32f4xx_it.c ****   {
 160:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 161:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 162:Core/Src/stm32f4xx_it.c ****   }
 163:Core/Src/stm32f4xx_it.c **** }
 164:Core/Src/stm32f4xx_it.c **** 
 165:Core/Src/stm32f4xx_it.c **** /**
 166:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 167:Core/Src/stm32f4xx_it.c ****   */
 168:Core/Src/stm32f4xx_it.c **** void SVC_Handler(void)
 169:Core/Src/stm32f4xx_it.c **** {
 164              		.loc 1 169 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
 169 0000 7047     		bx	lr
 170              		.cfi_endproc
 171              	.LFE136:
 173              		.section	.text.DebugMon_Handler,"ax",%progbits
 174              		.align	1
 175              		.global	DebugMon_Handler
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 179              		.fpu fpv4-sp-d16
 181              	DebugMon_Handler:
 182              	.LFB137:
 170:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 171:Core/Src/stm32f4xx_it.c **** 
 172:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 173:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 174:Core/Src/stm32f4xx_it.c **** 
 175:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
ARM GAS  /tmp/ccdNI3SV.s 			page 7


 176:Core/Src/stm32f4xx_it.c **** }
 177:Core/Src/stm32f4xx_it.c **** 
 178:Core/Src/stm32f4xx_it.c **** /**
 179:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 180:Core/Src/stm32f4xx_it.c ****   */
 181:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 182:Core/Src/stm32f4xx_it.c **** {
 183              		.loc 1 182 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 188 0000 7047     		bx	lr
 189              		.cfi_endproc
 190              	.LFE137:
 192              		.section	.text.PendSV_Handler,"ax",%progbits
 193              		.align	1
 194              		.global	PendSV_Handler
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv4-sp-d16
 200              	PendSV_Handler:
 201              	.LFB138:
 183:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 184:Core/Src/stm32f4xx_it.c **** 
 185:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 186:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 187:Core/Src/stm32f4xx_it.c **** 
 188:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 189:Core/Src/stm32f4xx_it.c **** }
 190:Core/Src/stm32f4xx_it.c **** 
 191:Core/Src/stm32f4xx_it.c **** /**
 192:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 193:Core/Src/stm32f4xx_it.c ****   */
 194:Core/Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 195:Core/Src/stm32f4xx_it.c **** {
 202              		.loc 1 195 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              		@ link register save eliminated.
 207 0000 7047     		bx	lr
 208              		.cfi_endproc
 209              	.LFE138:
 211              		.section	.text.SysTick_Handler,"ax",%progbits
 212              		.align	1
 213              		.global	SysTick_Handler
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 217              		.fpu fpv4-sp-d16
 219              	SysTick_Handler:
 220              	.LFB139:
 196:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 197:Core/Src/stm32f4xx_it.c **** 
 198:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
ARM GAS  /tmp/ccdNI3SV.s 			page 8


 199:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 200:Core/Src/stm32f4xx_it.c **** 
 201:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 202:Core/Src/stm32f4xx_it.c **** }
 203:Core/Src/stm32f4xx_it.c **** 
 204:Core/Src/stm32f4xx_it.c **** /**
 205:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 206:Core/Src/stm32f4xx_it.c ****   */
 207:Core/Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 208:Core/Src/stm32f4xx_it.c **** {
 221              		.loc 1 208 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 226 0000 7047     		bx	lr
 227              		.cfi_endproc
 228              	.LFE139:
 230              		.section	.text.TIM1_UP_TIM10_IRQHandler,"ax",%progbits
 231              		.align	1
 232              		.global	TIM1_UP_TIM10_IRQHandler
 233              		.syntax unified
 234              		.thumb
 235              		.thumb_func
 236              		.fpu fpv4-sp-d16
 238              	TIM1_UP_TIM10_IRQHandler:
 239              	.LFB140:
 209:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 210:Core/Src/stm32f4xx_it.c **** 
 211:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 212:Core/Src/stm32f4xx_it.c **** 
 213:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 214:Core/Src/stm32f4xx_it.c **** 
 215:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 216:Core/Src/stm32f4xx_it.c **** }
 217:Core/Src/stm32f4xx_it.c **** 
 218:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 219:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 220:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 221:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 222:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 223:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 224:Core/Src/stm32f4xx_it.c **** 
 225:Core/Src/stm32f4xx_it.c **** /**
 226:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
 227:Core/Src/stm32f4xx_it.c ****   */
 228:Core/Src/stm32f4xx_it.c **** void TIM1_UP_TIM10_IRQHandler(void)
 229:Core/Src/stm32f4xx_it.c **** {
 240              		.loc 1 229 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244              		.loc 1 229 0
 245 0000 08B5     		push	{r3, lr}
 246              	.LCFI1:
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 3, -8
ARM GAS  /tmp/ccdNI3SV.s 			page 9


 249              		.cfi_offset 14, -4
 230:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */
 231:Core/Src/stm32f4xx_it.c **** 
 232:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
 233:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 250              		.loc 1 233 0
 251 0002 0248     		ldr	r0, .L21
 252 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 253              	.LVL1:
 254 0008 08BD     		pop	{r3, pc}
 255              	.L22:
 256 000a 00BF     		.align	2
 257              	.L21:
 258 000c 00000000 		.word	htim1
 259              		.cfi_endproc
 260              	.LFE140:
 262              		.text
 263              	.Letext0:
 264              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 265              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 266              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 267              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 268              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 269              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 270              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 271              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 272              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usb.h"
 273              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pcd.h"
 274              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccdNI3SV.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccdNI3SV.s:18     .text.OTG_FS_IRQHandler:0000000000000000 $t
     /tmp/ccdNI3SV.s:25     .text.OTG_FS_IRQHandler:0000000000000000 OTG_FS_IRQHandler
     /tmp/ccdNI3SV.s:45     .text.OTG_FS_IRQHandler:000000000000000c $d
     /tmp/ccdNI3SV.s:50     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccdNI3SV.s:57     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccdNI3SV.s:71     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccdNI3SV.s:78     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccdNI3SV.s:92     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccdNI3SV.s:99     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccdNI3SV.s:113    .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccdNI3SV.s:120    .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccdNI3SV.s:134    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccdNI3SV.s:141    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccdNI3SV.s:155    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccdNI3SV.s:162    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccdNI3SV.s:174    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccdNI3SV.s:181    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccdNI3SV.s:193    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccdNI3SV.s:200    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccdNI3SV.s:212    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccdNI3SV.s:219    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccdNI3SV.s:231    .text.TIM1_UP_TIM10_IRQHandler:0000000000000000 $t
     /tmp/ccdNI3SV.s:238    .text.TIM1_UP_TIM10_IRQHandler:0000000000000000 TIM1_UP_TIM10_IRQHandler
     /tmp/ccdNI3SV.s:258    .text.TIM1_UP_TIM10_IRQHandler:000000000000000c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_PCD_IRQHandler
hpcd_USB_OTG_FS
HAL_TIM_IRQHandler
htim1
