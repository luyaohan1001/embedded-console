ARM GAS  /tmp/cc0cESOd.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"nrf24.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.nRF24_gpio_initialize,"ax",%progbits
  18              		.align	1
  19              		.global	nRF24_gpio_initialize
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	nRF24_gpio_initialize:
  26              	.LFB131:
  27              		.file 1 "application-library/nrf24/nrf24.c"
   1:application-library/nrf24/nrf24.c **** /**
   2:application-library/nrf24/nrf24.c ****   ******** ******** ******** ******** ******** ******** ******** ******** ******** ******** *******
   3:application-library/nrf24/nrf24.c ****   * @file      :     nRF24.c
   4:application-library/nrf24/nrf24.c ****   * @author    :     Luyao Han
   5:application-library/nrf24/nrf24.c ****   * @email     :     luyaohan1001@gmail.com
   6:application-library/nrf24/nrf24.c ****   * @brief     :     C library for Nordic nRF24L01+ (or nRF24L01p) 2.4GHz wireless transceiver.
   7:application-library/nrf24/nrf24.c ****   * @date      :     04-21-2022
   8:application-library/nrf24/nrf24.c ****   * @note      :     The library strictly follows "nRF24L01+ Single Chip 2.4GHz Transceiver Product
   9:application-library/nrf24/nrf24.c **** 	*                  On the fresh import of this library. How do I get nRF24L01+ working?
  10:application-library/nrf24/nrf24.c **** 	*                    1. Setup debugger such as OpenOCD. So you can single step debug.
  11:application-library/nrf24/nrf24.c **** 	*                    2. Setup UART serial connection. Make sure "Hello World\n" printing is possib
  12:application-library/nrf24/nrf24.c **** 	*                    3. TODO: Modify the platform dependent functions labeled in nrf24.h (< 2 mins
  13:application-library/nrf24/nrf24.c **** 	*                    3. Without a RX nRF24, setup a TX nRF24 and run nRF24_tx_self_test();
  14:application-library/nrf24/nrf24.c **** 	*                    4. Finally if we get TX nRF24 working, work on a RX nRF24 module.
  15:application-library/nrf24/nrf24.c ****   * Copyright (C) 2022-2122 Luyao Han. The following code may be shared or modified for personal us
  16:application-library/nrf24/nrf24.c ****   ******** ******** ******** ******** ******** ******** ******** ******** ******** ******** *******
  17:application-library/nrf24/nrf24.c **** 
  18:application-library/nrf24/nrf24.c **** /* Includes ---------------------------------------------------------------------------------------
  19:application-library/nrf24/nrf24.c **** #include "nrf24.h"
  20:application-library/nrf24/nrf24.c **** 
  21:application-library/nrf24/nrf24.c **** /* Macro Define -----------------------------------------------------------------------------------
  22:application-library/nrf24/nrf24.c **** #define NRF24_DEBUG /* When defined, debug messages are logged through serial_print(). */
  23:application-library/nrf24/nrf24.c **** #define STM32F4xx
  24:application-library/nrf24/nrf24.c **** 
  25:application-library/nrf24/nrf24.c **** /* GPIO Physical Layer ----------------------------------------------------------------------------
  26:application-library/nrf24/nrf24.c **** 
  27:application-library/nrf24/nrf24.c **** /* GPIO Defined on STM32F401 */
  28:application-library/nrf24/nrf24.c **** /* CE     PC11  */
  29:application-library/nrf24/nrf24.c **** /* SCK    PD2  */
  30:application-library/nrf24/nrf24.c **** /* MOSI   PC10 */
  31:application-library/nrf24/nrf24.c **** /* CSN    PC12  */
ARM GAS  /tmp/cc0cESOd.s 			page 2


  32:application-library/nrf24/nrf24.c **** /* MISO   PC2 */
  33:application-library/nrf24/nrf24.c **** 
  34:application-library/nrf24/nrf24.c **** /* GPIO Defined on Raspberry Pi 4B - BCM2835 */
  35:application-library/nrf24/nrf24.c **** /*        Board    BCM      */
  36:application-library/nrf24/nrf24.c **** /* CE     #29      GPIO5    */
  37:application-library/nrf24/nrf24.c **** /* SCK    #31      GPIO6    */
  38:application-library/nrf24/nrf24.c **** /* MOSI   #33      GPIO13   */
  39:application-library/nrf24/nrf24.c **** /* CSN    #35      GPIO19   */
  40:application-library/nrf24/nrf24.c **** /* MISO   #37      GPIO26   */
  41:application-library/nrf24/nrf24.c **** 
  42:application-library/nrf24/nrf24.c **** /**
  43:application-library/nrf24/nrf24.c ****   * @brief Initialize GPIO modes for the nRF24L01+ SPI interface and CE (Chip Enable).
  44:application-library/nrf24/nrf24.c ****   */
  45:application-library/nrf24/nrf24.c **** __inline__ void nRF24_gpio_initialize()
  46:application-library/nrf24/nrf24.c **** {
  28              		.loc 1 46 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE131:
  37              		.section	.text.SPI_SCK_1,"ax",%progbits
  38              		.align	1
  39              		.global	SPI_SCK_1
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv4-sp-d16
  45              	SPI_SCK_1:
  46              	.LFB132:
  47:application-library/nrf24/nrf24.c ****   #if defined BCM2835
  48:application-library/nrf24/nrf24.c ****   bcm2835_gpio_fsel(RPI_BPLUS_GPIO_J8_29, BCM2835_GPIO_FSEL_OUTP); /* CE   */
  49:application-library/nrf24/nrf24.c ****   bcm2835_gpio_fsel(RPI_BPLUS_GPIO_J8_31, BCM2835_GPIO_FSEL_OUTP); /* SCK  */
  50:application-library/nrf24/nrf24.c ****   bcm2835_gpio_fsel(RPI_BPLUS_GPIO_J8_33, BCM2835_GPIO_FSEL_OUTP); /* MOSI */
  51:application-library/nrf24/nrf24.c ****   bcm2835_gpio_fsel(RPI_BPLUS_GPIO_J8_35, BCM2835_GPIO_FSEL_OUTP); /* CSN  */
  52:application-library/nrf24/nrf24.c ****   bcm2835_gpio_fsel(RPI_BPLUS_GPIO_J8_37, BCM2835_GPIO_FSEL_INPT); /* MISO */
  53:application-library/nrf24/nrf24.c **** 	#endif 
  54:application-library/nrf24/nrf24.c **** }
  55:application-library/nrf24/nrf24.c **** 
  56:application-library/nrf24/nrf24.c **** /**
  57:application-library/nrf24/nrf24.c ****   * @brief  Set high on SCK pin of SPI bus.
  58:application-library/nrf24/nrf24.c ****   * @param  None.
  59:application-library/nrf24/nrf24.c ****   * @retval None.
  60:application-library/nrf24/nrf24.c ****   * @note   This GPIO pin must be initialized. 
  61:application-library/nrf24/nrf24.c ****   *           Initialization code is not included in this library.
  62:application-library/nrf24/nrf24.c ****   */
  63:application-library/nrf24/nrf24.c **** __inline__ void SPI_SCK_1()
  64:application-library/nrf24/nrf24.c **** {
  47              		.loc 1 64 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		.loc 1 64 0
  52 0000 08B5     		push	{r3, lr}
  53              	.LCFI0:
ARM GAS  /tmp/cc0cESOd.s 			page 3


  54              		.cfi_def_cfa_offset 8
  55              		.cfi_offset 3, -8
  56              		.cfi_offset 14, -4
  65:application-library/nrf24/nrf24.c ****     #if defined STM32F4xx
  66:application-library/nrf24/nrf24.c ****     HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_SET);  
  57              		.loc 1 66 0
  58 0002 0122     		movs	r2, #1
  59 0004 0421     		movs	r1, #4
  60 0006 0248     		ldr	r0, .L4
  61 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
  62              	.LVL0:
  63 000c 08BD     		pop	{r3, pc}
  64              	.L5:
  65 000e 00BF     		.align	2
  66              	.L4:
  67 0010 000C0240 		.word	1073875968
  68              		.cfi_endproc
  69              	.LFE132:
  71              		.section	.text.SPI_SCK_0,"ax",%progbits
  72              		.align	1
  73              		.global	SPI_SCK_0
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu fpv4-sp-d16
  79              	SPI_SCK_0:
  80              	.LFB133:
  67:application-library/nrf24/nrf24.c ****     #elif defined BCM2835
  68:application-library/nrf24/nrf24.c ****     bcm2835_gpio_write(RPI_BPLUS_GPIO_J8_31, HIGH);
  69:application-library/nrf24/nrf24.c ****     #endif
  70:application-library/nrf24/nrf24.c **** }
  71:application-library/nrf24/nrf24.c **** 
  72:application-library/nrf24/nrf24.c **** /**
  73:application-library/nrf24/nrf24.c ****   * @brief  Set low on SCK pin of SPI bus.
  74:application-library/nrf24/nrf24.c ****   * @param  None.
  75:application-library/nrf24/nrf24.c ****   * @retval None.
  76:application-library/nrf24/nrf24.c ****   * @note   This GPIO pin must be initialized. 
  77:application-library/nrf24/nrf24.c ****   *           Initialization code is not part of this library.
  78:application-library/nrf24/nrf24.c ****   */
  79:application-library/nrf24/nrf24.c **** __inline__ void SPI_SCK_0()
  80:application-library/nrf24/nrf24.c **** {
  81              		.loc 1 80 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85 0000 08B5     		push	{r3, lr}
  86              	.LCFI1:
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 3, -8
  89              		.cfi_offset 14, -4
  81:application-library/nrf24/nrf24.c ****     #if defined STM32F4xx
  82:application-library/nrf24/nrf24.c ****     HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_RESET);  
  90              		.loc 1 82 0
  91 0002 0022     		movs	r2, #0
  92 0004 0421     		movs	r1, #4
  93 0006 0248     		ldr	r0, .L8
  94 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/cc0cESOd.s 			page 4


  95              	.LVL1:
  96 000c 08BD     		pop	{r3, pc}
  97              	.L9:
  98 000e 00BF     		.align	2
  99              	.L8:
 100 0010 000C0240 		.word	1073875968
 101              		.cfi_endproc
 102              	.LFE133:
 104              		.section	.text.SPI_MOSI_1,"ax",%progbits
 105              		.align	1
 106              		.global	SPI_MOSI_1
 107              		.syntax unified
 108              		.thumb
 109              		.thumb_func
 110              		.fpu fpv4-sp-d16
 112              	SPI_MOSI_1:
 113              	.LFB134:
  83:application-library/nrf24/nrf24.c ****     #elif defined BCM2835
  84:application-library/nrf24/nrf24.c ****     bcm2835_gpio_write(RPI_BPLUS_GPIO_J8_31, LOW);
  85:application-library/nrf24/nrf24.c ****     #endif
  86:application-library/nrf24/nrf24.c **** } 
  87:application-library/nrf24/nrf24.c **** 
  88:application-library/nrf24/nrf24.c **** /**
  89:application-library/nrf24/nrf24.c ****   * @brief  Set high on MOSI pin of SPI bus.
  90:application-library/nrf24/nrf24.c ****   * @param  None.
  91:application-library/nrf24/nrf24.c ****   * @retval None.
  92:application-library/nrf24/nrf24.c ****   * @note   This GPIO pin must be initialized. 
  93:application-library/nrf24/nrf24.c ****   *           Initialization code is not part of this library.
  94:application-library/nrf24/nrf24.c ****   */
  95:application-library/nrf24/nrf24.c **** __inline__ void SPI_MOSI_1()
  96:application-library/nrf24/nrf24.c **** {
 114              		.loc 1 96 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118 0000 08B5     		push	{r3, lr}
 119              	.LCFI2:
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 3, -8
 122              		.cfi_offset 14, -4
  97:application-library/nrf24/nrf24.c ****     #if defined STM32F4xx
  98:application-library/nrf24/nrf24.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_10, GPIO_PIN_SET);  
 123              		.loc 1 98 0
 124 0002 0122     		movs	r2, #1
 125 0004 4FF48061 		mov	r1, #1024
 126 0008 0148     		ldr	r0, .L12
 127 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 128              	.LVL2:
 129 000e 08BD     		pop	{r3, pc}
 130              	.L13:
 131              		.align	2
 132              	.L12:
 133 0010 00080240 		.word	1073874944
 134              		.cfi_endproc
 135              	.LFE134:
 137              		.section	.text.SPI_MOSI_0,"ax",%progbits
 138              		.align	1
ARM GAS  /tmp/cc0cESOd.s 			page 5


 139              		.global	SPI_MOSI_0
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu fpv4-sp-d16
 145              	SPI_MOSI_0:
 146              	.LFB135:
  99:application-library/nrf24/nrf24.c ****     #elif defined BCM2835
 100:application-library/nrf24/nrf24.c ****     bcm2835_gpio_write(RPI_BPLUS_GPIO_J8_33, HIGH);
 101:application-library/nrf24/nrf24.c ****     #endif
 102:application-library/nrf24/nrf24.c **** }
 103:application-library/nrf24/nrf24.c **** 
 104:application-library/nrf24/nrf24.c **** /**
 105:application-library/nrf24/nrf24.c ****   * @brief  Set low on MOSI pin of SPI bus.
 106:application-library/nrf24/nrf24.c ****   * @param  None.
 107:application-library/nrf24/nrf24.c ****   * @retval None.
 108:application-library/nrf24/nrf24.c ****   * @note   This GPIO pin must be initialized. 
 109:application-library/nrf24/nrf24.c ****   *           Initialization code is not part of this library.
 110:application-library/nrf24/nrf24.c ****   */
 111:application-library/nrf24/nrf24.c **** __inline__ void SPI_MOSI_0()
 112:application-library/nrf24/nrf24.c **** {
 147              		.loc 1 112 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151 0000 08B5     		push	{r3, lr}
 152              	.LCFI3:
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 3, -8
 155              		.cfi_offset 14, -4
 113:application-library/nrf24/nrf24.c ****     #if defined STM32F4xx
 114:application-library/nrf24/nrf24.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_10, GPIO_PIN_RESET);  
 156              		.loc 1 114 0
 157 0002 0022     		movs	r2, #0
 158 0004 4FF48061 		mov	r1, #1024
 159 0008 0148     		ldr	r0, .L16
 160 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 161              	.LVL3:
 162 000e 08BD     		pop	{r3, pc}
 163              	.L17:
 164              		.align	2
 165              	.L16:
 166 0010 00080240 		.word	1073874944
 167              		.cfi_endproc
 168              	.LFE135:
 170              		.section	.text.SPI_CS_1,"ax",%progbits
 171              		.align	1
 172              		.global	SPI_CS_1
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 176              		.fpu fpv4-sp-d16
 178              	SPI_CS_1:
 179              	.LFB136:
 115:application-library/nrf24/nrf24.c ****     #elif defined BCM2835
 116:application-library/nrf24/nrf24.c ****     bcm2835_gpio_write(RPI_BPLUS_GPIO_J8_33, LOW);
 117:application-library/nrf24/nrf24.c ****     #endif
ARM GAS  /tmp/cc0cESOd.s 			page 6


 118:application-library/nrf24/nrf24.c **** }
 119:application-library/nrf24/nrf24.c **** 
 120:application-library/nrf24/nrf24.c **** /**
 121:application-library/nrf24/nrf24.c ****   * @brief  Set high on CS pin of SPI bus.
 122:application-library/nrf24/nrf24.c ****   * @param  None.
 123:application-library/nrf24/nrf24.c ****   * @retval None.
 124:application-library/nrf24/nrf24.c ****   * @note   This GPIO pin must be initialized. 
 125:application-library/nrf24/nrf24.c ****   *           Initialization code is not part of this library.
 126:application-library/nrf24/nrf24.c ****   */
 127:application-library/nrf24/nrf24.c **** __inline__ void SPI_CS_1() 
 128:application-library/nrf24/nrf24.c **** {
 180              		.loc 1 128 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184 0000 08B5     		push	{r3, lr}
 185              	.LCFI4:
 186              		.cfi_def_cfa_offset 8
 187              		.cfi_offset 3, -8
 188              		.cfi_offset 14, -4
 129:application-library/nrf24/nrf24.c ****     /* CS High == CSN Low */
 130:application-library/nrf24/nrf24.c ****     #if defined STM32F4xx
 131:application-library/nrf24/nrf24.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_12, GPIO_PIN_RESET);  
 189              		.loc 1 131 0
 190 0002 0022     		movs	r2, #0
 191 0004 4FF48051 		mov	r1, #4096
 192 0008 0148     		ldr	r0, .L20
 193 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 194              	.LVL4:
 195 000e 08BD     		pop	{r3, pc}
 196              	.L21:
 197              		.align	2
 198              	.L20:
 199 0010 00080240 		.word	1073874944
 200              		.cfi_endproc
 201              	.LFE136:
 203              		.section	.text.SPI_CS_0,"ax",%progbits
 204              		.align	1
 205              		.global	SPI_CS_0
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu fpv4-sp-d16
 211              	SPI_CS_0:
 212              	.LFB137:
 132:application-library/nrf24/nrf24.c ****     #elif defined BCM2835
 133:application-library/nrf24/nrf24.c ****     bcm2835_gpio_write(RPI_BPLUS_GPIO_J8_35, LOW);
 134:application-library/nrf24/nrf24.c ****  
 135:application-library/nrf24/nrf24.c ****     #endif
 136:application-library/nrf24/nrf24.c **** }
 137:application-library/nrf24/nrf24.c **** 
 138:application-library/nrf24/nrf24.c **** /**
 139:application-library/nrf24/nrf24.c ****   * @brief  Set low on CS pin of SPI bus.
 140:application-library/nrf24/nrf24.c ****   * @param  None.
 141:application-library/nrf24/nrf24.c ****   * @retval None.
 142:application-library/nrf24/nrf24.c ****   * @note   This GPIO pin must be initialized. 
 143:application-library/nrf24/nrf24.c ****   *           Initialization code is not part of this library.
ARM GAS  /tmp/cc0cESOd.s 			page 7


 144:application-library/nrf24/nrf24.c ****   */
 145:application-library/nrf24/nrf24.c **** __inline__ void SPI_CS_0()
 146:application-library/nrf24/nrf24.c **** {
 213              		.loc 1 146 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217 0000 08B5     		push	{r3, lr}
 218              	.LCFI5:
 219              		.cfi_def_cfa_offset 8
 220              		.cfi_offset 3, -8
 221              		.cfi_offset 14, -4
 147:application-library/nrf24/nrf24.c ****     /* CS Low == CSN High */
 148:application-library/nrf24/nrf24.c ****     #if defined STM32F4xx
 149:application-library/nrf24/nrf24.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_12, GPIO_PIN_SET);
 222              		.loc 1 149 0
 223 0002 0122     		movs	r2, #1
 224 0004 4FF48051 		mov	r1, #4096
 225 0008 0148     		ldr	r0, .L24
 226 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 227              	.LVL5:
 228 000e 08BD     		pop	{r3, pc}
 229              	.L25:
 230              		.align	2
 231              	.L24:
 232 0010 00080240 		.word	1073874944
 233              		.cfi_endproc
 234              	.LFE137:
 236              		.section	.text.SPI_READ_MISO,"ax",%progbits
 237              		.align	1
 238              		.global	SPI_READ_MISO
 239              		.syntax unified
 240              		.thumb
 241              		.thumb_func
 242              		.fpu fpv4-sp-d16
 244              	SPI_READ_MISO:
 245              	.LFB138:
 150:application-library/nrf24/nrf24.c ****     #elif defined BCM2835
 151:application-library/nrf24/nrf24.c ****     bcm2835_gpio_write(RPI_BPLUS_GPIO_J8_35, HIGH);
 152:application-library/nrf24/nrf24.c ****     #endif
 153:application-library/nrf24/nrf24.c **** }
 154:application-library/nrf24/nrf24.c **** 
 155:application-library/nrf24/nrf24.c **** 
 156:application-library/nrf24/nrf24.c **** /**
 157:application-library/nrf24/nrf24.c ****   * @brief  Get pin-level on MISO pin of SPI bus.
 158:application-library/nrf24/nrf24.c ****   * @param  None
 159:application-library/nrf24/nrf24.c ****   * @retval None
 160:application-library/nrf24/nrf24.c ****   */
 161:application-library/nrf24/nrf24.c **** __inline__ bool SPI_READ_MISO()
 162:application-library/nrf24/nrf24.c **** {
 246              		.loc 1 162 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250 0000 08B5     		push	{r3, lr}
 251              	.LCFI6:
 252              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc0cESOd.s 			page 8


 253              		.cfi_offset 3, -8
 254              		.cfi_offset 14, -4
 163:application-library/nrf24/nrf24.c ****   #if defined STM32F4xx
 164:application-library/nrf24/nrf24.c ****   return (bool) HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_2);
 255              		.loc 1 164 0
 256 0002 0421     		movs	r1, #4
 257 0004 0348     		ldr	r0, .L28
 258 0006 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 259              	.LVL6:
 165:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 166:application-library/nrf24/nrf24.c ****   return (bcm2835_gpio_lev(RPI_BPLUS_GPIO_J8_37)) & 0x01; 
 167:application-library/nrf24/nrf24.c ****   #endif
 168:application-library/nrf24/nrf24.c **** }
 260              		.loc 1 168 0
 261 000a 0030     		adds	r0, r0, #0
 262 000c 18BF     		it	ne
 263 000e 0120     		movne	r0, #1
 264 0010 08BD     		pop	{r3, pc}
 265              	.L29:
 266 0012 00BF     		.align	2
 267              	.L28:
 268 0014 00080240 		.word	1073874944
 269              		.cfi_endproc
 270              	.LFE138:
 272              		.section	.text.serial_print,"ax",%progbits
 273              		.align	1
 274              		.global	serial_print
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 278              		.fpu fpv4-sp-d16
 280              	serial_print:
 281              	.LFB139:
 169:application-library/nrf24/nrf24.c **** 
 170:application-library/nrf24/nrf24.c **** /**
 171:application-library/nrf24/nrf24.c ****   * @brief   Print debug string through USART.
 172:application-library/nrf24/nrf24.c ****   * @param   p_message Pointer to a message string.
 173:application-library/nrf24/nrf24.c ****   * @retval  None.
 174:application-library/nrf24/nrf24.c ****   * @note    When testing on STM32F401RE Nucleo Board, the board supports virtual COM (serial) port
 175:application-library/nrf24/nrf24.c ****   *            Connecting a USB-TTL adapter such as CH340 to the 'TX/D1' on morpho connector will n
 176:application-library/nrf24/nrf24.c ****   *             In the datasheet it has been confirmed that the USART2 pins have been to multiplexe
 177:application-library/nrf24/nrf24.c ****   *             On the PC, look for port /dev/ttyACM0 as the virtual serial port in CuteCom / MiniC
 178:application-library/nrf24/nrf24.c ****   */
 179:application-library/nrf24/nrf24.c **** __inline__ void serial_print(char* p_message)
 180:application-library/nrf24/nrf24.c **** {
 282              		.loc 1 180 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              	.LVL7:
 287 0000 10B5     		push	{r4, lr}
 288              	.LCFI7:
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 4, -8
 291              		.cfi_offset 14, -4
 292 0002 0446     		mov	r4, r0
 181:application-library/nrf24/nrf24.c ****   /* Call STM32 HAL library function to UART, pass uart hander, string, length to UART. */
ARM GAS  /tmp/cc0cESOd.s 			page 9


 182:application-library/nrf24/nrf24.c ****   #if defined STM32F4xx
 183:application-library/nrf24/nrf24.c ****   HAL_UART_Transmit(&huart2, (uint8_t*)p_message, strlen(p_message), 100);
 293              		.loc 1 183 0
 294 0004 FFF7FEFF 		bl	strlen
 295              	.LVL8:
 296 0008 6423     		movs	r3, #100
 297 000a 82B2     		uxth	r2, r0
 298 000c 2146     		mov	r1, r4
 299 000e 0248     		ldr	r0, .L32
 300 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 301              	.LVL9:
 302 0014 10BD     		pop	{r4, pc}
 303              	.LVL10:
 304              	.L33:
 305 0016 00BF     		.align	2
 306              	.L32:
 307 0018 00000000 		.word	huart2
 308              		.cfi_endproc
 309              	.LFE139:
 311              		.section	.text.SPI_DELAY,"ax",%progbits
 312              		.align	1
 313              		.global	SPI_DELAY
 314              		.syntax unified
 315              		.thumb
 316              		.thumb_func
 317              		.fpu fpv4-sp-d16
 319              	SPI_DELAY:
 320              	.LFB142:
 184:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 185:application-library/nrf24/nrf24.c ****   printf(p_message);
 186:application-library/nrf24/nrf24.c ****   fflush(stdout);
 187:application-library/nrf24/nrf24.c ****   #endif
 188:application-library/nrf24/nrf24.c **** }
 189:application-library/nrf24/nrf24.c **** 
 190:application-library/nrf24/nrf24.c **** /**
 191:application-library/nrf24/nrf24.c ****   * @brief      Clock out (write) 8 bits on MOSI of SPI bus on SCK high. 
 192:application-library/nrf24/nrf24.c ****   *               SPI Mode = [CPOL = 0, CPHA = 0]. (Non-inverted clock and sample data on rising ed
 193:application-library/nrf24/nrf24.c ****   * @param[in]  tx_data One byte of data to transmit.
 194:application-library/nrf24/nrf24.c ****   * @retval     None.
 195:application-library/nrf24/nrf24.c ****   * @note  
 196:application-library/nrf24/nrf24.c ****   *   SPI Timing Requirement specified in section 8.3.2 SPI Timing of nRF24L01+ Product Specificati
 197:application-library/nrf24/nrf24.c ****   *   Endianess: Most Significant Bit First. Cn: Command Bits. Sn: Status Register bits. Dn: data b
 198:application-library/nrf24/nrf24.c ****   *
 199:application-library/nrf24/nrf24.c ****   *   Following is a diagram for time sequence:
 200:application-library/nrf24/nrf24.c ****   *   CSN ````\____________________________________________________________________________________
 201:application-library/nrf24/nrf24.c ****   *   MOSI______|C7|__|C6|__|C5|__|C4|__|C3|__|C2|__|C1|__|C0|______|D7|__|D6|__|D5|__|D4|__|D3|__|
 202:application-library/nrf24/nrf24.c ****   *             ^     ^     ^     ^     ^     ^     ^     ^         ^     ^     ^     ^     ^     ^
 203:application-library/nrf24/nrf24.c ****   *   SCK ______/``\__/``\__/``\__/``\__/``\__/``\__/``\__/``\______/``\__/``\__/``\__/``\__/``\__/
 204:application-library/nrf24/nrf24.c ****   *   MISO______|S7|__|S6|__|S5|__|S4|__|S3|__|S2|__|S1|__|S0|______XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
 205:application-library/nrf24/nrf24.c ****   *
 206:application-library/nrf24/nrf24.c ****   *   Pulse#     1     2     3     4     5     6     7     8         9     10    11    12    13    
 207:application-library/nrf24/nrf24.c ****   * 
 208:application-library/nrf24/nrf24.c ****   *   '^' indicates the clock rising pulse sampling MOSI data line. 
 209:application-library/nrf24/nrf24.c ****   *   MOSI data establish '|' arrives slightly before SCK clock rising edge '/' to satisfy setup-ti
 210:application-library/nrf24/nrf24.c ****   *     It is required Data to SCK setup-time > 2 ns.
 211:application-library/nrf24/nrf24.c ****   *   SCK falling edge '\' settles slightly after MOSI change back to 0 to satisfy hold-time.
 212:application-library/nrf24/nrf24.c ****   *     It is required SCK to Data hold > 2 ns.
ARM GAS  /tmp/cc0cESOd.s 			page 10


 213:application-library/nrf24/nrf24.c ****   */
 214:application-library/nrf24/nrf24.c **** void gpio_clockout_8_bits(uint8_t tx_data) 
 215:application-library/nrf24/nrf24.c **** {
 216:application-library/nrf24/nrf24.c ****   SPI_DELAY();
 217:application-library/nrf24/nrf24.c ****   /* Repeat for each bit in the tx_data. */
 218:application-library/nrf24/nrf24.c ****   for (int i = 0; i < 8; ++i) 
 219:application-library/nrf24/nrf24.c ****   {
 220:application-library/nrf24/nrf24.c ****       /* Clock Falling Edge */
 221:application-library/nrf24/nrf24.c ****       SPI_SCK_0();
 222:application-library/nrf24/nrf24.c ****       SPI_DELAY();
 223:application-library/nrf24/nrf24.c **** 
 224:application-library/nrf24/nrf24.c ****       /* Fetch the Most Significant Bit. */
 225:application-library/nrf24/nrf24.c ****       if(tx_data & 0x80) 
 226:application-library/nrf24/nrf24.c ****           SPI_MOSI_1();
 227:application-library/nrf24/nrf24.c ****       else
 228:application-library/nrf24/nrf24.c ****           SPI_MOSI_0();
 229:application-library/nrf24/nrf24.c **** 
 230:application-library/nrf24/nrf24.c ****       /* Setup Time */  
 231:application-library/nrf24/nrf24.c ****       SPI_DELAY();
 232:application-library/nrf24/nrf24.c **** 
 233:application-library/nrf24/nrf24.c ****       /* Clock Rising Edge - '^' Sampling in the diagram.*/
 234:application-library/nrf24/nrf24.c ****       SPI_SCK_1(); 
 235:application-library/nrf24/nrf24.c **** 
 236:application-library/nrf24/nrf24.c ****       /* Loads next bit. e.g. 10110011 << 1 = 01100110 */
 237:application-library/nrf24/nrf24.c ****       tx_data = tx_data << 1; 
 238:application-library/nrf24/nrf24.c **** 
 239:application-library/nrf24/nrf24.c ****       /* hold time */
 240:application-library/nrf24/nrf24.c ****       SPI_DELAY();
 241:application-library/nrf24/nrf24.c ****   }
 242:application-library/nrf24/nrf24.c **** 
 243:application-library/nrf24/nrf24.c ****   /* Make sure SPI clock set to 0 after the last bit has been clocked out. */
 244:application-library/nrf24/nrf24.c ****   SPI_SCK_0();
 245:application-library/nrf24/nrf24.c **** }
 246:application-library/nrf24/nrf24.c **** 
 247:application-library/nrf24/nrf24.c **** /**
 248:application-library/nrf24/nrf24.c ****   * @brief  Clock in (read) 8 bits from MISO of SPI bus on SCK high.
 249:application-library/nrf24/nrf24.c ****   *               SPI Mode = [CPOL = 0, CPHA = 0]. (Non-inverted clock and sample data on rising ed
 250:application-library/nrf24/nrf24.c ****   * @param  None
 251:application-library/nrf24/nrf24.c ****   * @retval A byte of read data.
 252:application-library/nrf24/nrf24.c ****   * @note
 253:application-library/nrf24/nrf24.c ****   *   SPI Timing Requirement specified in section 8.3.2 SPI Timing of nRF24L01+ Product Specificati
 254:application-library/nrf24/nrf24.c ****   *
 255:application-library/nrf24/nrf24.c ****   *   Endianess: Most Significant Bit first. Cn: Command bits. Sn: Status register bits. Dn: Data b
 256:application-library/nrf24/nrf24.c ****   *    
 257:application-library/nrf24/nrf24.c ****   *   Following is a diagram for time sequence:
 258:application-library/nrf24/nrf24.c ****   *   CSN ````\____________________________________________________________________________________
 259:application-library/nrf24/nrf24.c ****   *   MOSI______|C7|__|C6|__|C5|__|C4|__|C3|__|C2|__|C1|__|C0|______|XX|__|XX|__|XX|__|XX|__|XX|__|
 260:application-library/nrf24/nrf24.c ****   *             ^     ^     ^     ^     ^     ^     ^     ^         ^     ^     ^     ^     ^     ^
 261:application-library/nrf24/nrf24.c ****   *   SCK ______/``\__/``\__/``\__/``\__/``\__/``\__/``\__/``\______/``\__/``\__/``\__/``\__/``\__/
 262:application-library/nrf24/nrf24.c ****   *   MISO______|S7|__|S6|__|S5|__|S4|__|S3|__|S2|__|S1|__|S0|______|D0|__|D1|__|D2|__|D3|__|D4|__|
 263:application-library/nrf24/nrf24.c ****   *   Pulse#     1     2     3     4     5     6     7     8         9     10    11    12    13    
 264:application-library/nrf24/nrf24.c ****   *
 265:application-library/nrf24/nrf24.c ****   *   '^' indicates the clock rising pulse sampling MISO data line. 
 266:application-library/nrf24/nrf24.c ****   *   MISO data establish '|' arrives slightly before SCK clock rising edge '/' to satisfy setup-ti
 267:application-library/nrf24/nrf24.c ****   *     It is required Data to SCK setup-time > 2 ns.
 268:application-library/nrf24/nrf24.c ****   *   SCK falling edge '\' settles slightly after MISO change back to 0 to satisfy hold-time.
 269:application-library/nrf24/nrf24.c ****   *     It is required SCK to Data hold > 2 ns.
ARM GAS  /tmp/cc0cESOd.s 			page 11


 270:application-library/nrf24/nrf24.c ****   */
 271:application-library/nrf24/nrf24.c **** uint8_t gpio_clockin_8_bits(void)
 272:application-library/nrf24/nrf24.c **** {
 273:application-library/nrf24/nrf24.c ****   uint8_t rx_data = 0;
 274:application-library/nrf24/nrf24.c **** 
 275:application-library/nrf24/nrf24.c ****   SPI_DELAY();
 276:application-library/nrf24/nrf24.c **** 
 277:application-library/nrf24/nrf24.c ****   /* Repeat for each bit read from MISO. */
 278:application-library/nrf24/nrf24.c ****   for (int i=0; i < 8; ++i) 
 279:application-library/nrf24/nrf24.c ****   {
 280:application-library/nrf24/nrf24.c **** 
 281:application-library/nrf24/nrf24.c ****       /* Clock Falling Edge */
 282:application-library/nrf24/nrf24.c ****       SPI_SCK_0();
 283:application-library/nrf24/nrf24.c **** 
 284:application-library/nrf24/nrf24.c ****       /* Setup Time for MISO. MISO finished changnig before SCK rising edge. */  
 285:application-library/nrf24/nrf24.c ****       SPI_DELAY();
 286:application-library/nrf24/nrf24.c **** 
 287:application-library/nrf24/nrf24.c ****       /* Clock Rising Edge - '^' Sampling in the diagram.*/
 288:application-library/nrf24/nrf24.c ****       SPI_SCK_1();
 289:application-library/nrf24/nrf24.c **** 
 290:application-library/nrf24/nrf24.c ****       /* Setup Time for MISO. MISO starts change level on SCK rising edge. */  
 291:application-library/nrf24/nrf24.c ****       SPI_DELAY();
 292:application-library/nrf24/nrf24.c ****       
 293:application-library/nrf24/nrf24.c ****       /* Store the bit read from MISO. */
 294:application-library/nrf24/nrf24.c ****       rx_data = rx_data << 1; // Why shift first then OR'? range (0, 8) will need to shift only 7 t
 295:application-library/nrf24/nrf24.c ****       rx_data |= SPI_READ_MISO();
 296:application-library/nrf24/nrf24.c **** 
 297:application-library/nrf24/nrf24.c ****       /* hold time */
 298:application-library/nrf24/nrf24.c ****       SPI_DELAY();
 299:application-library/nrf24/nrf24.c ****   }
 300:application-library/nrf24/nrf24.c **** 
 301:application-library/nrf24/nrf24.c ****   /* Make sure SPI clock set to 0 after the last bit has been clocked in. */
 302:application-library/nrf24/nrf24.c ****   SPI_SCK_0();
 303:application-library/nrf24/nrf24.c ****   return rx_data;
 304:application-library/nrf24/nrf24.c **** }
 305:application-library/nrf24/nrf24.c ****   
 306:application-library/nrf24/nrf24.c **** 
 307:application-library/nrf24/nrf24.c **** 
 308:application-library/nrf24/nrf24.c **** /* SPI Datalink Layer------------------------------------------------------------------------------
 309:application-library/nrf24/nrf24.c **** 
 310:application-library/nrf24/nrf24.c **** /**
 311:application-library/nrf24/nrf24.c ****   * @brief  Provide on milisecond delay for SPI bus to satisfy timing requirement.
 312:application-library/nrf24/nrf24.c ****   * @param  None.
 313:application-library/nrf24/nrf24.c ****   * @retval None.
 314:application-library/nrf24/nrf24.c ****   */
 315:application-library/nrf24/nrf24.c **** void SPI_DELAY() 
 316:application-library/nrf24/nrf24.c **** {
 321              		.loc 1 316 0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325 0000 08B5     		push	{r3, lr}
 326              	.LCFI8:
 327              		.cfi_def_cfa_offset 8
 328              		.cfi_offset 3, -8
 329              		.cfi_offset 14, -4
 317:application-library/nrf24/nrf24.c ****   #if defined STM32F4xx
ARM GAS  /tmp/cc0cESOd.s 			page 12


 318:application-library/nrf24/nrf24.c ****   HAL_Delay(1); 
 330              		.loc 1 318 0
 331 0002 0120     		movs	r0, #1
 332 0004 FFF7FEFF 		bl	HAL_Delay
 333              	.LVL11:
 334 0008 08BD     		pop	{r3, pc}
 335              		.cfi_endproc
 336              	.LFE142:
 338              		.section	.text.gpio_clockout_8_bits,"ax",%progbits
 339              		.align	1
 340              		.global	gpio_clockout_8_bits
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv4-sp-d16
 346              	gpio_clockout_8_bits:
 347              	.LFB140:
 215:application-library/nrf24/nrf24.c ****   SPI_DELAY();
 348              		.loc 1 215 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352              	.LVL12:
 353 0000 38B5     		push	{r3, r4, r5, lr}
 354              	.LCFI9:
 355              		.cfi_def_cfa_offset 16
 356              		.cfi_offset 3, -16
 357              		.cfi_offset 4, -12
 358              		.cfi_offset 5, -8
 359              		.cfi_offset 14, -4
 360 0002 0446     		mov	r4, r0
 216:application-library/nrf24/nrf24.c ****   /* Repeat for each bit in the tx_data. */
 361              		.loc 1 216 0
 362 0004 FFF7FEFF 		bl	SPI_DELAY
 363              	.LVL13:
 364              	.LBB33:
 218:application-library/nrf24/nrf24.c ****   {
 365              		.loc 1 218 0
 366 0008 0025     		movs	r5, #0
 367 000a 11E0     		b	.L37
 368              	.LVL14:
 369              	.L43:
 370              	.LBB34:
 371              	.LBB35:
  98:application-library/nrf24/nrf24.c ****     #elif defined BCM2835
 372              		.loc 1 98 0
 373 000c 0122     		movs	r2, #1
 374 000e 4FF48061 		mov	r1, #1024
 375 0012 1448     		ldr	r0, .L44
 376 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 377              	.LVL15:
 378              	.L39:
 379              	.LBE35:
 380              	.LBE34:
 231:application-library/nrf24/nrf24.c **** 
 381              		.loc 1 231 0 discriminator 2
 382 0018 FFF7FEFF 		bl	SPI_DELAY
ARM GAS  /tmp/cc0cESOd.s 			page 13


 383              	.LVL16:
 384              	.LBB36:
 385              	.LBB37:
  66:application-library/nrf24/nrf24.c ****     #elif defined BCM2835
 386              		.loc 1 66 0 discriminator 2
 387 001c 0122     		movs	r2, #1
 388 001e 0421     		movs	r1, #4
 389 0020 1148     		ldr	r0, .L44+4
 390 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 391              	.LVL17:
 392              	.LBE37:
 393              	.LBE36:
 237:application-library/nrf24/nrf24.c **** 
 394              		.loc 1 237 0 discriminator 2
 395 0026 6400     		lsls	r4, r4, #1
 396              	.LVL18:
 397 0028 E4B2     		uxtb	r4, r4
 398              	.LVL19:
 240:application-library/nrf24/nrf24.c ****   }
 399              		.loc 1 240 0 discriminator 2
 400 002a FFF7FEFF 		bl	SPI_DELAY
 401              	.LVL20:
 218:application-library/nrf24/nrf24.c ****   {
 402              		.loc 1 218 0 discriminator 2
 403 002e 0135     		adds	r5, r5, #1
 404              	.LVL21:
 405              	.L37:
 218:application-library/nrf24/nrf24.c ****   {
 406              		.loc 1 218 0 is_stmt 0 discriminator 1
 407 0030 072D     		cmp	r5, #7
 408 0032 10DC     		bgt	.L42
 409              	.LBB38:
 410              	.LBB39:
  82:application-library/nrf24/nrf24.c ****     #elif defined BCM2835
 411              		.loc 1 82 0 is_stmt 1
 412 0034 0022     		movs	r2, #0
 413 0036 0421     		movs	r1, #4
 414 0038 0B48     		ldr	r0, .L44+4
 415 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 416              	.LVL22:
 417              	.LBE39:
 418              	.LBE38:
 222:application-library/nrf24/nrf24.c **** 
 419              		.loc 1 222 0
 420 003e FFF7FEFF 		bl	SPI_DELAY
 421              	.LVL23:
 225:application-library/nrf24/nrf24.c ****           SPI_MOSI_1();
 422              		.loc 1 225 0
 423 0042 14F0800F 		tst	r4, #128
 424 0046 E1D1     		bne	.L43
 425              	.LBB40:
 426              	.LBB41:
 114:application-library/nrf24/nrf24.c ****     #elif defined BCM2835
 427              		.loc 1 114 0
 428 0048 0022     		movs	r2, #0
 429 004a 4FF48061 		mov	r1, #1024
 430 004e 0548     		ldr	r0, .L44
ARM GAS  /tmp/cc0cESOd.s 			page 14


 431 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 432              	.LVL24:
 433 0054 E0E7     		b	.L39
 434              	.L42:
 435              	.LBE41:
 436              	.LBE40:
 437              	.LBE33:
 438              	.LBB42:
 439              	.LBB43:
  82:application-library/nrf24/nrf24.c ****     #elif defined BCM2835
 440              		.loc 1 82 0
 441 0056 0022     		movs	r2, #0
 442 0058 0421     		movs	r1, #4
 443 005a 0348     		ldr	r0, .L44+4
 444 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 445              	.LVL25:
 446 0060 38BD     		pop	{r3, r4, r5, pc}
 447              	.LVL26:
 448              	.L45:
 449 0062 00BF     		.align	2
 450              	.L44:
 451 0064 00080240 		.word	1073874944
 452 0068 000C0240 		.word	1073875968
 453              	.LBE43:
 454              	.LBE42:
 455              		.cfi_endproc
 456              	.LFE140:
 458              		.section	.text.gpio_clockin_8_bits,"ax",%progbits
 459              		.align	1
 460              		.global	gpio_clockin_8_bits
 461              		.syntax unified
 462              		.thumb
 463              		.thumb_func
 464              		.fpu fpv4-sp-d16
 466              	gpio_clockin_8_bits:
 467              	.LFB141:
 272:application-library/nrf24/nrf24.c ****   uint8_t rx_data = 0;
 468              		.loc 1 272 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
 472 0000 70B5     		push	{r4, r5, r6, lr}
 473              	.LCFI10:
 474              		.cfi_def_cfa_offset 16
 475              		.cfi_offset 4, -16
 476              		.cfi_offset 5, -12
 477              		.cfi_offset 6, -8
 478              		.cfi_offset 14, -4
 479              	.LVL27:
 275:application-library/nrf24/nrf24.c **** 
 480              		.loc 1 275 0
 481 0002 FFF7FEFF 		bl	SPI_DELAY
 482              	.LVL28:
 483              	.LBB44:
 278:application-library/nrf24/nrf24.c ****   {
 484              		.loc 1 278 0
 485 0006 0025     		movs	r5, #0
ARM GAS  /tmp/cc0cESOd.s 			page 15


 486              	.LBE44:
 273:application-library/nrf24/nrf24.c **** 
 487              		.loc 1 273 0
 488 0008 2C46     		mov	r4, r5
 489              	.LBB51:
 278:application-library/nrf24/nrf24.c ****   {
 490              		.loc 1 278 0
 491 000a 1BE0     		b	.L47
 492              	.LVL29:
 493              	.L48:
 494              	.LBB45:
 495              	.LBB46:
  82:application-library/nrf24/nrf24.c ****     #elif defined BCM2835
 496              		.loc 1 82 0
 497 000c 124E     		ldr	r6, .L50
 498 000e 0022     		movs	r2, #0
 499 0010 0421     		movs	r1, #4
 500 0012 3046     		mov	r0, r6
 501 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 502              	.LVL30:
 503              	.LBE46:
 504              	.LBE45:
 285:application-library/nrf24/nrf24.c **** 
 505              		.loc 1 285 0
 506 0018 FFF7FEFF 		bl	SPI_DELAY
 507              	.LVL31:
 508              	.LBB47:
 509              	.LBB48:
  66:application-library/nrf24/nrf24.c ****     #elif defined BCM2835
 510              		.loc 1 66 0
 511 001c 0122     		movs	r2, #1
 512 001e 0421     		movs	r1, #4
 513 0020 3046     		mov	r0, r6
 514 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 515              	.LVL32:
 516              	.LBE48:
 517              	.LBE47:
 291:application-library/nrf24/nrf24.c ****       
 518              		.loc 1 291 0
 519 0026 FFF7FEFF 		bl	SPI_DELAY
 520              	.LVL33:
 294:application-library/nrf24/nrf24.c ****       rx_data |= SPI_READ_MISO();
 521              		.loc 1 294 0
 522 002a 6400     		lsls	r4, r4, #1
 523              	.LVL34:
 524 002c E4B2     		uxtb	r4, r4
 525              	.LVL35:
 526              	.LBB49:
 527              	.LBB50:
 164:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 528              		.loc 1 164 0
 529 002e 0421     		movs	r1, #4
 530 0030 0A48     		ldr	r0, .L50+4
 531 0032 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 532              	.LVL36:
 533              	.LBE50:
 534              	.LBE49:
ARM GAS  /tmp/cc0cESOd.s 			page 16


 295:application-library/nrf24/nrf24.c **** 
 535              		.loc 1 295 0
 536 0036 0028     		cmp	r0, #0
 537 0038 18BF     		it	ne
 538 003a 44F00104 		orrne	r4, r4, #1
 539              	.LVL37:
 298:application-library/nrf24/nrf24.c ****   }
 540              		.loc 1 298 0
 541 003e FFF7FEFF 		bl	SPI_DELAY
 542              	.LVL38:
 278:application-library/nrf24/nrf24.c ****   {
 543              		.loc 1 278 0
 544 0042 0135     		adds	r5, r5, #1
 545              	.LVL39:
 546              	.L47:
 278:application-library/nrf24/nrf24.c ****   {
 547              		.loc 1 278 0 is_stmt 0 discriminator 1
 548 0044 072D     		cmp	r5, #7
 549 0046 E1DD     		ble	.L48
 550              	.LBE51:
 551              	.LBB52:
 552              	.LBB53:
  82:application-library/nrf24/nrf24.c ****     #elif defined BCM2835
 553              		.loc 1 82 0 is_stmt 1
 554 0048 0022     		movs	r2, #0
 555 004a 0421     		movs	r1, #4
 556 004c 0248     		ldr	r0, .L50
 557 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 558              	.LVL40:
 559              	.LBE53:
 560              	.LBE52:
 304:application-library/nrf24/nrf24.c ****   
 561              		.loc 1 304 0
 562 0052 2046     		mov	r0, r4
 563 0054 70BD     		pop	{r4, r5, r6, pc}
 564              	.LVL41:
 565              	.L51:
 566 0056 00BF     		.align	2
 567              	.L50:
 568 0058 000C0240 		.word	1073875968
 569 005c 00080240 		.word	1073874944
 570              		.cfi_endproc
 571              	.LFE141:
 573              		.section	.text.spi_read_register,"ax",%progbits
 574              		.align	1
 575              		.global	spi_read_register
 576              		.syntax unified
 577              		.thumb
 578              		.thumb_func
 579              		.fpu fpv4-sp-d16
 581              	spi_read_register:
 582              	.LFB143:
 319:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 320:application-library/nrf24/nrf24.c ****   bcm2835_delay(1);
 321:application-library/nrf24/nrf24.c ****   #endif
 322:application-library/nrf24/nrf24.c **** }
 323:application-library/nrf24/nrf24.c **** 
ARM GAS  /tmp/cc0cESOd.s 			page 17


 324:application-library/nrf24/nrf24.c **** 
 325:application-library/nrf24/nrf24.c **** /**
 326:application-library/nrf24/nrf24.c ****   * @brief      Read data from the SPI target device register. Endianess: LSByte first.
 327:application-library/nrf24/nrf24.c ****   * @param[in]  reg SPI target device register to write to.
 328:application-library/nrf24/nrf24.c ****   * @param[in]  num_bytes Number of bytes needed to write to that address.
 329:application-library/nrf24/nrf24.c ****   * @param[out] p_read_data A pointer pointing to a memory location that can store the data read fr
 330:application-library/nrf24/nrf24.c ****   * @retval     none.
 331:application-library/nrf24/nrf24.c ****   */
 332:application-library/nrf24/nrf24.c **** void spi_read_register(uint8_t reg, uint8_t num_bytes, uint8_t* p_read_data)
 333:application-library/nrf24/nrf24.c **** {
 583              		.loc 1 333 0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 0
 586              		@ frame_needed = 0, uses_anonymous_args = 0
 587              	.LVL42:
 588 0000 70B5     		push	{r4, r5, r6, lr}
 589              	.LCFI11:
 590              		.cfi_def_cfa_offset 16
 591              		.cfi_offset 4, -16
 592              		.cfi_offset 5, -12
 593              		.cfi_offset 6, -8
 594              		.cfi_offset 14, -4
 595 0002 0446     		mov	r4, r0
 596 0004 0D46     		mov	r5, r1
 597 0006 1646     		mov	r6, r2
 598              	.LBB54:
 599              	.LBB55:
 131:application-library/nrf24/nrf24.c ****     #elif defined BCM2835
 600              		.loc 1 131 0
 601 0008 0022     		movs	r2, #0
 602              	.LVL43:
 603 000a 4FF48051 		mov	r1, #4096
 604              	.LVL44:
 605 000e 0A48     		ldr	r0, .L56
 606              	.LVL45:
 607 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 608              	.LVL46:
 609              	.LBE55:
 610              	.LBE54:
 334:application-library/nrf24/nrf24.c ****   /* SPI CHIP SELECT */
 335:application-library/nrf24/nrf24.c ****   SPI_CS_1();
 336:application-library/nrf24/nrf24.c ****   
 337:application-library/nrf24/nrf24.c ****   /* Clock out first byte: target register to read. */
 338:application-library/nrf24/nrf24.c ****   gpio_clockout_8_bits(reg);
 611              		.loc 1 338 0
 612 0014 2046     		mov	r0, r4
 613 0016 FFF7FEFF 		bl	gpio_clockout_8_bits
 614              	.LVL47:
 615              	.LBB56:
 339:application-library/nrf24/nrf24.c **** 
 340:application-library/nrf24/nrf24.c ****   /* Repeat for number of bytes. */
 341:application-library/nrf24/nrf24.c ****   for (int i = 0; i < num_bytes; ++i) 
 616              		.loc 1 341 0
 617 001a 0024     		movs	r4, #0
 618 001c 03E0     		b	.L53
 619              	.LVL48:
 620              	.L54:
ARM GAS  /tmp/cc0cESOd.s 			page 18


 342:application-library/nrf24/nrf24.c ****   {
 343:application-library/nrf24/nrf24.c ****     /* Clock in byte data from target register. */
 344:application-library/nrf24/nrf24.c ****     p_read_data[i] = gpio_clockin_8_bits();
 621              		.loc 1 344 0 discriminator 3
 622 001e FFF7FEFF 		bl	gpio_clockin_8_bits
 623              	.LVL49:
 624 0022 3055     		strb	r0, [r6, r4]
 341:application-library/nrf24/nrf24.c ****   {
 625              		.loc 1 341 0 discriminator 3
 626 0024 0134     		adds	r4, r4, #1
 627              	.LVL50:
 628              	.L53:
 341:application-library/nrf24/nrf24.c ****   {
 629              		.loc 1 341 0 is_stmt 0 discriminator 1
 630 0026 AC42     		cmp	r4, r5
 631 0028 F9DB     		blt	.L54
 632              	.LBE56:
 633              	.LBB57:
 634              	.LBB58:
 149:application-library/nrf24/nrf24.c ****     #elif defined BCM2835
 635              		.loc 1 149 0 is_stmt 1
 636 002a 0122     		movs	r2, #1
 637 002c 4FF48051 		mov	r1, #4096
 638 0030 0148     		ldr	r0, .L56
 639 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 640              	.LVL51:
 641 0036 70BD     		pop	{r4, r5, r6, pc}
 642              	.LVL52:
 643              	.L57:
 644              		.align	2
 645              	.L56:
 646 0038 00080240 		.word	1073874944
 647              	.LBE58:
 648              	.LBE57:
 649              		.cfi_endproc
 650              	.LFE143:
 652              		.section	.text.spi_write_register,"ax",%progbits
 653              		.align	1
 654              		.global	spi_write_register
 655              		.syntax unified
 656              		.thumb
 657              		.thumb_func
 658              		.fpu fpv4-sp-d16
 660              	spi_write_register:
 661              	.LFB144:
 345:application-library/nrf24/nrf24.c ****   }
 346:application-library/nrf24/nrf24.c ****   
 347:application-library/nrf24/nrf24.c ****   /* SPI CHIP DESELECT */
 348:application-library/nrf24/nrf24.c ****   SPI_CS_0();
 349:application-library/nrf24/nrf24.c **** }
 350:application-library/nrf24/nrf24.c **** 
 351:application-library/nrf24/nrf24.c **** 
 352:application-library/nrf24/nrf24.c **** /**
 353:application-library/nrf24/nrf24.c ****   * @brief      Write a number of bytes to the spi target device register.
 354:application-library/nrf24/nrf24.c ****   * @param[in]  reg            SPI target device register to write to.
 355:application-library/nrf24/nrf24.c ****   * @param[in]  num_bytes      Number of bytes needed to write to that address.
 356:application-library/nrf24/nrf24.c ****   * @param[in]  p_writing_data A pointer pointing to a memory location storing the data to write.
ARM GAS  /tmp/cc0cESOd.s 			page 19


 357:application-library/nrf24/nrf24.c ****   * @retval     None.
 358:application-library/nrf24/nrf24.c ****   */
 359:application-library/nrf24/nrf24.c **** void spi_write_register(uint8_t reg, uint8_t num_bytes, uint8_t* p_writing_data)
 360:application-library/nrf24/nrf24.c **** {
 662              		.loc 1 360 0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 0
 665              		@ frame_needed = 0, uses_anonymous_args = 0
 666              	.LVL53:
 667 0000 70B5     		push	{r4, r5, r6, lr}
 668              	.LCFI12:
 669              		.cfi_def_cfa_offset 16
 670              		.cfi_offset 4, -16
 671              		.cfi_offset 5, -12
 672              		.cfi_offset 6, -8
 673              		.cfi_offset 14, -4
 674 0002 0446     		mov	r4, r0
 675 0004 0D46     		mov	r5, r1
 676 0006 1646     		mov	r6, r2
 677              	.LBB59:
 678              	.LBB60:
 131:application-library/nrf24/nrf24.c ****     #elif defined BCM2835
 679              		.loc 1 131 0
 680 0008 0022     		movs	r2, #0
 681              	.LVL54:
 682 000a 4FF48051 		mov	r1, #4096
 683              	.LVL55:
 684 000e 0A48     		ldr	r0, .L62
 685              	.LVL56:
 686 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 687              	.LVL57:
 688              	.LBE60:
 689              	.LBE59:
 361:application-library/nrf24/nrf24.c ****   /* SPI CHIP SELECT */
 362:application-library/nrf24/nrf24.c ****   SPI_CS_1();
 363:application-library/nrf24/nrf24.c **** 
 364:application-library/nrf24/nrf24.c ****   /* Clock out first byte: target register to write. */
 365:application-library/nrf24/nrf24.c ****   gpio_clockout_8_bits(reg); 
 690              		.loc 1 365 0
 691 0014 2046     		mov	r0, r4
 692 0016 FFF7FEFF 		bl	gpio_clockout_8_bits
 693              	.LVL58:
 694              	.LBB61:
 366:application-library/nrf24/nrf24.c **** 
 367:application-library/nrf24/nrf24.c ****   /* Repeat for total number of bytes to write. */
 368:application-library/nrf24/nrf24.c ****   for (int i = 0; i < num_bytes; ++i)
 695              		.loc 1 368 0
 696 001a 0024     		movs	r4, #0
 697 001c 03E0     		b	.L59
 698              	.LVL59:
 699              	.L60:
 700              	.LBB62:
 369:application-library/nrf24/nrf24.c ****   {
 370:application-library/nrf24/nrf24.c ****     uint8_t writing_byte = p_writing_data[i];
 371:application-library/nrf24/nrf24.c ****     /* Clock out data to the target register. */
 372:application-library/nrf24/nrf24.c ****     gpio_clockout_8_bits(writing_byte);
 701              		.loc 1 372 0 discriminator 3
ARM GAS  /tmp/cc0cESOd.s 			page 20


 702 001e 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 703 0020 FFF7FEFF 		bl	gpio_clockout_8_bits
 704              	.LVL60:
 705              	.LBE62:
 368:application-library/nrf24/nrf24.c ****   {
 706              		.loc 1 368 0 discriminator 3
 707 0024 0134     		adds	r4, r4, #1
 708              	.LVL61:
 709              	.L59:
 368:application-library/nrf24/nrf24.c ****   {
 710              		.loc 1 368 0 is_stmt 0 discriminator 1
 711 0026 AC42     		cmp	r4, r5
 712 0028 F9DB     		blt	.L60
 713              	.LBE61:
 714              	.LBB63:
 715              	.LBB64:
 149:application-library/nrf24/nrf24.c ****     #elif defined BCM2835
 716              		.loc 1 149 0 is_stmt 1
 717 002a 0122     		movs	r2, #1
 718 002c 4FF48051 		mov	r1, #4096
 719 0030 0148     		ldr	r0, .L62
 720 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 721              	.LVL62:
 722 0036 70BD     		pop	{r4, r5, r6, pc}
 723              	.LVL63:
 724              	.L63:
 725              		.align	2
 726              	.L62:
 727 0038 00080240 		.word	1073874944
 728              	.LBE64:
 729              	.LBE63:
 730              		.cfi_endproc
 731              	.LFE144:
 733              		.section	.text.nRF24_CE_1,"ax",%progbits
 734              		.align	1
 735              		.global	nRF24_CE_1
 736              		.syntax unified
 737              		.thumb
 738              		.thumb_func
 739              		.fpu fpv4-sp-d16
 741              	nRF24_CE_1:
 742              	.LFB145:
 373:application-library/nrf24/nrf24.c ****   }
 374:application-library/nrf24/nrf24.c **** 
 375:application-library/nrf24/nrf24.c ****   /* SPI CHIP DESELECT */
 376:application-library/nrf24/nrf24.c ****   SPI_CS_0();
 377:application-library/nrf24/nrf24.c **** }
 378:application-library/nrf24/nrf24.c **** 
 379:application-library/nrf24/nrf24.c **** 
 380:application-library/nrf24/nrf24.c **** /* nRF24 Data-Link Layer Operations ---------------------------------------------------------------
 381:application-library/nrf24/nrf24.c **** 
 382:application-library/nrf24/nrf24.c **** /**
 383:application-library/nrf24/nrf24.c ****   * @brief  Set high on Chip-Enable pin of nRF24L01.
 384:application-library/nrf24/nrf24.c ****   * @param  None.
 385:application-library/nrf24/nrf24.c ****   * @retval None.
 386:application-library/nrf24/nrf24.c ****   */
 387:application-library/nrf24/nrf24.c **** void nRF24_CE_1()
ARM GAS  /tmp/cc0cESOd.s 			page 21


 388:application-library/nrf24/nrf24.c **** {
 743              		.loc 1 388 0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 0
 746              		@ frame_needed = 0, uses_anonymous_args = 0
 747 0000 08B5     		push	{r3, lr}
 748              	.LCFI13:
 749              		.cfi_def_cfa_offset 8
 750              		.cfi_offset 3, -8
 751              		.cfi_offset 14, -4
 389:application-library/nrf24/nrf24.c ****     #if defined STM32F4xx
 390:application-library/nrf24/nrf24.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_SET);  
 752              		.loc 1 390 0
 753 0002 0122     		movs	r2, #1
 754 0004 2021     		movs	r1, #32
 755 0006 0248     		ldr	r0, .L66
 756 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 757              	.LVL64:
 758 000c 08BD     		pop	{r3, pc}
 759              	.L67:
 760 000e 00BF     		.align	2
 761              	.L66:
 762 0010 00040240 		.word	1073873920
 763              		.cfi_endproc
 764              	.LFE145:
 766              		.section	.text.nRF24_CE_0,"ax",%progbits
 767              		.align	1
 768              		.global	nRF24_CE_0
 769              		.syntax unified
 770              		.thumb
 771              		.thumb_func
 772              		.fpu fpv4-sp-d16
 774              	nRF24_CE_0:
 775              	.LFB146:
 391:application-library/nrf24/nrf24.c ****     #elif defined BCM2835
 392:application-library/nrf24/nrf24.c ****     bcm2835_gpio_write(RPI_BPLUS_GPIO_J8_29, HIGH);
 393:application-library/nrf24/nrf24.c ****     #endif
 394:application-library/nrf24/nrf24.c **** }
 395:application-library/nrf24/nrf24.c **** 
 396:application-library/nrf24/nrf24.c **** 
 397:application-library/nrf24/nrf24.c **** /**
 398:application-library/nrf24/nrf24.c ****   * @brief  Set low on Chip-Enable pin of nRF24L01.
 399:application-library/nrf24/nrf24.c ****   * @param  None.
 400:application-library/nrf24/nrf24.c ****   * @retval None.
 401:application-library/nrf24/nrf24.c ****   */
 402:application-library/nrf24/nrf24.c **** void nRF24_CE_0()
 403:application-library/nrf24/nrf24.c **** {
 776              		.loc 1 403 0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 0
 779              		@ frame_needed = 0, uses_anonymous_args = 0
 780 0000 08B5     		push	{r3, lr}
 781              	.LCFI14:
 782              		.cfi_def_cfa_offset 8
 783              		.cfi_offset 3, -8
 784              		.cfi_offset 14, -4
 404:application-library/nrf24/nrf24.c ****     #if defined STM32F4xx
ARM GAS  /tmp/cc0cESOd.s 			page 22


 405:application-library/nrf24/nrf24.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_RESET);
 785              		.loc 1 405 0
 786 0002 0022     		movs	r2, #0
 787 0004 2021     		movs	r1, #32
 788 0006 0248     		ldr	r0, .L70
 789 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 790              	.LVL65:
 791 000c 08BD     		pop	{r3, pc}
 792              	.L71:
 793 000e 00BF     		.align	2
 794              	.L70:
 795 0010 00040240 		.word	1073873920
 796              		.cfi_endproc
 797              	.LFE146:
 799              		.section	.text.nRF24_verified_write_register,"ax",%progbits
 800              		.align	1
 801              		.global	nRF24_verified_write_register
 802              		.syntax unified
 803              		.thumb
 804              		.thumb_func
 805              		.fpu fpv4-sp-d16
 807              	nRF24_verified_write_register:
 808              	.LFB147:
 406:application-library/nrf24/nrf24.c ****     #elif defined BCM2835
 407:application-library/nrf24/nrf24.c ****     bcm2835_gpio_write(RPI_BPLUS_GPIO_J8_29, LOW);
 408:application-library/nrf24/nrf24.c ****     #endif
 409:application-library/nrf24/nrf24.c **** }
 410:application-library/nrf24/nrf24.c **** 
 411:application-library/nrf24/nrf24.c **** 
 412:application-library/nrf24/nrf24.c **** /**
 413:application-library/nrf24/nrf24.c ****   * @brief      Write to a register on nRF24L01+ through SPI. Read the same registers after write t
 414:application-library/nrf24/nrf24.c ****   *               This function seems to waste cycles but SPI communication issues expose immediate
 415:application-library/nrf24/nrf24.c ****   * @param[in]  reg            The target register to write value to.
 416:application-library/nrf24/nrf24.c ****   * @param[in]  num_bytes      Number of bytes to write.
 417:application-library/nrf24/nrf24.c ****   * @param[in]  p_writing_data Pointer to the data to write.
 418:application-library/nrf24/nrf24.c ****   * @retval     Boolean. 1 for mistakes happen. 0 for success.
 419:application-library/nrf24/nrf24.c ****   * @note       reg & ~ W_REGISTER_MASK is the reverse operation of reg | W_REGISTER_MASK,
 420:application-library/nrf24/nrf24.c ****   *               essentially get rid of Write Regiter Mask and add a Read Register Mask. 
 421:application-library/nrf24/nrf24.c ****   *             See section 8.3.1 SPI commands in nRF24L01+ Product Specification for details.
 422:application-library/nrf24/nrf24.c ****   */
 423:application-library/nrf24/nrf24.c **** bool nRF24_verified_write_register(uint8_t reg, uint8_t num_bytes, uint8_t* p_writing_data)
 424:application-library/nrf24/nrf24.c **** {
 809              		.loc 1 424 0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 256
 812              		@ frame_needed = 1, uses_anonymous_args = 0
 813              	.LVL66:
 814 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 815              	.LCFI15:
 816              		.cfi_def_cfa_offset 32
 817              		.cfi_offset 4, -32
 818              		.cfi_offset 5, -28
 819              		.cfi_offset 6, -24
 820              		.cfi_offset 7, -20
 821              		.cfi_offset 8, -16
 822              		.cfi_offset 9, -12
 823              		.cfi_offset 10, -8
ARM GAS  /tmp/cc0cESOd.s 			page 23


 824              		.cfi_offset 14, -4
 825 0004 C0B0     		sub	sp, sp, #256
 826              	.LCFI16:
 827              		.cfi_def_cfa_offset 288
 828 0006 00AF     		add	r7, sp, #0
 829              	.LCFI17:
 830              		.cfi_def_cfa_register 7
 831 0008 0546     		mov	r5, r0
 832 000a 0C46     		mov	r4, r1
 833 000c 9046     		mov	r8, r2
 425:application-library/nrf24/nrf24.c **** 
 426:application-library/nrf24/nrf24.c ****     char message[256];
 427:application-library/nrf24/nrf24.c ****     uint8_t read_data[num_bytes];
 834              		.loc 1 427 0
 835 000e 8A46     		mov	r10, r1
 836              	.LVL67:
 837 0010 CB1D     		adds	r3, r1, #7
 838 0012 23F00703 		bic	r3, r3, #7
 839 0016 ADEB030D 		sub	sp, sp, r3
 840 001a E946     		mov	r9, sp
 841              	.LVL68:
 428:application-library/nrf24/nrf24.c **** 
 429:application-library/nrf24/nrf24.c ****     /* Write the data to target register. */
 430:application-library/nrf24/nrf24.c ****     spi_write_register(reg, num_bytes, p_writing_data); 
 842              		.loc 1 430 0
 843 001c FFF7FEFF 		bl	spi_write_register
 844              	.LVL69:
 431:application-library/nrf24/nrf24.c **** 
 432:application-library/nrf24/nrf24.c ****     /* Read from same target register to verify if data has been successfully written. */
 433:application-library/nrf24/nrf24.c ****     spi_read_register(R_REGISTER_MASK | (reg & ~W_REGISTER_MASK), num_bytes, read_data);
 845              		.loc 1 433 0
 846 0020 6A46     		mov	r2, sp
 847 0022 2146     		mov	r1, r4
 848 0024 05F0DF00 		and	r0, r5, #223
 849 0028 FFF7FEFF 		bl	spi_read_register
 850              	.LVL70:
 851              	.LBB74:
 434:application-library/nrf24/nrf24.c ****     
 435:application-library/nrf24/nrf24.c ****     /* For each byte, check mismatch between written data and read data from target register. */
 436:application-library/nrf24/nrf24.c ****     for (int i = 0; i < num_bytes; ++i) 
 852              		.loc 1 436 0
 853 002c 0026     		movs	r6, #0
 854              	.LVL71:
 855              	.L73:
 856              		.loc 1 436 0 is_stmt 0 discriminator 1
 857 002e 5645     		cmp	r6, r10
 858 0030 59DA     		bge	.L78
 437:application-library/nrf24/nrf24.c ****     {
 438:application-library/nrf24/nrf24.c ****       if (read_data[i] != p_writing_data[i])  
 859              		.loc 1 438 0 is_stmt 1
 860 0032 19F80620 		ldrb	r2, [r9, r6]	@ zero_extendqisi2
 861 0036 08EB0604 		add	r4, r8, r6
 862 003a 18F80630 		ldrb	r3, [r8, r6]	@ zero_extendqisi2
 863 003e 9A42     		cmp	r2, r3
 864 0040 27D1     		bne	.L79
 439:application-library/nrf24/nrf24.c ****       {
 440:application-library/nrf24/nrf24.c ****         #ifdef NRF24_DEBUG
ARM GAS  /tmp/cc0cESOd.s 			page 24


 441:application-library/nrf24/nrf24.c ****         strcpy(message, "Problem writing to nRF24 register -- ");
 442:application-library/nrf24/nrf24.c ****         serial_print(message);
 443:application-library/nrf24/nrf24.c ****         sprintf(message, "writing data: <%#02x> read_data: <%#02x>\n", p_writing_data[i], read_data
 444:application-library/nrf24/nrf24.c ****         serial_print(message);
 445:application-library/nrf24/nrf24.c ****         #endif 
 446:application-library/nrf24/nrf24.c ****         return true;
 447:application-library/nrf24/nrf24.c ****       } else {
 448:application-library/nrf24/nrf24.c ****         #ifdef NRF24_DEBUG
 449:application-library/nrf24/nrf24.c ****         strcpy(message, "Success writing to nRF24 register -- ");
 865              		.loc 1 449 0 discriminator 2
 866 0042 3C46     		mov	r4, r7
 867 0044 2B4D     		ldr	r5, .L80
 868 0046 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 869 0048 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 870 004a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 871 004c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 872 004e 95E80300 		ldm	r5, {r0, r1}
 873 0052 44F8040B 		str	r0, [r4], #4
 874 0056 2180     		strh	r1, [r4]	@ movhi
 875              	.LVL72:
 876              	.LBB75:
 877              	.LBB76:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 878              		.loc 1 183 0 discriminator 2
 879 0058 3846     		mov	r0, r7
 880              	.LVL73:
 881 005a FFF7FEFF 		bl	strlen
 882              	.LVL74:
 883 005e 264C     		ldr	r4, .L80+4
 884              	.LVL75:
 885 0060 6423     		movs	r3, #100
 886 0062 82B2     		uxth	r2, r0
 887 0064 3946     		mov	r1, r7
 888              	.LVL76:
 889 0066 2046     		mov	r0, r4
 890 0068 FFF7FEFF 		bl	HAL_UART_Transmit
 891              	.LVL77:
 892              	.LBE76:
 893              	.LBE75:
 450:application-library/nrf24/nrf24.c ****         serial_print(message);
 451:application-library/nrf24/nrf24.c ****         sprintf(message, "writing data: <%#02x> read_data: <%#02x>\n", p_writing_data[i], read_data
 894              		.loc 1 451 0 discriminator 2
 895 006c 19F80630 		ldrb	r3, [r9, r6]	@ zero_extendqisi2
 896 0070 18F80620 		ldrb	r2, [r8, r6]	@ zero_extendqisi2
 897 0074 2149     		ldr	r1, .L80+8
 898 0076 3846     		mov	r0, r7
 899 0078 FFF7FEFF 		bl	sprintf
 900              	.LVL78:
 901              	.LBB77:
 902              	.LBB78:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 903              		.loc 1 183 0 discriminator 2
 904 007c 3846     		mov	r0, r7
 905              	.LVL79:
 906 007e FFF7FEFF 		bl	strlen
 907              	.LVL80:
 908 0082 6423     		movs	r3, #100
ARM GAS  /tmp/cc0cESOd.s 			page 25


 909 0084 82B2     		uxth	r2, r0
 910 0086 3946     		mov	r1, r7
 911              	.LVL81:
 912 0088 2046     		mov	r0, r4
 913 008a FFF7FEFF 		bl	HAL_UART_Transmit
 914              	.LVL82:
 915              	.LBE78:
 916              	.LBE77:
 436:application-library/nrf24/nrf24.c ****     {
 917              		.loc 1 436 0 discriminator 2
 918 008e 0136     		adds	r6, r6, #1
 919              	.LVL83:
 920 0090 CDE7     		b	.L73
 921              	.L79:
 441:application-library/nrf24/nrf24.c ****         serial_print(message);
 922              		.loc 1 441 0
 923 0092 3D46     		mov	r5, r7
 924 0094 DFF868E0 		ldr	lr, .L80+12
 925 0098 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 926 009c 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 927 009e BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 928 00a2 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 929 00a4 9EE80300 		ldm	lr, {r0, r1}
 930 00a8 45F8040B 		str	r0, [r5], #4
 931 00ac 2980     		strh	r1, [r5]	@ movhi
 932              	.LVL84:
 933              	.LBB79:
 934              	.LBB80:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 935              		.loc 1 183 0
 936 00ae 3846     		mov	r0, r7
 937              	.LVL85:
 938 00b0 FFF7FEFF 		bl	strlen
 939              	.LVL86:
 940 00b4 104D     		ldr	r5, .L80+4
 941              	.LVL87:
 942 00b6 6423     		movs	r3, #100
 943 00b8 82B2     		uxth	r2, r0
 944 00ba 3946     		mov	r1, r7
 945              	.LVL88:
 946 00bc 2846     		mov	r0, r5
 947 00be FFF7FEFF 		bl	HAL_UART_Transmit
 948              	.LVL89:
 949              	.LBE80:
 950              	.LBE79:
 443:application-library/nrf24/nrf24.c ****         serial_print(message);
 951              		.loc 1 443 0
 952 00c2 19F80630 		ldrb	r3, [r9, r6]	@ zero_extendqisi2
 953 00c6 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 954 00c8 0C49     		ldr	r1, .L80+8
 955 00ca 3846     		mov	r0, r7
 956 00cc FFF7FEFF 		bl	sprintf
 957              	.LVL90:
 958              	.LBB81:
 959              	.LBB82:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 960              		.loc 1 183 0
ARM GAS  /tmp/cc0cESOd.s 			page 26


 961 00d0 3846     		mov	r0, r7
 962              	.LVL91:
 963 00d2 FFF7FEFF 		bl	strlen
 964              	.LVL92:
 965 00d6 6423     		movs	r3, #100
 966 00d8 82B2     		uxth	r2, r0
 967 00da 3946     		mov	r1, r7
 968              	.LVL93:
 969 00dc 2846     		mov	r0, r5
 970 00de FFF7FEFF 		bl	HAL_UART_Transmit
 971              	.LVL94:
 972              	.LBE82:
 973              	.LBE81:
 446:application-library/nrf24/nrf24.c ****       } else {
 974              		.loc 1 446 0
 975 00e2 0120     		movs	r0, #1
 976 00e4 00E0     		b	.L75
 977              	.LVL95:
 978              	.L78:
 979              	.LBE74:
 452:application-library/nrf24/nrf24.c ****         serial_print(message);
 453:application-library/nrf24/nrf24.c ****         #endif
 454:application-library/nrf24/nrf24.c ****       }
 455:application-library/nrf24/nrf24.c ****   }
 456:application-library/nrf24/nrf24.c ****   return false;
 980              		.loc 1 456 0
 981 00e6 0020     		movs	r0, #0
 982              	.L75:
 457:application-library/nrf24/nrf24.c **** }
 983              		.loc 1 457 0
 984 00e8 07F58077 		add	r7, r7, #256
 985              	.LCFI18:
 986              		.cfi_def_cfa_offset 32
 987 00ec BD46     		mov	sp, r7
 988              	.LCFI19:
 989              		.cfi_def_cfa_register 13
 990              		@ sp needed
 991 00ee BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 992              	.LVL96:
 993              	.L81:
 994 00f2 00BF     		.align	2
 995              	.L80:
 996 00f4 54000000 		.word	.LC4
 997 00f8 00000000 		.word	huart2
 998 00fc 28000000 		.word	.LC3
 999 0100 00000000 		.word	.LC2
 1000              		.cfi_endproc
 1001              	.LFE147:
 1003              		.section	.text.print_bytearray,"ax",%progbits
 1004              		.align	1
 1005              		.global	print_bytearray
 1006              		.syntax unified
 1007              		.thumb
 1008              		.thumb_func
 1009              		.fpu fpv4-sp-d16
 1011              	print_bytearray:
 1012              	.LFB153:
ARM GAS  /tmp/cc0cESOd.s 			page 27


 458:application-library/nrf24/nrf24.c **** 
 459:application-library/nrf24/nrf24.c **** 
 460:application-library/nrf24/nrf24.c **** /**  
 461:application-library/nrf24/nrf24.c ****  *  @brief  Test nRF24 transmitter function without a receiver. 
 462:application-library/nrf24/nrf24.c ****  *          In the project, we always make sure that TX is working before RX.
 463:application-library/nrf24/nrf24.c ****  *          Thus use this function on a fresh setup of the nRF24 modules.
 464:application-library/nrf24/nrf24.c ****  *  @param  None.
 465:application-library/nrf24/nrf24.c ****  *  @retval None.
 466:application-library/nrf24/nrf24.c ****  *  @note  
 467:application-library/nrf24/nrf24.c ****  *      Steps: 1. Disable Auto Acknowledgement, disable Auto Retransmit. 
 468:application-library/nrf24/nrf24.c ****  *                The reason to disable them is that if they are enabled, ShockBurst mode is on.
 469:application-library/nrf24/nrf24.c ****  *                Without a usable receiver, it cannot be determined if the transceiver is working 
 470:application-library/nrf24/nrf24.c ****  *             2. TX_DS (in STATUS register) is expected to be set when data has been clock into TX
 471:application-library/nrf24/nrf24.c ****  *             3. Check if STATUS = 0x2E, if so we have a working TX module.
 472:application-library/nrf24/nrf24.c ****  *            
 473:application-library/nrf24/nrf24.c ****  *            After writing to W_TX_PAYLOAD, TX_EMPTY (in FIFO_STATUS register) becomes 0.
 474:application-library/nrf24/nrf24.c ****  *            
 475:application-library/nrf24/nrf24.c ****  *            What happens if sending is not successful?
 476:application-library/nrf24/nrf24.c ****  *            TX_FULL (in FIFO_STATUS register) becomes 1.
 477:application-library/nrf24/nrf24.c ****  *            TX_FULL (in STATUS register) becomes 1.
 478:application-library/nrf24/nrf24.c ****  *            TX_DS (in STATUS register) remains 0.  
 479:application-library/nrf24/nrf24.c ****  *
 480:application-library/nrf24/nrf24.c ****  *      States: 
 481:application-library/nrf24/nrf24.c ****  *            The states can be referred in 6.1.1 State diagram.
 482:application-library/nrf24/nrf24.c ****  *      
 483:application-library/nrf24/nrf24.c ****  *      STATUS register
 484:application-library/nrf24/nrf24.c ****  *                7             6           5         4         3:1         0
 485:application-library/nrf24/nrf24.c ****  *            <reserved>      RX_DR       TX_DS     MAX_RT     RX_P_NO     TX_FULL
 486:application-library/nrf24/nrf24.c ****  *            -----------------------------------------------------------------------
 487:application-library/nrf24/nrf24.c ****  *             Always 0       Receive     Transfer  Maximum    000-101 :    1: 
 488:application-library/nrf24/nrf24.c ****  *                            Data        Data      TX         Data Pipe #  TX_FULL
 489:application-library/nrf24/nrf24.c ****  *                            Ready       Sent      Transmits  110 :
 490:application-library/nrf24/nrf24.c ****  *                                                             Not Used.
 491:application-library/nrf24/nrf24.c ****  *                                                             111:
 492:application-library/nrf24/nrf24.c ****  *                                                             RX FIFO Empty.
 493:application-library/nrf24/nrf24.c ****  */
 494:application-library/nrf24/nrf24.c **** void nRF24_tx_self_test() 
 495:application-library/nrf24/nrf24.c **** {
 496:application-library/nrf24/nrf24.c ****   char message[256];
 497:application-library/nrf24/nrf24.c ****   uint8_t writing_byte;
 498:application-library/nrf24/nrf24.c **** 
 499:application-library/nrf24/nrf24.c ****   #ifdef NRF24_DEBUG
 500:application-library/nrf24/nrf24.c ****   strcpy(message, "---- nrf24 tx self test. ----\n");
 501:application-library/nrf24/nrf24.c ****   serial_print(message);
 502:application-library/nrf24/nrf24.c **** 
 503:application-library/nrf24/nrf24.c ****   strcpy(message, "---- This test to verifies function of a tranmitter send without a receiver. ---
 504:application-library/nrf24/nrf24.c ****   serial_print(message);
 505:application-library/nrf24/nrf24.c ****   #endif
 506:application-library/nrf24/nrf24.c **** 
 507:application-library/nrf24/nrf24.c ****   uint8_t nRF24_status = 0x00;
 508:application-library/nrf24/nrf24.c **** 
 509:application-library/nrf24/nrf24.c ****   // Note that if we reset the nRF connected without re-poweron the chip, initial value of register
 510:application-library/nrf24/nrf24.c ****   /* Current State: [Power-on reset 100 ms] */
 511:application-library/nrf24/nrf24.c ****   nRF24_CE_0();
 512:application-library/nrf24/nrf24.c **** 
 513:application-library/nrf24/nrf24.c ****   /* Current State: [Power-Down] (RF transmission is Power-Down, but SPI is alive.) */
 514:application-library/nrf24/nrf24.c ****   writing_byte = 0x00;
ARM GAS  /tmp/cc0cESOd.s 			page 28


 515:application-library/nrf24/nrf24.c ****   nRF24_verified_write_register(W_REGISTER_MASK + EN_AA, 1, &writing_byte);        // disable auto 
 516:application-library/nrf24/nrf24.c ****   nRF24_verified_write_register(W_REGISTER_MASK + EN_RXADDR, 1, &writing_byte);    // disable RX da
 517:application-library/nrf24/nrf24.c ****   nRF24_verified_write_register(W_REGISTER_MASK + SETUP_RETR, 1, &writing_byte);   // disable autom
 518:application-library/nrf24/nrf24.c **** 
 519:application-library/nrf24/nrf24.c ****   writing_byte = 0x0E;
 520:application-library/nrf24/nrf24.c ****   nRF24_verified_write_register(W_REGISTER_MASK + CONFIG, 1, &writing_byte);       // PWR_UP = 1 PR
 521:application-library/nrf24/nrf24.c **** 
 522:application-library/nrf24/nrf24.c ****   /* PWR_UP=1, state transition to [Standby-I] */
 523:application-library/nrf24/nrf24.c ****   uint8_t test_payload[4] = {0xC0, 0xC0, 0xCA, 0xFE}; // clock out a payload, now TX FIFO not empty
 524:application-library/nrf24/nrf24.c ****   spi_write_register(W_TX_PAYLOAD, 4, test_payload);
 525:application-library/nrf24/nrf24.c ****   nRF24_CE_1(); // Chip Enable. Fire the packet out on the antenna!
 526:application-library/nrf24/nrf24.c ****   
 527:application-library/nrf24/nrf24.c ****   /* TX FIFO not empty AND CE = 1, state transition to [TX MODE] */
 528:application-library/nrf24/nrf24.c ****   /* Get nRF24 <STATUS> register value. */
 529:application-library/nrf24/nrf24.c ****   spi_read_register(R_REGISTER_MASK + STATUS, 1, &nRF24_status);
 530:application-library/nrf24/nrf24.c **** 
 531:application-library/nrf24/nrf24.c ****   SPI_DELAY(1);
 532:application-library/nrf24/nrf24.c **** 
 533:application-library/nrf24/nrf24.c ****   /* CE=0, state transition -> now return to [Standby-I]. */
 534:application-library/nrf24/nrf24.c ****   nRF24_CE_0();
 535:application-library/nrf24/nrf24.c **** 
 536:application-library/nrf24/nrf24.c ****   /* Now check test result. */
 537:application-library/nrf24/nrf24.c ****   if (nRF24_status & 0x2E) 
 538:application-library/nrf24/nrf24.c ****   {
 539:application-library/nrf24/nrf24.c ****     #ifdef NRF24_DEBUG
 540:application-library/nrf24/nrf24.c ****     strcpy(message, "\n > nRF24 transmission self-test has passed. \
 541:application-library/nrf24/nrf24.c ****                        <STATUS> has value of 0x2E. \
 542:application-library/nrf24/nrf24.c ****                        TX_DS (transfer data sent) was set. \
 543:application-library/nrf24/nrf24.c ****                        RX_P_NO = 111, this means RX FIFO Empty. \n");
 544:application-library/nrf24/nrf24.c ****     serial_print(message);
 545:application-library/nrf24/nrf24.c ****     #endif
 546:application-library/nrf24/nrf24.c ****   } 
 547:application-library/nrf24/nrf24.c ****   else 
 548:application-library/nrf24/nrf24.c ****   {
 549:application-library/nrf24/nrf24.c ****     #ifdef NRF24_DEBUG
 550:application-library/nrf24/nrf24.c ****     sprintf(message, "\n > nRF24 transmission self-test has failed. <STATUS> is expected 0x2E. Curr
 551:application-library/nrf24/nrf24.c ****     serial_print(message);
 552:application-library/nrf24/nrf24.c ****     #endif
 553:application-library/nrf24/nrf24.c ****   }
 554:application-library/nrf24/nrf24.c **** 
 555:application-library/nrf24/nrf24.c ****   /* (!) The above code already determined if the chip works in TX mode.*/
 556:application-library/nrf24/nrf24.c ****   /* The following code keeps sending the payload in a while loop. Comment below out if we don't ne
 557:application-library/nrf24/nrf24.c ****   /* The following code will be useful when we are testing a receiver board. */
 558:application-library/nrf24/nrf24.c ****   /* clock out a four-byte payload "C0C0 CAFE" */
 559:application-library/nrf24/nrf24.c ****   while(1) 
 560:application-library/nrf24/nrf24.c ****   {
 561:application-library/nrf24/nrf24.c ****     uint8_t payload[] = {0xC0, 0xC0, 0xCA, 0xFE}; 
 562:application-library/nrf24/nrf24.c **** 
 563:application-library/nrf24/nrf24.c ****     spi_write_register(W_TX_PAYLOAD, 4, (uint8_t*) payload);
 564:application-library/nrf24/nrf24.c **** 
 565:application-library/nrf24/nrf24.c ****     /* Fire out the transmit packet */
 566:application-library/nrf24/nrf24.c ****     nRF24_CE_1(); 
 567:application-library/nrf24/nrf24.c **** 
 568:application-library/nrf24/nrf24.c ****     /* read <STATUS> register*/
 569:application-library/nrf24/nrf24.c ****     uint8_t status;
 570:application-library/nrf24/nrf24.c ****     spi_read_register(R_REGISTER_MASK + STATUS, 1, &status);
 571:application-library/nrf24/nrf24.c **** 
ARM GAS  /tmp/cc0cESOd.s 			page 29


 572:application-library/nrf24/nrf24.c ****     #ifdef NRF24_DEBUG
 573:application-library/nrf24/nrf24.c ****     sprintf(message, "<STATUS> REGISTER : %#02x\n", status);
 574:application-library/nrf24/nrf24.c ****     serial_print(message);
 575:application-library/nrf24/nrf24.c ****     #endif
 576:application-library/nrf24/nrf24.c **** 
 577:application-library/nrf24/nrf24.c ****     if (status == 0x2e) /* TX_DS bit is set. */
 578:application-library/nrf24/nrf24.c ****     {
 579:application-library/nrf24/nrf24.c ****       #ifdef NRF24_DEBUG
 580:application-library/nrf24/nrf24.c ****       strcpy(message, "nRF24 send status - success -\n");
 581:application-library/nrf24/nrf24.c ****       serial_print(message);
 582:application-library/nrf24/nrf24.c ****       #endif
 583:application-library/nrf24/nrf24.c ****     } 
 584:application-library/nrf24/nrf24.c ****     else 
 585:application-library/nrf24/nrf24.c ****     {
 586:application-library/nrf24/nrf24.c ****       #ifdef NRF24_DEBUG
 587:application-library/nrf24/nrf24.c ****       strcpy(message, "nRF24 send status - failure -\n");
 588:application-library/nrf24/nrf24.c ****       serial_print(message);
 589:application-library/nrf24/nrf24.c ****       #endif
 590:application-library/nrf24/nrf24.c ****     }
 591:application-library/nrf24/nrf24.c **** 
 592:application-library/nrf24/nrf24.c ****     /* write 1 to <STATUS> register to clear TX_DS, TX_DS bit is Write-to-Clear. */
 593:application-library/nrf24/nrf24.c ****     nRF24_clear_STATUS(RX_DR_MASK1, TX_DS_MASK1, MAX_RT_MASK1);
 594:application-library/nrf24/nrf24.c **** 
 595:application-library/nrf24/nrf24.c ****     nRF24_CE_0(); /* stop transmission. Returns to [Standby-I]. */
 596:application-library/nrf24/nrf24.c ****   }
 597:application-library/nrf24/nrf24.c ****   
 598:application-library/nrf24/nrf24.c **** }
 599:application-library/nrf24/nrf24.c **** 
 600:application-library/nrf24/nrf24.c **** 
 601:application-library/nrf24/nrf24.c **** /**
 602:application-library/nrf24/nrf24.c ****   * @brief  Send packet with nRF24.
 603:application-library/nrf24/nrf24.c ****   * @param  tx_payload_width. Length of data packet to send to the receiver. 
 604:application-library/nrf24/nrf24.c ****               (!) tx_payload_width Must be the same value as the receiver's <RX_PW_Px>. x being the
 605:application-library/nrf24/nrf24.c ****   * @param  payload Pointer to the actual data packet being sent to the receiver.
 606:application-library/nrf24/nrf24.c ****   * @retval None.
 607:application-library/nrf24/nrf24.c ****   * @note   Call nRF24_configure_tx_mode() before this test to initailize TX mode in nRF24L01+.
 608:application-library/nrf24/nrf24.c ****   */
 609:application-library/nrf24/nrf24.c **** void nRF24_send_packet(uint8_t tx_payload_width, uint8_t* p_payload) 
 610:application-library/nrf24/nrf24.c **** {
 611:application-library/nrf24/nrf24.c **** 
 612:application-library/nrf24/nrf24.c ****   char message[64];
 613:application-library/nrf24/nrf24.c ****       
 614:application-library/nrf24/nrf24.c ****   /* clock out the packet to TX FIFO*/
 615:application-library/nrf24/nrf24.c ****   nRF24_release_payload(tx_payload_width, p_payload);
 616:application-library/nrf24/nrf24.c **** 
 617:application-library/nrf24/nrf24.c ****   /* Fire out the transmit packet */
 618:application-library/nrf24/nrf24.c ****   nRF24_CE_1(); 
 619:application-library/nrf24/nrf24.c **** 
 620:application-library/nrf24/nrf24.c ****   /* read <STATUS> register*/
 621:application-library/nrf24/nrf24.c ****   uint8_t status;
 622:application-library/nrf24/nrf24.c ****   spi_read_register(R_REGISTER_MASK + STATUS, 1, &status);
 623:application-library/nrf24/nrf24.c **** 
 624:application-library/nrf24/nrf24.c ****   /* print <STATUS> register*/
 625:application-library/nrf24/nrf24.c ****   #ifdef NRF24_DEBUG
 626:application-library/nrf24/nrf24.c ****   sprintf(message, "<STATUS> REGISTER : %#02x\n", status);
 627:application-library/nrf24/nrf24.c ****   serial_print(message);
 628:application-library/nrf24/nrf24.c ****   #endif
ARM GAS  /tmp/cc0cESOd.s 			page 30


 629:application-library/nrf24/nrf24.c **** 
 630:application-library/nrf24/nrf24.c ****   /* Verify if TX_DS bit is set in <STATUS> */
 631:application-library/nrf24/nrf24.c ****   if (status == 0x2e) /* TX_DS_MASK1 = 1 << 5 = 0x20 */
 632:application-library/nrf24/nrf24.c ****   {
 633:application-library/nrf24/nrf24.c ****     #ifdef NRF24_DEBUG
 634:application-library/nrf24/nrf24.c ****     strcpy(message, "nRF24 send status - success -\n");
 635:application-library/nrf24/nrf24.c ****     serial_print(message);
 636:application-library/nrf24/nrf24.c ****     #endif
 637:application-library/nrf24/nrf24.c ****   } 
 638:application-library/nrf24/nrf24.c ****   else 
 639:application-library/nrf24/nrf24.c ****   {
 640:application-library/nrf24/nrf24.c ****     #ifdef NRF24_DEBUG
 641:application-library/nrf24/nrf24.c ****     strcpy(message, "nRF24 send status - failure -\n");
 642:application-library/nrf24/nrf24.c ****     serial_print(message);
 643:application-library/nrf24/nrf24.c ****     #endif
 644:application-library/nrf24/nrf24.c ****   }
 645:application-library/nrf24/nrf24.c **** 
 646:application-library/nrf24/nrf24.c ****   /* write 1 to <STATUS> register to clear TX_DS, TX_DS bit is Write-to-Clear. */
 647:application-library/nrf24/nrf24.c ****   nRF24_clear_STATUS(RX_DR_MASK1, TX_DS_MASK1, MAX_RT_MASK1);
 648:application-library/nrf24/nrf24.c **** 
 649:application-library/nrf24/nrf24.c ****   /* Stop transmission. Returns to [Standby-I]. */
 650:application-library/nrf24/nrf24.c ****   nRF24_CE_0(); 
 651:application-library/nrf24/nrf24.c **** }
 652:application-library/nrf24/nrf24.c **** 
 653:application-library/nrf24/nrf24.c **** /**
 654:application-library/nrf24/nrf24.c ****   * @brief  Configure nRF24L01+ in TX mode without Enhanced ShockBurst.
 655:application-library/nrf24/nrf24.c ****   *           Without Enhanced ShockBurst, Auto Acknowledgement and Auto-Retransmission is masked o
 656:application-library/nrf24/nrf24.c ****   *           The TX nRF transmit is successful by detecting 1 on TX_DS field in <STATUS> register.
 657:application-library/nrf24/nrf24.c ****   *           TX is successful even if there's no presense or acknowledge from an RX nRF.
 658:application-library/nrf24/nrf24.c ****   *         (!) Auto Acknowledgement must also be masked off on the RX nRF24 in order for it to rec
 659:application-library/nrf24/nrf24.c ****   *           If RX nRF has different setting in parameters (expect for TX/RX), 
 660:application-library/nrf24/nrf24.c ****   *           The TX nRF24 may be successfully sending data, but RX nRF24 receives none.
 661:application-library/nrf24/nrf24.c ****   * @param  None.
 662:application-library/nrf24/nrf24.c ****   * @retval None.
 663:application-library/nrf24/nrf24.c ****   * @note   The states (marked such as [TX Mode]) are found in "nRF24L01+ Product Spefication" -- 6
 664:application-library/nrf24/nrf24.c ****   */
 665:application-library/nrf24/nrf24.c **** void nRF24_config_normal_tx_mode() 
 666:application-library/nrf24/nrf24.c **** {
 667:application-library/nrf24/nrf24.c ****     nRF24_CE_0();
 668:application-library/nrf24/nrf24.c **** 
 669:application-library/nrf24/nrf24.c ****     /* Set Address Width as 5 bytes. On the Receiver side, set RX_ADDR_P0 with same value. */
 670:application-library/nrf24/nrf24.c ****     nRF24_set_SETUP_AW(SETUP_AW_MASK5bytes);
 671:application-library/nrf24/nrf24.c ****  
 672:application-library/nrf24/nrf24.c ****     /* Set TX address to nRF24. */
 673:application-library/nrf24/nrf24.c ****     uint8_t TX_ADDRESS[5] = {0x99,0xAA,0xBB,0xCC,0xDD};  /* 5 byte TX address */
 674:application-library/nrf24/nrf24.c ****     nRF24_set_TX_ADDR(5, TX_ADDRESS); 
 675:application-library/nrf24/nrf24.c **** 
 676:application-library/nrf24/nrf24.c ****     /* Disable Auto-Acknowledgement on Pipe 5 - Pipe 0, this also disables Enhanced ShockBurst. */
 677:application-library/nrf24/nrf24.c ****     nRF24_set_EN_AA(ENAA_P5_MASK0, ENAA_P4_MASK0, ENAA_P3_MASK0, ENAA_P2_MASK0, ENAA_P1_MASK0, ENAA
 678:application-library/nrf24/nrf24.c **** 
 679:application-library/nrf24/nrf24.c ****     /* Disable RX on Pipe 5 - Pipe 0. */
 680:application-library/nrf24/nrf24.c ****     nRF24_set_EN_RXADDR(ERX_P5_MASK0, ERX_P4_MASK0, ERX_P3_MASK0, ERX_P2_MASK0, ERX_P1_MASK0, ERX_P
 681:application-library/nrf24/nrf24.c **** 
 682:application-library/nrf24/nrf24.c ****     /* Disable Auto-Retransmission, this also disables Enhanced ShockBurst. */
 683:application-library/nrf24/nrf24.c ****     nRF24_set_SETUP_RETR(ARD_MASKDEFAULT, ARC_MASK0);
 684:application-library/nrf24/nrf24.c **** 
 685:application-library/nrf24/nrf24.c ****     /* Set Frquency Channel. Carrier Frequency = 2.4GHz + RF_CH = (2400 + RF_CH) = 2440 MHz. */
ARM GAS  /tmp/cc0cESOd.s 			page 31


 686:application-library/nrf24/nrf24.c ****     nRF24_set_RF_CH(40);
 687:application-library/nrf24/nrf24.c **** 
 688:application-library/nrf24/nrf24.c ****     /* Set 'Continuous Carrier Transmit', RF Data Rate, and RF TX Power */
 689:application-library/nrf24/nrf24.c ****     nRF24_set_RF_SETUP(CONT_WAVE_MASKDEFAULT, RF_DR_LOW_MASKDEFAULT, PLL_LOCK_MASKDEFAULT, RF_DR_HI
 690:application-library/nrf24/nrf24.c ****   
 691:application-library/nrf24/nrf24.c ****     /* Set IRQ Masks, CRC, Power-Up and select RX/TX mode. */
 692:application-library/nrf24/nrf24.c ****     nRF24_set_CONFIG(MASK_RX_DR_MASKDEFAULT, MASK_TX_DS_MASKDEFAULT, MASK_MAX_RT_MASKDEFAULT, EN_CR
 693:application-library/nrf24/nrf24.c **** 
 694:application-library/nrf24/nrf24.c ****     /* CE is not set to 1, nRF24 still stays in [Standby-I] Mode. */
 695:application-library/nrf24/nrf24.c ****     /* CE = 1 is not activated until we write to TX FIFO so stays in Standby-I mode. */
 696:application-library/nrf24/nrf24.c **** }
 697:application-library/nrf24/nrf24.c **** 
 698:application-library/nrf24/nrf24.c **** /**
 699:application-library/nrf24/nrf24.c ****   * @brief  TX (transmit) Mode with Enhanced ShockBurst.
 700:application-library/nrf24/nrf24.c ****   * @param  None.
 701:application-library/nrf24/nrf24.c ****   * @retval None.
 702:application-library/nrf24/nrf24.c ****   * @note   In Enhanced ShockBurst, Auto Acknowledgement and Auto-Retransmission are used to guaran
 703:application-library/nrf24/nrf24.c ****   *         Thus used pipe's EN_AA and SETUP_RETR is masked 1.
 704:application-library/nrf24/nrf24.c ****   *         The TX nRF transmit is successful by detecting 1 on TX_DS field in <STATUS> register.
 705:application-library/nrf24/nrf24.c ****   *         However, trasmit is successful only when an RX nRF, also with Enhanced ShockBurst turne
 706:application-library/nrf24/nrf24.c ****   *           send Acknowledgement to the TX nRF.
 707:application-library/nrf24/nrf24.c ****   *         The TX nRF, in order to receive that Acknowledgement signal, needs to turn on receive o
 708:application-library/nrf24/nrf24.c ****   *         The states (marked such as [TX Mode]) are found in "nRF24L01+ Product Spefication" -- 6
 709:application-library/nrf24/nrf24.c ****   */
 710:application-library/nrf24/nrf24.c **** void nRF24_config_enhanced_shockburst_tx_mode() 
 711:application-library/nrf24/nrf24.c **** {
 712:application-library/nrf24/nrf24.c ****     nRF24_CE_0();
 713:application-library/nrf24/nrf24.c ****     // nRF24_clear_STATUS(RX_DR_MASK1, TX_DS_MASK1, MAX_RT_MASK1);
 714:application-library/nrf24/nrf24.c **** 
 715:application-library/nrf24/nrf24.c ****     /* Set TX_ADDR for transmit. On the Receiver side, set RX_ADDR_P0 with same value. */
 716:application-library/nrf24/nrf24.c ****     nRF24_set_SETUP_AW(SETUP_AW_MASK5bytes);
 717:application-library/nrf24/nrf24.c **** 
 718:application-library/nrf24/nrf24.c ****     uint8_t TX_ADDRESS[5] = {0x99,0xAA,0xBB,0xCC,0xDD};  
 719:application-library/nrf24/nrf24.c ****     nRF24_set_TX_ADDR(5, TX_ADDRESS);
 720:application-library/nrf24/nrf24.c **** 
 721:application-library/nrf24/nrf24.c ****     /* ShockBurst Auto-Acknowledgement: In order to receive hardware-generated ACK from the receive
 722:application-library/nrf24/nrf24.c ****     nRF24_set_RX_ADDR_P0(5, TX_ADDRESS);
 723:application-library/nrf24/nrf24.c **** 
 724:application-library/nrf24/nrf24.c ****     nRF24_set_EN_AA(ENAA_P5_MASK0, ENAA_P4_MASK0, ENAA_P3_MASK0, ENAA_P2_MASK0, ENAA_P1_MASK0, ENAA
 725:application-library/nrf24/nrf24.c ****     nRF24_set_EN_RXADDR(ERX_P5_MASK0, ERX_P4_MASK0, ERX_P3_MASK0, ERX_P2_MASK0, ERX_P1_MASK0, ERX_P
 726:application-library/nrf24/nrf24.c ****     nRF24_set_SETUP_RETR(ARD_MASKDEFAULT, ARC_MASK10);
 727:application-library/nrf24/nrf24.c ****     nRF24_set_RF_CH(40);
 728:application-library/nrf24/nrf24.c ****     uint8_t writing_byte = 0x07;
 729:application-library/nrf24/nrf24.c ****     nRF24_verified_write_register(W_REGISTER_MASK + RF_SETUP, 1, &writing_byte);
 730:application-library/nrf24/nrf24.c ****     // nRF24_set_RF_SETUP(CONT_WAVE_MASKDEFAULT, RF_DR_LOW_MASKDEFAULT, PLL_LOCK_MASKDEFAULT, RF_DR
 731:application-library/nrf24/nrf24.c ****     nRF24_set_CONFIG(MASK_RX_DR_MASKDEFAULT, MASK_TX_DS_MASKDEFAULT, MASK_MAX_RT_MASKDEFAULT, EN_CR
 732:application-library/nrf24/nrf24.c ****     SPI_DELAY(10);
 733:application-library/nrf24/nrf24.c **** 
 734:application-library/nrf24/nrf24.c **** }
 735:application-library/nrf24/nrf24.c **** 
 736:application-library/nrf24/nrf24.c **** 
 737:application-library/nrf24/nrf24.c **** /**
 738:application-library/nrf24/nrf24.c ****   * @brief  Configure nRF24L01+ in RX mode without Enhanced ShockBurst.
 739:application-library/nrf24/nrf24.c ****   *           Without Enhanced ShockBurst, Auto Acknowledgement and Auto-Retransmission is masked o
 740:application-library/nrf24/nrf24.c ****   *           Make sure to setup a TX nRF24 first and keep transmitting so we can test if RX nRF24 
 741:application-library/nrf24/nrf24.c ****   *         (!) Auto Acknowledgement must also be masked off on the TX nRF24 in order for RX to rec
 742:application-library/nrf24/nrf24.c ****   *           If TX and RX nRF24 module has different setting in parameters (expect for PRIM_RX), 
ARM GAS  /tmp/cc0cESOd.s 			page 32


 743:application-library/nrf24/nrf24.c ****   *           The TX nRF24 may be successfully sending data, but RX nRF24 receives none.
 744:application-library/nrf24/nrf24.c ****   * @param  None.
 745:application-library/nrf24/nrf24.c ****   * @retval None.
 746:application-library/nrf24/nrf24.c ****   * @note   The states (marked such as [TX Mode]) are found in "nRF24L01+ Product Spefication" -- 6
 747:application-library/nrf24/nrf24.c ****   */
 748:application-library/nrf24/nrf24.c **** void nRF24_config_normal_rx_mode() 
 749:application-library/nrf24/nrf24.c **** {
 750:application-library/nrf24/nrf24.c ****     nRF24_CE_0();
 751:application-library/nrf24/nrf24.c **** 
 752:application-library/nrf24/nrf24.c ****     /* Set Address Width as 5 bytes. On the Receiver side, set RX_ADDR_P0 with same value. */
 753:application-library/nrf24/nrf24.c ****     nRF24_set_SETUP_AW(SETUP_AW_MASK5bytes);
 754:application-library/nrf24/nrf24.c ****  
 755:application-library/nrf24/nrf24.c ****     /* Set TX address to nRF24. */
 756:application-library/nrf24/nrf24.c ****     uint8_t RX_ADDRESS[5] = {0x99,0xAA,0xBB,0xCC,0xDD};  /* 5 byte RX address, need to be same as T
 757:application-library/nrf24/nrf24.c ****     nRF24_set_RX_ADDR_P0(5, RX_ADDRESS); 
 758:application-library/nrf24/nrf24.c **** 
 759:application-library/nrf24/nrf24.c ****     /* Disable Auto-Acknowledgement on Pipe 5 - Pipe 0, this also disables Enhanced ShockBurst. */
 760:application-library/nrf24/nrf24.c ****     nRF24_set_EN_AA(ENAA_P5_MASK0, ENAA_P4_MASK0, ENAA_P3_MASK0, ENAA_P2_MASK0, ENAA_P1_MASK0, ENAA
 761:application-library/nrf24/nrf24.c **** 
 762:application-library/nrf24/nrf24.c ****     /* Enable only RX address on Pipe 0 */
 763:application-library/nrf24/nrf24.c ****     nRF24_set_EN_RXADDR(ERX_P5_MASK0, ERX_P4_MASK0, ERX_P3_MASK0, ERX_P2_MASK0, ERX_P1_MASK0, ERX_P
 764:application-library/nrf24/nrf24.c **** 
 765:application-library/nrf24/nrf24.c ****     /* Disable Auto-Retransmission, this also disables Enhanced ShockBurst. */
 766:application-library/nrf24/nrf24.c ****     nRF24_set_SETUP_RETR(ARD_MASKDEFAULT, ARC_MASK0);
 767:application-library/nrf24/nrf24.c **** 
 768:application-library/nrf24/nrf24.c ****     /* Set Frquency Channel. Carrier Frequency = 2.4GHz + RF_CH = (2400 + RF_CH) = 2440 MHz. */
 769:application-library/nrf24/nrf24.c ****     nRF24_set_RF_CH(40);
 770:application-library/nrf24/nrf24.c **** 
 771:application-library/nrf24/nrf24.c ****     /* Set 'Continuous Carrier Transmit', RF Data Rate, and RF TX Power */
 772:application-library/nrf24/nrf24.c ****     nRF24_set_RF_SETUP(CONT_WAVE_MASKDEFAULT, RF_DR_LOW_MASKDEFAULT, PLL_LOCK_MASKDEFAULT, RF_DR_HI
 773:application-library/nrf24/nrf24.c **** 
 774:application-library/nrf24/nrf24.c **** 		/* Set receive payload width = 32. */
 775:application-library/nrf24/nrf24.c **** 		nRF24_set_RX_PW_P0(32);
 776:application-library/nrf24/nrf24.c ****   
 777:application-library/nrf24/nrf24.c ****     /* Set IRQ Masks, CRC, Power-Up and select RX mode. */
 778:application-library/nrf24/nrf24.c ****     nRF24_set_CONFIG(MASK_RX_DR_MASKDEFAULT, MASK_TX_DS_MASKDEFAULT, MASK_MAX_RT_MASKDEFAULT, EN_CR
 779:application-library/nrf24/nrf24.c **** 
 780:application-library/nrf24/nrf24.c ****     /* CE is set to 1, nRF24 transition from [Standby-I] to active [RX Mode]. */
 781:application-library/nrf24/nrf24.c **** 		nRF24_CE_1();
 782:application-library/nrf24/nrf24.c **** 		/* nRF24 starts hearing as RX. */
 783:application-library/nrf24/nrf24.c **** }
 784:application-library/nrf24/nrf24.c **** 
 785:application-library/nrf24/nrf24.c **** 
 786:application-library/nrf24/nrf24.c **** 
 787:application-library/nrf24/nrf24.c **** /**
 788:application-library/nrf24/nrf24.c ****   * @TODO Convert an array of hex bytes to string.
 789:application-library/nrf24/nrf24.c ****   */
 790:application-library/nrf24/nrf24.c **** void print_bytearray(uint8_t num_bytes, uint8_t* byte_array)
 791:application-library/nrf24/nrf24.c **** {
 1013              		.loc 1 791 0
 1014              		.cfi_startproc
 1015              		@ args = 0, pretend = 0, frame = 8
 1016              		@ frame_needed = 0, uses_anonymous_args = 0
 1017              	.LVL97:
 1018 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1019              	.LCFI20:
 1020              		.cfi_def_cfa_offset 20
ARM GAS  /tmp/cc0cESOd.s 			page 33


 1021              		.cfi_offset 4, -20
 1022              		.cfi_offset 5, -16
 1023              		.cfi_offset 6, -12
 1024              		.cfi_offset 7, -8
 1025              		.cfi_offset 14, -4
 1026 0002 83B0     		sub	sp, sp, #12
 1027              	.LCFI21:
 1028              		.cfi_def_cfa_offset 32
 1029 0004 0646     		mov	r6, r0
 1030 0006 0F46     		mov	r7, r1
 1031              	.LVL98:
 1032              	.LBB90:
 792:application-library/nrf24/nrf24.c ****   char buf;
 793:application-library/nrf24/nrf24.c ****   for (int i = 0; i < num_bytes; ++i)
 1033              		.loc 1 793 0
 1034 0008 0024     		movs	r4, #0
 1035 000a 18E0     		b	.L83
 1036              	.LVL99:
 1037              	.L84:
 794:application-library/nrf24/nrf24.c ****   {
 795:application-library/nrf24/nrf24.c ****     sprintf(&buf, "%#02x", byte_array[i]);
 1038              		.loc 1 795 0 discriminator 3
 1039 000c 3A5D     		ldrb	r2, [r7, r4]	@ zero_extendqisi2
 1040 000e 1149     		ldr	r1, .L86
 1041 0010 0DF10700 		add	r0, sp, #7
 1042 0014 FFF7FEFF 		bl	sprintf
 1043              	.LVL100:
 1044              	.LBB91:
 1045              	.LBB92:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 1046              		.loc 1 183 0 discriminator 3
 1047 0018 0DF10700 		add	r0, sp, #7
 1048              	.LVL101:
 1049 001c FFF7FEFF 		bl	strlen
 1050              	.LVL102:
 1051 0020 0D4D     		ldr	r5, .L86+4
 1052 0022 6423     		movs	r3, #100
 1053 0024 82B2     		uxth	r2, r0
 1054 0026 0DF10701 		add	r1, sp, #7
 1055              	.LVL103:
 1056 002a 2846     		mov	r0, r5
 1057 002c FFF7FEFF 		bl	HAL_UART_Transmit
 1058              	.LVL104:
 1059              	.LBE92:
 1060              	.LBE91:
 1061              	.LBB93:
 1062              	.LBB94:
 1063 0030 6423     		movs	r3, #100
 1064 0032 0122     		movs	r2, #1
 1065 0034 0949     		ldr	r1, .L86+8
 1066 0036 2846     		mov	r0, r5
 1067 0038 FFF7FEFF 		bl	HAL_UART_Transmit
 1068              	.LVL105:
 1069              	.LBE94:
 1070              	.LBE93:
 793:application-library/nrf24/nrf24.c ****   {
 1071              		.loc 1 793 0 discriminator 3
ARM GAS  /tmp/cc0cESOd.s 			page 34


 1072 003c 0134     		adds	r4, r4, #1
 1073              	.LVL106:
 1074              	.L83:
 793:application-library/nrf24/nrf24.c ****   {
 1075              		.loc 1 793 0 is_stmt 0 discriminator 1
 1076 003e B442     		cmp	r4, r6
 1077 0040 E4DB     		blt	.L84
 1078              	.LVL107:
 1079              	.LBE90:
 1080              	.LBB95:
 1081              	.LBB96:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 1082              		.loc 1 183 0 is_stmt 1
 1083 0042 6423     		movs	r3, #100
 1084 0044 0122     		movs	r2, #1
 1085 0046 0649     		ldr	r1, .L86+12
 1086 0048 0348     		ldr	r0, .L86+4
 1087 004a FFF7FEFF 		bl	HAL_UART_Transmit
 1088              	.LVL108:
 1089              	.LBE96:
 1090              	.LBE95:
 796:application-library/nrf24/nrf24.c **** 		serial_print(&buf);
 797:application-library/nrf24/nrf24.c **** 		/* Print delimiter */
 798:application-library/nrf24/nrf24.c **** 		serial_print("-");
 799:application-library/nrf24/nrf24.c ****   }
 800:application-library/nrf24/nrf24.c **** 	serial_print("\n");
 801:application-library/nrf24/nrf24.c **** }
 1091              		.loc 1 801 0
 1092 004e 03B0     		add	sp, sp, #12
 1093              	.LCFI22:
 1094              		.cfi_def_cfa_offset 20
 1095              		@ sp needed
 1096 0050 F0BD     		pop	{r4, r5, r6, r7, pc}
 1097              	.LVL109:
 1098              	.L87:
 1099 0052 00BF     		.align	2
 1100              	.L86:
 1101 0054 00000000 		.word	.LC5
 1102 0058 00000000 		.word	huart2
 1103 005c 08000000 		.word	.LC6
 1104 0060 0C000000 		.word	.LC7
 1105              		.cfi_endproc
 1106              	.LFE153:
 1108              		.section	.text.nRF24_print_all_registers,"ax",%progbits
 1109              		.align	1
 1110              		.global	nRF24_print_all_registers
 1111              		.syntax unified
 1112              		.thumb
 1113              		.thumb_func
 1114              		.fpu fpv4-sp-d16
 1116              	nRF24_print_all_registers:
 1117              	.LFB155:
 802:application-library/nrf24/nrf24.c **** 
 803:application-library/nrf24/nrf24.c **** /**
 804:application-library/nrf24/nrf24.c **** 	* @brief  Read received packet from RX FIFO.
 805:application-library/nrf24/nrf24.c **** 	* @param  None.
 806:application-library/nrf24/nrf24.c **** 	* @retval None.
ARM GAS  /tmp/cc0cESOd.s 			page 35


 807:application-library/nrf24/nrf24.c **** 	* @note   This function polls the status register and determined whether there's data received ava
 808:application-library/nrf24/nrf24.c **** 	*/
 809:application-library/nrf24/nrf24.c **** void nRF24_receive_packet() 
 810:application-library/nrf24/nrf24.c **** {
 811:application-library/nrf24/nrf24.c **** 	uint8_t RX_WIDTH = 32;
 812:application-library/nrf24/nrf24.c ****   uint8_t payload[RX_WIDTH];
 813:application-library/nrf24/nrf24.c ****   char message[64];
 814:application-library/nrf24/nrf24.c **** 
 815:application-library/nrf24/nrf24.c ****   uint8_t nRF24_status = nRF24_get_STATUS();
 816:application-library/nrf24/nrf24.c **** 
 817:application-library/nrf24/nrf24.c **** 	/* Check if RX_DR is set: RX Data Ready*/
 818:application-library/nrf24/nrf24.c ****   if (nRF24_status & RX_DR_READMASK){
 819:application-library/nrf24/nrf24.c **** 		/* Transition from [RX Mode] to [Standby-I] */
 820:application-library/nrf24/nrf24.c ****     nRF24_CE_0(); 
 821:application-library/nrf24/nrf24.c **** 
 822:application-library/nrf24/nrf24.c **** 		/* Read received payload */
 823:application-library/nrf24/nrf24.c ****     spi_read_register(R_RX_PAYLOAD, RX_WIDTH, payload); 
 824:application-library/nrf24/nrf24.c **** 
 825:application-library/nrf24/nrf24.c **** 		#ifdef NRF24_DEBUG
 826:application-library/nrf24/nrf24.c **** 		strcpy(message, "> Data received: ");
 827:application-library/nrf24/nrf24.c **** 		serial_print(message);
 828:application-library/nrf24/nrf24.c **** 		print_bytearray(32, payload);
 829:application-library/nrf24/nrf24.c **** 		#endif
 830:application-library/nrf24/nrf24.c **** 
 831:application-library/nrf24/nrf24.c **** 		/* Clear status register */
 832:application-library/nrf24/nrf24.c ****     nRF24_clear_STATUS(RX_DR_MASK1, TX_DS_MASK1, MAX_RT_MASK1);
 833:application-library/nrf24/nrf24.c ****     nRF24_CE_1();
 834:application-library/nrf24/nrf24.c ****   }else {
 835:application-library/nrf24/nrf24.c **** 		#ifdef NRF24_DEBUG
 836:application-library/nrf24/nrf24.c **** 		strcpy(message, "No data has been received.\n");
 837:application-library/nrf24/nrf24.c **** 		serial_print(message);
 838:application-library/nrf24/nrf24.c **** 		#endif
 839:application-library/nrf24/nrf24.c ****   }
 840:application-library/nrf24/nrf24.c **** }
 841:application-library/nrf24/nrf24.c **** 
 842:application-library/nrf24/nrf24.c **** 
 843:application-library/nrf24/nrf24.c **** /**
 844:application-library/nrf24/nrf24.c ****   * @brief  Print all registers on nRF24. 
 845:application-library/nrf24/nrf24.c ****   * @param  None.
 846:application-library/nrf24/nrf24.c ****   * @retval None.
 847:application-library/nrf24/nrf24.c ****   */
 848:application-library/nrf24/nrf24.c **** void nRF24_print_all_registers()
 849:application-library/nrf24/nrf24.c **** {
 1118              		.loc 1 849 0
 1119              		.cfi_startproc
 1120              		@ args = 0, pretend = 0, frame = 40
 1121              		@ frame_needed = 0, uses_anonymous_args = 0
 1122 0000 30B5     		push	{r4, r5, lr}
 1123              	.LCFI23:
 1124              		.cfi_def_cfa_offset 12
 1125              		.cfi_offset 4, -12
 1126              		.cfi_offset 5, -8
 1127              		.cfi_offset 14, -4
 1128 0002 8FB0     		sub	sp, sp, #60
 1129              	.LCFI24:
 1130              		.cfi_def_cfa_offset 72
 850:application-library/nrf24/nrf24.c ****     uint8_t read_data;
ARM GAS  /tmp/cc0cESOd.s 			page 36


 851:application-library/nrf24/nrf24.c ****     uint8_t read_buf[4];
 852:application-library/nrf24/nrf24.c ****     char message[32];
 853:application-library/nrf24/nrf24.c ****   
 854:application-library/nrf24/nrf24.c ****     spi_read_register(R_REGISTER_MASK + CONFIG, 1, &read_data);
 1131              		.loc 1 854 0
 1132 0004 0DF13702 		add	r2, sp, #55
 1133 0008 0121     		movs	r1, #1
 1134 000a 0020     		movs	r0, #0
 1135 000c FFF7FEFF 		bl	spi_read_register
 1136              	.LVL110:
 855:application-library/nrf24/nrf24.c ****     sprintf(message, "CONFIG: <0x%02x>\n", read_data);
 1137              		.loc 1 855 0
 1138 0010 9DF83720 		ldrb	r2, [sp, #55]	@ zero_extendqisi2
 1139 0014 BD49     		ldr	r1, .L90
 1140 0016 04A8     		add	r0, sp, #16
 1141 0018 FFF7FEFF 		bl	sprintf
 1142              	.LVL111:
 1143              	.LBB127:
 1144              	.LBB128:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 1145              		.loc 1 183 0
 1146 001c 04A8     		add	r0, sp, #16
 1147              	.LVL112:
 1148 001e FFF7FEFF 		bl	strlen
 1149              	.LVL113:
 1150 0022 BB4C     		ldr	r4, .L90+4
 1151 0024 6423     		movs	r3, #100
 1152 0026 82B2     		uxth	r2, r0
 1153 0028 04A9     		add	r1, sp, #16
 1154              	.LVL114:
 1155 002a 2046     		mov	r0, r4
 1156 002c FFF7FEFF 		bl	HAL_UART_Transmit
 1157              	.LVL115:
 1158              	.LBE128:
 1159              	.LBE127:
 856:application-library/nrf24/nrf24.c ****     serial_print(message);
 857:application-library/nrf24/nrf24.c **** 
 858:application-library/nrf24/nrf24.c ****     spi_read_register(R_REGISTER_MASK + EN_AA, 1, &read_data);
 1160              		.loc 1 858 0
 1161 0030 0DF13702 		add	r2, sp, #55
 1162 0034 0121     		movs	r1, #1
 1163 0036 0846     		mov	r0, r1
 1164 0038 FFF7FEFF 		bl	spi_read_register
 1165              	.LVL116:
 859:application-library/nrf24/nrf24.c ****     sprintf(message, "EN_AA: <0x%02x>\n", read_data);
 1166              		.loc 1 859 0
 1167 003c 9DF83720 		ldrb	r2, [sp, #55]	@ zero_extendqisi2
 1168 0040 B449     		ldr	r1, .L90+8
 1169 0042 04A8     		add	r0, sp, #16
 1170 0044 FFF7FEFF 		bl	sprintf
 1171              	.LVL117:
 1172              	.LBB129:
 1173              	.LBB130:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 1174              		.loc 1 183 0
 1175 0048 04A8     		add	r0, sp, #16
 1176              	.LVL118:
ARM GAS  /tmp/cc0cESOd.s 			page 37


 1177 004a FFF7FEFF 		bl	strlen
 1178              	.LVL119:
 1179 004e 6423     		movs	r3, #100
 1180 0050 82B2     		uxth	r2, r0
 1181 0052 04A9     		add	r1, sp, #16
 1182              	.LVL120:
 1183 0054 2046     		mov	r0, r4
 1184 0056 FFF7FEFF 		bl	HAL_UART_Transmit
 1185              	.LVL121:
 1186              	.LBE130:
 1187              	.LBE129:
 860:application-library/nrf24/nrf24.c ****     serial_print(message);
 861:application-library/nrf24/nrf24.c **** 
 862:application-library/nrf24/nrf24.c ****     spi_read_register(R_REGISTER_MASK + EN_RXADDR, 1, &read_data);
 1188              		.loc 1 862 0
 1189 005a 0DF13702 		add	r2, sp, #55
 1190 005e 0121     		movs	r1, #1
 1191 0060 0220     		movs	r0, #2
 1192 0062 FFF7FEFF 		bl	spi_read_register
 1193              	.LVL122:
 863:application-library/nrf24/nrf24.c ****     sprintf(message, "EN_RXADDR: <0x%02x>\n", read_data);
 1194              		.loc 1 863 0
 1195 0066 9DF83720 		ldrb	r2, [sp, #55]	@ zero_extendqisi2
 1196 006a AB49     		ldr	r1, .L90+12
 1197 006c 04A8     		add	r0, sp, #16
 1198 006e FFF7FEFF 		bl	sprintf
 1199              	.LVL123:
 1200              	.LBB131:
 1201              	.LBB132:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 1202              		.loc 1 183 0
 1203 0072 04A8     		add	r0, sp, #16
 1204              	.LVL124:
 1205 0074 FFF7FEFF 		bl	strlen
 1206              	.LVL125:
 1207 0078 6423     		movs	r3, #100
 1208 007a 82B2     		uxth	r2, r0
 1209 007c 04A9     		add	r1, sp, #16
 1210              	.LVL126:
 1211 007e 2046     		mov	r0, r4
 1212 0080 FFF7FEFF 		bl	HAL_UART_Transmit
 1213              	.LVL127:
 1214              	.LBE132:
 1215              	.LBE131:
 864:application-library/nrf24/nrf24.c ****     serial_print(message);
 865:application-library/nrf24/nrf24.c **** 
 866:application-library/nrf24/nrf24.c ****     spi_read_register(R_REGISTER_MASK + SETUP_AW, 1, &read_data);
 1216              		.loc 1 866 0
 1217 0084 0DF13702 		add	r2, sp, #55
 1218 0088 0121     		movs	r1, #1
 1219 008a 0320     		movs	r0, #3
 1220 008c FFF7FEFF 		bl	spi_read_register
 1221              	.LVL128:
 867:application-library/nrf24/nrf24.c ****     sprintf(message, "SETUP_AW: <0x%02x>\n", read_data);
 1222              		.loc 1 867 0
 1223 0090 9DF83720 		ldrb	r2, [sp, #55]	@ zero_extendqisi2
 1224 0094 A149     		ldr	r1, .L90+16
ARM GAS  /tmp/cc0cESOd.s 			page 38


 1225 0096 04A8     		add	r0, sp, #16
 1226 0098 FFF7FEFF 		bl	sprintf
 1227              	.LVL129:
 1228              	.LBB133:
 1229              	.LBB134:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 1230              		.loc 1 183 0
 1231 009c 04A8     		add	r0, sp, #16
 1232              	.LVL130:
 1233 009e FFF7FEFF 		bl	strlen
 1234              	.LVL131:
 1235 00a2 6423     		movs	r3, #100
 1236 00a4 82B2     		uxth	r2, r0
 1237 00a6 04A9     		add	r1, sp, #16
 1238              	.LVL132:
 1239 00a8 2046     		mov	r0, r4
 1240 00aa FFF7FEFF 		bl	HAL_UART_Transmit
 1241              	.LVL133:
 1242              	.LBE134:
 1243              	.LBE133:
 868:application-library/nrf24/nrf24.c ****     serial_print(message);
 869:application-library/nrf24/nrf24.c **** 
 870:application-library/nrf24/nrf24.c ****     spi_read_register(R_REGISTER_MASK + SETUP_RETR, 1, &read_data);
 1244              		.loc 1 870 0
 1245 00ae 0DF13702 		add	r2, sp, #55
 1246 00b2 0121     		movs	r1, #1
 1247 00b4 0420     		movs	r0, #4
 1248 00b6 FFF7FEFF 		bl	spi_read_register
 1249              	.LVL134:
 871:application-library/nrf24/nrf24.c ****     sprintf(message, "SETUP_RETR: <0x%02x>\n", read_data);
 1250              		.loc 1 871 0
 1251 00ba 9DF83720 		ldrb	r2, [sp, #55]	@ zero_extendqisi2
 1252 00be 9849     		ldr	r1, .L90+20
 1253 00c0 04A8     		add	r0, sp, #16
 1254 00c2 FFF7FEFF 		bl	sprintf
 1255              	.LVL135:
 1256              	.LBB135:
 1257              	.LBB136:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 1258              		.loc 1 183 0
 1259 00c6 04A8     		add	r0, sp, #16
 1260              	.LVL136:
 1261 00c8 FFF7FEFF 		bl	strlen
 1262              	.LVL137:
 1263 00cc 6423     		movs	r3, #100
 1264 00ce 82B2     		uxth	r2, r0
 1265 00d0 04A9     		add	r1, sp, #16
 1266              	.LVL138:
 1267 00d2 2046     		mov	r0, r4
 1268 00d4 FFF7FEFF 		bl	HAL_UART_Transmit
 1269              	.LVL139:
 1270              	.LBE136:
 1271              	.LBE135:
 872:application-library/nrf24/nrf24.c ****     serial_print(message);
 873:application-library/nrf24/nrf24.c **** 
 874:application-library/nrf24/nrf24.c ****     spi_read_register(R_REGISTER_MASK + RF_CH, 1, &read_data);
 1272              		.loc 1 874 0
ARM GAS  /tmp/cc0cESOd.s 			page 39


 1273 00d8 0DF13702 		add	r2, sp, #55
 1274 00dc 0121     		movs	r1, #1
 1275 00de 0520     		movs	r0, #5
 1276 00e0 FFF7FEFF 		bl	spi_read_register
 1277              	.LVL140:
 875:application-library/nrf24/nrf24.c ****     sprintf(message, "RF_CH: <0x%02x>\n", read_data);
 1278              		.loc 1 875 0
 1279 00e4 9DF83720 		ldrb	r2, [sp, #55]	@ zero_extendqisi2
 1280 00e8 8E49     		ldr	r1, .L90+24
 1281 00ea 04A8     		add	r0, sp, #16
 1282 00ec FFF7FEFF 		bl	sprintf
 1283              	.LVL141:
 1284              	.LBB137:
 1285              	.LBB138:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 1286              		.loc 1 183 0
 1287 00f0 04A8     		add	r0, sp, #16
 1288              	.LVL142:
 1289 00f2 FFF7FEFF 		bl	strlen
 1290              	.LVL143:
 1291 00f6 6423     		movs	r3, #100
 1292 00f8 82B2     		uxth	r2, r0
 1293 00fa 04A9     		add	r1, sp, #16
 1294              	.LVL144:
 1295 00fc 2046     		mov	r0, r4
 1296 00fe FFF7FEFF 		bl	HAL_UART_Transmit
 1297              	.LVL145:
 1298              	.LBE138:
 1299              	.LBE137:
 876:application-library/nrf24/nrf24.c ****     serial_print(message);
 877:application-library/nrf24/nrf24.c **** 
 878:application-library/nrf24/nrf24.c ****     spi_read_register(R_REGISTER_MASK + RF_SETUP, 1, &read_data);
 1300              		.loc 1 878 0
 1301 0102 0DF13702 		add	r2, sp, #55
 1302 0106 0121     		movs	r1, #1
 1303 0108 0620     		movs	r0, #6
 1304 010a FFF7FEFF 		bl	spi_read_register
 1305              	.LVL146:
 879:application-library/nrf24/nrf24.c ****     sprintf(message, "RF_SETUP: <0x%02x>\n", read_data);
 1306              		.loc 1 879 0
 1307 010e 9DF83720 		ldrb	r2, [sp, #55]	@ zero_extendqisi2
 1308 0112 8549     		ldr	r1, .L90+28
 1309 0114 04A8     		add	r0, sp, #16
 1310 0116 FFF7FEFF 		bl	sprintf
 1311              	.LVL147:
 1312              	.LBB139:
 1313              	.LBB140:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 1314              		.loc 1 183 0
 1315 011a 04A8     		add	r0, sp, #16
 1316              	.LVL148:
 1317 011c FFF7FEFF 		bl	strlen
 1318              	.LVL149:
 1319 0120 6423     		movs	r3, #100
 1320 0122 82B2     		uxth	r2, r0
 1321 0124 04A9     		add	r1, sp, #16
 1322              	.LVL150:
ARM GAS  /tmp/cc0cESOd.s 			page 40


 1323 0126 2046     		mov	r0, r4
 1324 0128 FFF7FEFF 		bl	HAL_UART_Transmit
 1325              	.LVL151:
 1326              	.LBE140:
 1327              	.LBE139:
 880:application-library/nrf24/nrf24.c ****     serial_print(message);
 881:application-library/nrf24/nrf24.c **** 
 882:application-library/nrf24/nrf24.c ****     spi_read_register(R_REGISTER_MASK + STATUS, 1, &read_data);
 1328              		.loc 1 882 0
 1329 012c 0DF13702 		add	r2, sp, #55
 1330 0130 0121     		movs	r1, #1
 1331 0132 0720     		movs	r0, #7
 1332 0134 FFF7FEFF 		bl	spi_read_register
 1333              	.LVL152:
 883:application-library/nrf24/nrf24.c ****     sprintf(message, "STATUS: <0x%02x>\n", read_data);
 1334              		.loc 1 883 0
 1335 0138 9DF83720 		ldrb	r2, [sp, #55]	@ zero_extendqisi2
 1336 013c 7B49     		ldr	r1, .L90+32
 1337 013e 04A8     		add	r0, sp, #16
 1338 0140 FFF7FEFF 		bl	sprintf
 1339              	.LVL153:
 1340              	.LBB141:
 1341              	.LBB142:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 1342              		.loc 1 183 0
 1343 0144 04A8     		add	r0, sp, #16
 1344              	.LVL154:
 1345 0146 FFF7FEFF 		bl	strlen
 1346              	.LVL155:
 1347 014a 6423     		movs	r3, #100
 1348 014c 82B2     		uxth	r2, r0
 1349 014e 04A9     		add	r1, sp, #16
 1350              	.LVL156:
 1351 0150 2046     		mov	r0, r4
 1352 0152 FFF7FEFF 		bl	HAL_UART_Transmit
 1353              	.LVL157:
 1354              	.LBE142:
 1355              	.LBE141:
 884:application-library/nrf24/nrf24.c ****     serial_print(message);
 885:application-library/nrf24/nrf24.c **** 
 886:application-library/nrf24/nrf24.c ****     spi_read_register(R_REGISTER_MASK + RX_ADDR_P0, 5, read_buf);
 1356              		.loc 1 886 0
 1357 0156 0CAA     		add	r2, sp, #48
 1358 0158 0521     		movs	r1, #5
 1359 015a 0A20     		movs	r0, #10
 1360 015c FFF7FEFF 		bl	spi_read_register
 1361              	.LVL158:
 887:application-library/nrf24/nrf24.c ****     sprintf(message, "RX_ADDR_P0: <%#02x %#02x %#02x %#02x %#02x>\n", read_buf[0], read_buf[1], rea
 1362              		.loc 1 887 0
 1363 0160 9DF83020 		ldrb	r2, [sp, #48]	@ zero_extendqisi2
 1364 0164 9DF83130 		ldrb	r3, [sp, #49]	@ zero_extendqisi2
 1365 0168 9DF83210 		ldrb	r1, [sp, #50]	@ zero_extendqisi2
 1366 016c 9DF83300 		ldrb	r0, [sp, #51]	@ zero_extendqisi2
 1367 0170 9DF83450 		ldrb	r5, [sp, #52]	@ zero_extendqisi2
 1368 0174 0295     		str	r5, [sp, #8]
 1369 0176 0190     		str	r0, [sp, #4]
 1370 0178 0091     		str	r1, [sp]
ARM GAS  /tmp/cc0cESOd.s 			page 41


 1371 017a 6D49     		ldr	r1, .L90+36
 1372 017c 04A8     		add	r0, sp, #16
 1373 017e FFF7FEFF 		bl	sprintf
 1374              	.LVL159:
 1375              	.LBB143:
 1376              	.LBB144:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 1377              		.loc 1 183 0
 1378 0182 04A8     		add	r0, sp, #16
 1379              	.LVL160:
 1380 0184 FFF7FEFF 		bl	strlen
 1381              	.LVL161:
 1382 0188 6423     		movs	r3, #100
 1383 018a 82B2     		uxth	r2, r0
 1384 018c 04A9     		add	r1, sp, #16
 1385              	.LVL162:
 1386 018e 2046     		mov	r0, r4
 1387 0190 FFF7FEFF 		bl	HAL_UART_Transmit
 1388              	.LVL163:
 1389              	.LBE144:
 1390              	.LBE143:
 888:application-library/nrf24/nrf24.c ****     serial_print(message);
 889:application-library/nrf24/nrf24.c **** 
 890:application-library/nrf24/nrf24.c ****     spi_read_register(R_REGISTER_MASK + RX_ADDR_P1, 5, read_buf);
 1391              		.loc 1 890 0
 1392 0194 0CAA     		add	r2, sp, #48
 1393 0196 0521     		movs	r1, #5
 1394 0198 0B20     		movs	r0, #11
 1395 019a FFF7FEFF 		bl	spi_read_register
 1396              	.LVL164:
 891:application-library/nrf24/nrf24.c ****     sprintf(message, "RX_ADDR_P1: <%#02x %#02x %#02x %#02x %#02x>\n", read_buf[0], read_buf[1], rea
 1397              		.loc 1 891 0
 1398 019e 9DF83020 		ldrb	r2, [sp, #48]	@ zero_extendqisi2
 1399 01a2 9DF83130 		ldrb	r3, [sp, #49]	@ zero_extendqisi2
 1400 01a6 9DF83210 		ldrb	r1, [sp, #50]	@ zero_extendqisi2
 1401 01aa 9DF83300 		ldrb	r0, [sp, #51]	@ zero_extendqisi2
 1402 01ae 9DF83450 		ldrb	r5, [sp, #52]	@ zero_extendqisi2
 1403 01b2 0295     		str	r5, [sp, #8]
 1404 01b4 0190     		str	r0, [sp, #4]
 1405 01b6 0091     		str	r1, [sp]
 1406 01b8 5E49     		ldr	r1, .L90+40
 1407 01ba 04A8     		add	r0, sp, #16
 1408 01bc FFF7FEFF 		bl	sprintf
 1409              	.LVL165:
 1410              	.LBB145:
 1411              	.LBB146:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 1412              		.loc 1 183 0
 1413 01c0 04A8     		add	r0, sp, #16
 1414              	.LVL166:
 1415 01c2 FFF7FEFF 		bl	strlen
 1416              	.LVL167:
 1417 01c6 6423     		movs	r3, #100
 1418 01c8 82B2     		uxth	r2, r0
 1419 01ca 04A9     		add	r1, sp, #16
 1420              	.LVL168:
 1421 01cc 2046     		mov	r0, r4
ARM GAS  /tmp/cc0cESOd.s 			page 42


 1422 01ce FFF7FEFF 		bl	HAL_UART_Transmit
 1423              	.LVL169:
 1424              	.LBE146:
 1425              	.LBE145:
 892:application-library/nrf24/nrf24.c ****     serial_print(message);
 893:application-library/nrf24/nrf24.c **** 
 894:application-library/nrf24/nrf24.c ****     spi_read_register(R_REGISTER_MASK + RX_ADDR_P2, 5, read_buf);
 1426              		.loc 1 894 0
 1427 01d2 0CAA     		add	r2, sp, #48
 1428 01d4 0521     		movs	r1, #5
 1429 01d6 0C20     		movs	r0, #12
 1430 01d8 FFF7FEFF 		bl	spi_read_register
 1431              	.LVL170:
 895:application-library/nrf24/nrf24.c ****     sprintf(message, "RX_ADDR_P2: <%#02x %#02x %#02x %#02x %#02x>\n", read_buf[0], read_buf[1], rea
 1432              		.loc 1 895 0
 1433 01dc 9DF83020 		ldrb	r2, [sp, #48]	@ zero_extendqisi2
 1434 01e0 9DF83130 		ldrb	r3, [sp, #49]	@ zero_extendqisi2
 1435 01e4 9DF83210 		ldrb	r1, [sp, #50]	@ zero_extendqisi2
 1436 01e8 9DF83300 		ldrb	r0, [sp, #51]	@ zero_extendqisi2
 1437 01ec 9DF83450 		ldrb	r5, [sp, #52]	@ zero_extendqisi2
 1438 01f0 0295     		str	r5, [sp, #8]
 1439 01f2 0190     		str	r0, [sp, #4]
 1440 01f4 0091     		str	r1, [sp]
 1441 01f6 5049     		ldr	r1, .L90+44
 1442 01f8 04A8     		add	r0, sp, #16
 1443 01fa FFF7FEFF 		bl	sprintf
 1444              	.LVL171:
 1445              	.LBB147:
 1446              	.LBB148:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 1447              		.loc 1 183 0
 1448 01fe 04A8     		add	r0, sp, #16
 1449              	.LVL172:
 1450 0200 FFF7FEFF 		bl	strlen
 1451              	.LVL173:
 1452 0204 6423     		movs	r3, #100
 1453 0206 82B2     		uxth	r2, r0
 1454 0208 04A9     		add	r1, sp, #16
 1455              	.LVL174:
 1456 020a 2046     		mov	r0, r4
 1457 020c FFF7FEFF 		bl	HAL_UART_Transmit
 1458              	.LVL175:
 1459              	.LBE148:
 1460              	.LBE147:
 896:application-library/nrf24/nrf24.c ****     serial_print(message);
 897:application-library/nrf24/nrf24.c **** 
 898:application-library/nrf24/nrf24.c ****     spi_read_register(R_REGISTER_MASK + RX_ADDR_P3, 5, read_buf);
 1461              		.loc 1 898 0
 1462 0210 0CAA     		add	r2, sp, #48
 1463 0212 0521     		movs	r1, #5
 1464 0214 0D20     		movs	r0, #13
 1465 0216 FFF7FEFF 		bl	spi_read_register
 1466              	.LVL176:
 899:application-library/nrf24/nrf24.c ****     sprintf(message, "RX_ADDR_P3: <%#02x %#02x %#02x %#02x %#02x>\n", read_buf[0], read_buf[1], rea
 1467              		.loc 1 899 0
 1468 021a 9DF83020 		ldrb	r2, [sp, #48]	@ zero_extendqisi2
 1469 021e 9DF83130 		ldrb	r3, [sp, #49]	@ zero_extendqisi2
ARM GAS  /tmp/cc0cESOd.s 			page 43


 1470 0222 9DF83210 		ldrb	r1, [sp, #50]	@ zero_extendqisi2
 1471 0226 9DF83300 		ldrb	r0, [sp, #51]	@ zero_extendqisi2
 1472 022a 9DF83450 		ldrb	r5, [sp, #52]	@ zero_extendqisi2
 1473 022e 0295     		str	r5, [sp, #8]
 1474 0230 0190     		str	r0, [sp, #4]
 1475 0232 0091     		str	r1, [sp]
 1476 0234 4149     		ldr	r1, .L90+48
 1477 0236 04A8     		add	r0, sp, #16
 1478 0238 FFF7FEFF 		bl	sprintf
 1479              	.LVL177:
 1480              	.LBB149:
 1481              	.LBB150:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 1482              		.loc 1 183 0
 1483 023c 04A8     		add	r0, sp, #16
 1484              	.LVL178:
 1485 023e FFF7FEFF 		bl	strlen
 1486              	.LVL179:
 1487 0242 6423     		movs	r3, #100
 1488 0244 82B2     		uxth	r2, r0
 1489 0246 04A9     		add	r1, sp, #16
 1490              	.LVL180:
 1491 0248 2046     		mov	r0, r4
 1492 024a FFF7FEFF 		bl	HAL_UART_Transmit
 1493              	.LVL181:
 1494              	.LBE150:
 1495              	.LBE149:
 900:application-library/nrf24/nrf24.c ****     serial_print(message);
 901:application-library/nrf24/nrf24.c **** 
 902:application-library/nrf24/nrf24.c ****     spi_read_register(R_REGISTER_MASK + RX_ADDR_P4, 5, read_buf);
 1496              		.loc 1 902 0
 1497 024e 0CAA     		add	r2, sp, #48
 1498 0250 0521     		movs	r1, #5
 1499 0252 0E20     		movs	r0, #14
 1500 0254 FFF7FEFF 		bl	spi_read_register
 1501              	.LVL182:
 903:application-library/nrf24/nrf24.c ****     sprintf(message, "RX_ADDR_P4: <%#02x %#02x %#02x %#02x %#02x>\n", read_buf[0], read_buf[1], rea
 1502              		.loc 1 903 0
 1503 0258 9DF83020 		ldrb	r2, [sp, #48]	@ zero_extendqisi2
 1504 025c 9DF83130 		ldrb	r3, [sp, #49]	@ zero_extendqisi2
 1505 0260 9DF83210 		ldrb	r1, [sp, #50]	@ zero_extendqisi2
 1506 0264 9DF83300 		ldrb	r0, [sp, #51]	@ zero_extendqisi2
 1507 0268 9DF83450 		ldrb	r5, [sp, #52]	@ zero_extendqisi2
 1508 026c 0295     		str	r5, [sp, #8]
 1509 026e 0190     		str	r0, [sp, #4]
 1510 0270 0091     		str	r1, [sp]
 1511 0272 3349     		ldr	r1, .L90+52
 1512 0274 04A8     		add	r0, sp, #16
 1513 0276 FFF7FEFF 		bl	sprintf
 1514              	.LVL183:
 1515              	.LBB151:
 1516              	.LBB152:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 1517              		.loc 1 183 0
 1518 027a 04A8     		add	r0, sp, #16
 1519              	.LVL184:
 1520 027c FFF7FEFF 		bl	strlen
ARM GAS  /tmp/cc0cESOd.s 			page 44


 1521              	.LVL185:
 1522 0280 6423     		movs	r3, #100
 1523 0282 82B2     		uxth	r2, r0
 1524 0284 04A9     		add	r1, sp, #16
 1525              	.LVL186:
 1526 0286 2046     		mov	r0, r4
 1527 0288 FFF7FEFF 		bl	HAL_UART_Transmit
 1528              	.LVL187:
 1529              	.LBE152:
 1530              	.LBE151:
 904:application-library/nrf24/nrf24.c ****     serial_print(message);
 905:application-library/nrf24/nrf24.c **** 
 906:application-library/nrf24/nrf24.c ****     spi_read_register(R_REGISTER_MASK + RX_PW_P5, 5, read_buf);
 1531              		.loc 1 906 0
 1532 028c 0CAA     		add	r2, sp, #48
 1533 028e 0521     		movs	r1, #5
 1534 0290 1620     		movs	r0, #22
 1535 0292 FFF7FEFF 		bl	spi_read_register
 1536              	.LVL188:
 907:application-library/nrf24/nrf24.c ****     sprintf(message, "RX_ADDR_P5: <%#02x %#02x %#02x %#02x %#02x>\n", read_buf[0], read_buf[1], rea
 1537              		.loc 1 907 0
 1538 0296 9DF83020 		ldrb	r2, [sp, #48]	@ zero_extendqisi2
 1539 029a 9DF83130 		ldrb	r3, [sp, #49]	@ zero_extendqisi2
 1540 029e 9DF83210 		ldrb	r1, [sp, #50]	@ zero_extendqisi2
 1541 02a2 9DF83300 		ldrb	r0, [sp, #51]	@ zero_extendqisi2
 1542 02a6 9DF83450 		ldrb	r5, [sp, #52]	@ zero_extendqisi2
 1543 02aa 0295     		str	r5, [sp, #8]
 1544 02ac 0190     		str	r0, [sp, #4]
 1545 02ae 0091     		str	r1, [sp]
 1546 02b0 2449     		ldr	r1, .L90+56
 1547 02b2 04A8     		add	r0, sp, #16
 1548 02b4 FFF7FEFF 		bl	sprintf
 1549              	.LVL189:
 1550              	.LBB153:
 1551              	.LBB154:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 1552              		.loc 1 183 0
 1553 02b8 04A8     		add	r0, sp, #16
 1554              	.LVL190:
 1555 02ba FFF7FEFF 		bl	strlen
 1556              	.LVL191:
 1557 02be 6423     		movs	r3, #100
 1558 02c0 82B2     		uxth	r2, r0
 1559 02c2 04A9     		add	r1, sp, #16
 1560              	.LVL192:
 1561 02c4 2046     		mov	r0, r4
 1562 02c6 FFF7FEFF 		bl	HAL_UART_Transmit
 1563              	.LVL193:
 1564              	.LBE154:
 1565              	.LBE153:
 908:application-library/nrf24/nrf24.c ****     serial_print(message);
 909:application-library/nrf24/nrf24.c **** 
 910:application-library/nrf24/nrf24.c ****     spi_read_register(R_REGISTER_MASK + TX_ADDR, 5, read_buf);
 1566              		.loc 1 910 0
 1567 02ca 0CAA     		add	r2, sp, #48
 1568 02cc 0521     		movs	r1, #5
 1569 02ce 1020     		movs	r0, #16
ARM GAS  /tmp/cc0cESOd.s 			page 45


 1570 02d0 FFF7FEFF 		bl	spi_read_register
 1571              	.LVL194:
 911:application-library/nrf24/nrf24.c ****     sprintf(message, "TX_ADDR: <%#02x %#02x %#02x %#02x %#02x>\n", read_buf[0], read_buf[1], read_b
 1572              		.loc 1 911 0
 1573 02d4 9DF83020 		ldrb	r2, [sp, #48]	@ zero_extendqisi2
 1574 02d8 9DF83130 		ldrb	r3, [sp, #49]	@ zero_extendqisi2
 1575 02dc 9DF83210 		ldrb	r1, [sp, #50]	@ zero_extendqisi2
 1576 02e0 9DF83300 		ldrb	r0, [sp, #51]	@ zero_extendqisi2
 1577 02e4 9DF83450 		ldrb	r5, [sp, #52]	@ zero_extendqisi2
 1578 02e8 0295     		str	r5, [sp, #8]
 1579 02ea 0190     		str	r0, [sp, #4]
 1580 02ec 0091     		str	r1, [sp]
 1581 02ee 1649     		ldr	r1, .L90+60
 1582 02f0 04A8     		add	r0, sp, #16
 1583 02f2 FFF7FEFF 		bl	sprintf
 1584              	.LVL195:
 1585              	.LBB155:
 1586              	.LBB156:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 1587              		.loc 1 183 0
 1588 02f6 04A8     		add	r0, sp, #16
 1589              	.LVL196:
 1590 02f8 FFF7FEFF 		bl	strlen
 1591              	.LVL197:
 1592 02fc 6423     		movs	r3, #100
 1593 02fe 82B2     		uxth	r2, r0
 1594 0300 04A9     		add	r1, sp, #16
 1595              	.LVL198:
 1596 0302 2046     		mov	r0, r4
 1597 0304 FFF7FEFF 		bl	HAL_UART_Transmit
 1598              	.LVL199:
 1599              	.LBE156:
 1600              	.LBE155:
 912:application-library/nrf24/nrf24.c ****     serial_print(message);
 913:application-library/nrf24/nrf24.c **** 
 914:application-library/nrf24/nrf24.c **** }
 1601              		.loc 1 914 0
 1602 0308 0FB0     		add	sp, sp, #60
 1603              	.LCFI25:
 1604              		.cfi_def_cfa_offset 12
 1605              		@ sp needed
 1606 030a 30BD     		pop	{r4, r5, pc}
 1607              	.L91:
 1608              		.align	2
 1609              	.L90:
 1610 030c 00000000 		.word	.LC8
 1611 0310 00000000 		.word	huart2
 1612 0314 14000000 		.word	.LC9
 1613 0318 28000000 		.word	.LC10
 1614 031c 40000000 		.word	.LC11
 1615 0320 54000000 		.word	.LC12
 1616 0324 6C000000 		.word	.LC13
 1617 0328 80000000 		.word	.LC14
 1618 032c 94000000 		.word	.LC15
 1619 0330 A8000000 		.word	.LC16
 1620 0334 D8000000 		.word	.LC17
 1621 0338 08010000 		.word	.LC18
ARM GAS  /tmp/cc0cESOd.s 			page 46


 1622 033c 38010000 		.word	.LC19
 1623 0340 68010000 		.word	.LC20
 1624 0344 98010000 		.word	.LC21
 1625 0348 C8010000 		.word	.LC22
 1626              		.cfi_endproc
 1627              	.LFE155:
 1629              		.section	.text.nRF24_set_CONFIG,"ax",%progbits
 1630              		.align	1
 1631              		.global	nRF24_set_CONFIG
 1632              		.syntax unified
 1633              		.thumb
 1634              		.thumb_func
 1635              		.fpu fpv4-sp-d16
 1637              	nRF24_set_CONFIG:
 1638              	.LFB156:
 915:application-library/nrf24/nrf24.c **** 
 916:application-library/nrf24/nrf24.c **** 
 917:application-library/nrf24/nrf24.c **** /* Following Function Provides High Level Access to nRF24L01+ registers. --------------------------
 918:application-library/nrf24/nrf24.c **** 
 919:application-library/nrf24/nrf24.c **** /**
 920:application-library/nrf24/nrf24.c ****   * @brief  nRF24 set <CONFIG> register
 921:application-library/nrf24/nrf24.c ****   * @param  mask_rx_dr Mask interrupt caused by RX_IDR. [ MASK_RX_DR_MASK1 | MASK_RX_DR_MASK0 | MAS
 922:application-library/nrf24/nrf24.c ****   * @param  mask_tx_ds Mask interrupt caused by TX_DS.  [ MASK_TX_DS_MASK1 | MASK_TX_DS_MASK0 | MAS
 923:application-library/nrf24/nrf24.c ****   * @param  mask_max_rt Mask interrupt cause by MAX_RT. [ MASK_MAX_RT_MASK1 | MASK_MAX_RT_MASK0 | M
 924:application-library/nrf24/nrf24.c ****   * @param  en_crc Enable CRC. [ EN_CRC_MASK1 | EN_CRC_MASK0 | EN_CRC_MASKDEFAULT ]
 925:application-library/nrf24/nrf24.c ****   * @param  crco CRC encoding scheme. [ CRCO_MASK1 | CRCO_MASK0 | CRCO_MASKDEFAULT ]
 926:application-library/nrf24/nrf24.c ****   * @param  pwr_up Power Up / Down. [ PWR_UP_MASK1 | PWR_UP_MASK0 | PWR_UP_MASKDEFAULT ]
 927:application-library/nrf24/nrf24.c ****   * @param  prim_rx RX/TX control. [ PRIM_RX_MASK1 | PRIM_RX_MASK0 | PRIM_RX_MASKDEFAULT ]
 928:application-library/nrf24/nrf24.c ****   * @retval None.
 929:application-library/nrf24/nrf24.c ****   */
 930:application-library/nrf24/nrf24.c **** void nRF24_set_CONFIG(uint8_t mask_rx_dr, uint8_t mask_tx_ds, uint8_t mask_max_rt, uint8_t en_crc, 
 931:application-library/nrf24/nrf24.c **** {
 1639              		.loc 1 931 0
 1640              		.cfi_startproc
 1641              		@ args = 12, pretend = 0, frame = 8
 1642              		@ frame_needed = 0, uses_anonymous_args = 0
 1643              	.LVL200:
 1644 0000 00B5     		push	{lr}
 1645              	.LCFI26:
 1646              		.cfi_def_cfa_offset 4
 1647              		.cfi_offset 14, -4
 1648 0002 83B0     		sub	sp, sp, #12
 1649              	.LCFI27:
 1650              		.cfi_def_cfa_offset 16
 932:application-library/nrf24/nrf24.c ****   uint8_t writing_byte = 0x00;
 933:application-library/nrf24/nrf24.c ****   writing_byte |= mask_rx_dr | mask_tx_ds | mask_max_rt | en_crc | crco | pwr_up | prim_rx; 
 1651              		.loc 1 933 0
 1652 0004 0143     		orrs	r1, r1, r0
 1653              	.LVL201:
 1654 0006 1143     		orrs	r1, r1, r2
 1655 0008 1943     		orrs	r1, r1, r3
 1656 000a 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 1657              	.LVL202:
 1658 000e 1943     		orrs	r1, r1, r3
 1659 0010 9DF81430 		ldrb	r3, [sp, #20]	@ zero_extendqisi2
 1660 0014 0B43     		orrs	r3, r3, r1
 1661 0016 9DF81810 		ldrb	r1, [sp, #24]	@ zero_extendqisi2
ARM GAS  /tmp/cc0cESOd.s 			page 47


 1662 001a 1943     		orrs	r1, r1, r3
 1663 001c 02AA     		add	r2, sp, #8
 1664              	.LVL203:
 1665 001e 02F8011D 		strb	r1, [r2, #-1]!
 934:application-library/nrf24/nrf24.c ****   nRF24_verified_write_register(W_REGISTER_MASK + CONFIG, 1, &writing_byte);
 1666              		.loc 1 934 0
 1667 0022 0121     		movs	r1, #1
 1668 0024 2020     		movs	r0, #32
 1669              	.LVL204:
 1670 0026 FFF7FEFF 		bl	nRF24_verified_write_register
 1671              	.LVL205:
 935:application-library/nrf24/nrf24.c **** }
 1672              		.loc 1 935 0
 1673 002a 03B0     		add	sp, sp, #12
 1674              	.LCFI28:
 1675              		.cfi_def_cfa_offset 4
 1676              		@ sp needed
 1677 002c 5DF804FB 		ldr	pc, [sp], #4
 1678              		.cfi_endproc
 1679              	.LFE156:
 1681              		.section	.text.nRF24_get_CONFIG,"ax",%progbits
 1682              		.align	1
 1683              		.global	nRF24_get_CONFIG
 1684              		.syntax unified
 1685              		.thumb
 1686              		.thumb_func
 1687              		.fpu fpv4-sp-d16
 1689              	nRF24_get_CONFIG:
 1690              	.LFB157:
 936:application-library/nrf24/nrf24.c **** 
 937:application-library/nrf24/nrf24.c **** 
 938:application-library/nrf24/nrf24.c **** /**
 939:application-library/nrf24/nrf24.c ****   * @brief      Read <CONFIG> register from nRF24L01+.
 940:application-library/nrf24/nrf24.c ****   * @param      None.
 941:application-library/nrf24/nrf24.c ****   * @retval     <CONFIG> register value.
 942:application-library/nrf24/nrf24.c ****   */
 943:application-library/nrf24/nrf24.c **** uint8_t nRF24_get_CONFIG() 
 944:application-library/nrf24/nrf24.c **** {
 1691              		.loc 1 944 0
 1692              		.cfi_startproc
 1693              		@ args = 0, pretend = 0, frame = 8
 1694              		@ frame_needed = 0, uses_anonymous_args = 0
 1695 0000 00B5     		push	{lr}
 1696              	.LCFI29:
 1697              		.cfi_def_cfa_offset 4
 1698              		.cfi_offset 14, -4
 1699 0002 83B0     		sub	sp, sp, #12
 1700              	.LCFI30:
 1701              		.cfi_def_cfa_offset 16
 945:application-library/nrf24/nrf24.c ****   uint8_t config_reg;
 946:application-library/nrf24/nrf24.c ****   spi_read_register(R_REGISTER_MASK + CONFIG, 1, &config_reg);
 1702              		.loc 1 946 0
 1703 0004 0DF10702 		add	r2, sp, #7
 1704 0008 0121     		movs	r1, #1
 1705 000a 0020     		movs	r0, #0
 1706 000c FFF7FEFF 		bl	spi_read_register
 1707              	.LVL206:
ARM GAS  /tmp/cc0cESOd.s 			page 48


 947:application-library/nrf24/nrf24.c ****   return config_reg;
 948:application-library/nrf24/nrf24.c **** }
 1708              		.loc 1 948 0
 1709 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 1710 0014 03B0     		add	sp, sp, #12
 1711              	.LCFI31:
 1712              		.cfi_def_cfa_offset 4
 1713              		@ sp needed
 1714 0016 5DF804FB 		ldr	pc, [sp], #4
 1715              		.cfi_endproc
 1716              	.LFE157:
 1718              		.section	.text.nRF24_set_EN_AA,"ax",%progbits
 1719              		.align	1
 1720              		.global	nRF24_set_EN_AA
 1721              		.syntax unified
 1722              		.thumb
 1723              		.thumb_func
 1724              		.fpu fpv4-sp-d16
 1726              	nRF24_set_EN_AA:
 1727              	.LFB158:
 949:application-library/nrf24/nrf24.c **** 
 950:application-library/nrf24/nrf24.c **** 
 951:application-library/nrf24/nrf24.c **** /**
 952:application-library/nrf24/nrf24.c ****   * @brief  nRF24 set <EN_AA> register
 953:application-library/nrf24/nrf24.c ****   * @param  enaa_p5 Enable auto acknowledgement in data pipe 5. [ ENAA_P5_MASK1 | ENAA_P5_MASK0 | E
 954:application-library/nrf24/nrf24.c ****   * @param  enaa_p4 Enable auto acknowledgement in data pipe 4. [ ENAA_P4_MASK1 | ENAA_P4_MASK0 | E
 955:application-library/nrf24/nrf24.c ****   * @param  enaa_p3 Enable auto acknowledgement in data pipe 3. [ ENAA_P3_MASK1 | ENAA_P3_MASK0 | E
 956:application-library/nrf24/nrf24.c ****   * @param  enaa_p2 Enable auto acknowledgement in data pipe 2. [ ENAA_P2_MASK1 | ENAA_P2_MASK0 | E
 957:application-library/nrf24/nrf24.c ****   * @param  enaa_p1 Enable auto acknowledgement in data pipe 1. [ ENAA_P1_MASK1 | ENAA_P1_MASK0 | E
 958:application-library/nrf24/nrf24.c ****   * @param  enaa_p0 Enable auto acknowledgement in data pipe 0. [ ENAA_P0_MASK1 | ENAA_P0_MASK0 | E
 959:application-library/nrf24/nrf24.c ****   * @retval None.
 960:application-library/nrf24/nrf24.c ****   */
 961:application-library/nrf24/nrf24.c **** void nRF24_set_EN_AA(uint8_t enaa_p5, uint8_t enaa_p4, uint8_t enaa_p3, uint8_t enaa_p2, uint8_t en
 962:application-library/nrf24/nrf24.c **** {
 1728              		.loc 1 962 0
 1729              		.cfi_startproc
 1730              		@ args = 8, pretend = 0, frame = 8
 1731              		@ frame_needed = 0, uses_anonymous_args = 0
 1732              	.LVL207:
 1733 0000 00B5     		push	{lr}
 1734              	.LCFI32:
 1735              		.cfi_def_cfa_offset 4
 1736              		.cfi_offset 14, -4
 1737 0002 83B0     		sub	sp, sp, #12
 1738              	.LCFI33:
 1739              		.cfi_def_cfa_offset 16
 963:application-library/nrf24/nrf24.c ****   uint8_t writing_byte = 0x00;
 964:application-library/nrf24/nrf24.c ****   writing_byte |= enaa_p5 | enaa_p4 | enaa_p3 | enaa_p2 | enaa_p1 | enaa_p0;
 1740              		.loc 1 964 0
 1741 0004 0143     		orrs	r1, r1, r0
 1742              	.LVL208:
 1743 0006 1143     		orrs	r1, r1, r2
 1744 0008 1943     		orrs	r1, r1, r3
 1745 000a 9DF81020 		ldrb	r2, [sp, #16]	@ zero_extendqisi2
 1746              	.LVL209:
 1747 000e 0A43     		orrs	r2, r2, r1
 1748 0010 9DF81410 		ldrb	r1, [sp, #20]	@ zero_extendqisi2
ARM GAS  /tmp/cc0cESOd.s 			page 49


 1749 0014 1143     		orrs	r1, r1, r2
 1750 0016 02AA     		add	r2, sp, #8
 1751 0018 02F8011D 		strb	r1, [r2, #-1]!
 965:application-library/nrf24/nrf24.c ****   nRF24_verified_write_register(W_REGISTER_MASK + EN_AA, 1, &writing_byte);
 1752              		.loc 1 965 0
 1753 001c 0121     		movs	r1, #1
 1754 001e 2120     		movs	r0, #33
 1755              	.LVL210:
 1756 0020 FFF7FEFF 		bl	nRF24_verified_write_register
 1757              	.LVL211:
 966:application-library/nrf24/nrf24.c **** }
 1758              		.loc 1 966 0
 1759 0024 03B0     		add	sp, sp, #12
 1760              	.LCFI34:
 1761              		.cfi_def_cfa_offset 4
 1762              		@ sp needed
 1763 0026 5DF804FB 		ldr	pc, [sp], #4
 1764              		.cfi_endproc
 1765              	.LFE158:
 1767              		.section	.text.nRF24_get_EN_AA,"ax",%progbits
 1768              		.align	1
 1769              		.global	nRF24_get_EN_AA
 1770              		.syntax unified
 1771              		.thumb
 1772              		.thumb_func
 1773              		.fpu fpv4-sp-d16
 1775              	nRF24_get_EN_AA:
 1776              	.LFB159:
 967:application-library/nrf24/nrf24.c **** 
 968:application-library/nrf24/nrf24.c **** /**
 969:application-library/nrf24/nrf24.c ****   * @brief      Read <EN_AA> register from nRF24L01+.
 970:application-library/nrf24/nrf24.c ****   * @param      None.
 971:application-library/nrf24/nrf24.c ****   * @retval     <EN_AA> register value.
 972:application-library/nrf24/nrf24.c ****   */
 973:application-library/nrf24/nrf24.c **** uint8_t nRF24_get_EN_AA() 
 974:application-library/nrf24/nrf24.c **** {
 1777              		.loc 1 974 0
 1778              		.cfi_startproc
 1779              		@ args = 0, pretend = 0, frame = 8
 1780              		@ frame_needed = 0, uses_anonymous_args = 0
 1781 0000 00B5     		push	{lr}
 1782              	.LCFI35:
 1783              		.cfi_def_cfa_offset 4
 1784              		.cfi_offset 14, -4
 1785 0002 83B0     		sub	sp, sp, #12
 1786              	.LCFI36:
 1787              		.cfi_def_cfa_offset 16
 975:application-library/nrf24/nrf24.c ****   uint8_t read_byte;
 976:application-library/nrf24/nrf24.c ****   spi_read_register(R_REGISTER_MASK + EN_AA, 1, &read_byte);
 1788              		.loc 1 976 0
 1789 0004 0DF10702 		add	r2, sp, #7
 1790 0008 0121     		movs	r1, #1
 1791 000a 0846     		mov	r0, r1
 1792 000c FFF7FEFF 		bl	spi_read_register
 1793              	.LVL212:
 977:application-library/nrf24/nrf24.c ****   return read_byte;
 978:application-library/nrf24/nrf24.c **** }
ARM GAS  /tmp/cc0cESOd.s 			page 50


 1794              		.loc 1 978 0
 1795 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 1796 0014 03B0     		add	sp, sp, #12
 1797              	.LCFI37:
 1798              		.cfi_def_cfa_offset 4
 1799              		@ sp needed
 1800 0016 5DF804FB 		ldr	pc, [sp], #4
 1801              		.cfi_endproc
 1802              	.LFE159:
 1804              		.section	.text.nRF24_set_EN_RXADDR,"ax",%progbits
 1805              		.align	1
 1806              		.global	nRF24_set_EN_RXADDR
 1807              		.syntax unified
 1808              		.thumb
 1809              		.thumb_func
 1810              		.fpu fpv4-sp-d16
 1812              	nRF24_set_EN_RXADDR:
 1813              	.LFB160:
 979:application-library/nrf24/nrf24.c **** 
 980:application-library/nrf24/nrf24.c **** 
 981:application-library/nrf24/nrf24.c **** /**
 982:application-library/nrf24/nrf24.c ****   * @brief  nRF24 set <EN_RXADDR> register
 983:application-library/nrf24/nrf24.c ****   * @param  erx_p5 enable RX in data pipe 5.   [ ERX_P5_MASK1 | ERX_P5_MASK0 | ERX_P5_MASKDEFAULT ]
 984:application-library/nrf24/nrf24.c ****   * @param  erx_p4 enable RX in data pipe 4.   [ ERX_P4_MASK1 | ERX_P4_MASK0 | ERX_P4_MASKDEFAULT ]
 985:application-library/nrf24/nrf24.c ****   * @param  erx_p3 enable RX in data pipe 3.   [ ERX_P3_MASK1 | ERX_P3_MASK0 | ERX_P3_MASKDEFAULT ]
 986:application-library/nrf24/nrf24.c ****   * @param  erx_p2 enable RX in data pipe 2.   [ ERX_P2_MASK1 | ERX_P2_MASK0 | ERX_P2_MASKDEFAULT ]
 987:application-library/nrf24/nrf24.c ****   * @param  erx_p1 enable RX in data pipe 1.   [ ERX_P1_MASK1 | ERX_P1_MASK0 | ERX_P1_MASKDEFAULT ]
 988:application-library/nrf24/nrf24.c ****   * @param  erx_p0 enable RX in data pipe 0.   [ ERX_P0_MASK1 | ERX_P0_MASK0 | ERX_P0_MASKDEFAULT ]
 989:application-library/nrf24/nrf24.c ****   * @retval None.
 990:application-library/nrf24/nrf24.c ****   */
 991:application-library/nrf24/nrf24.c **** void nRF24_set_EN_RXADDR(uint8_t erx_p5, uint8_t erx_p4, uint8_t erx_p3, uint8_t erx_p2, uint8_t er
 992:application-library/nrf24/nrf24.c **** {
 1814              		.loc 1 992 0
 1815              		.cfi_startproc
 1816              		@ args = 8, pretend = 0, frame = 8
 1817              		@ frame_needed = 0, uses_anonymous_args = 0
 1818              	.LVL213:
 1819 0000 00B5     		push	{lr}
 1820              	.LCFI38:
 1821              		.cfi_def_cfa_offset 4
 1822              		.cfi_offset 14, -4
 1823 0002 83B0     		sub	sp, sp, #12
 1824              	.LCFI39:
 1825              		.cfi_def_cfa_offset 16
 993:application-library/nrf24/nrf24.c ****   uint8_t writing_byte = 0x00;
 994:application-library/nrf24/nrf24.c ****   writing_byte |= erx_p5 | erx_p4 | erx_p3 | erx_p2 | erx_p1 | erx_p0;
 1826              		.loc 1 994 0
 1827 0004 0143     		orrs	r1, r1, r0
 1828              	.LVL214:
 1829 0006 1143     		orrs	r1, r1, r2
 1830 0008 1943     		orrs	r1, r1, r3
 1831 000a 9DF81020 		ldrb	r2, [sp, #16]	@ zero_extendqisi2
 1832              	.LVL215:
 1833 000e 0A43     		orrs	r2, r2, r1
 1834 0010 9DF81410 		ldrb	r1, [sp, #20]	@ zero_extendqisi2
 1835 0014 1143     		orrs	r1, r1, r2
 1836 0016 02AA     		add	r2, sp, #8
ARM GAS  /tmp/cc0cESOd.s 			page 51


 1837 0018 02F8011D 		strb	r1, [r2, #-1]!
 995:application-library/nrf24/nrf24.c ****   nRF24_verified_write_register(W_REGISTER_MASK + EN_RXADDR, 1, &writing_byte);
 1838              		.loc 1 995 0
 1839 001c 0121     		movs	r1, #1
 1840 001e 2220     		movs	r0, #34
 1841              	.LVL216:
 1842 0020 FFF7FEFF 		bl	nRF24_verified_write_register
 1843              	.LVL217:
 996:application-library/nrf24/nrf24.c **** }
 1844              		.loc 1 996 0
 1845 0024 03B0     		add	sp, sp, #12
 1846              	.LCFI40:
 1847              		.cfi_def_cfa_offset 4
 1848              		@ sp needed
 1849 0026 5DF804FB 		ldr	pc, [sp], #4
 1850              		.cfi_endproc
 1851              	.LFE160:
 1853              		.section	.text.nRF24_get_EN_RXADDR,"ax",%progbits
 1854              		.align	1
 1855              		.global	nRF24_get_EN_RXADDR
 1856              		.syntax unified
 1857              		.thumb
 1858              		.thumb_func
 1859              		.fpu fpv4-sp-d16
 1861              	nRF24_get_EN_RXADDR:
 1862              	.LFB161:
 997:application-library/nrf24/nrf24.c **** 
 998:application-library/nrf24/nrf24.c **** 
 999:application-library/nrf24/nrf24.c **** /**
1000:application-library/nrf24/nrf24.c ****   * @brief      Read <EN_RXADDR> register from nRF24L01+.
1001:application-library/nrf24/nrf24.c ****   * @param      None.
1002:application-library/nrf24/nrf24.c ****   * @retval     <EN_RXADDR> register value.
1003:application-library/nrf24/nrf24.c ****   */
1004:application-library/nrf24/nrf24.c **** uint8_t nRF24_get_EN_RXADDR() 
1005:application-library/nrf24/nrf24.c **** {
 1863              		.loc 1 1005 0
 1864              		.cfi_startproc
 1865              		@ args = 0, pretend = 0, frame = 8
 1866              		@ frame_needed = 0, uses_anonymous_args = 0
 1867 0000 00B5     		push	{lr}
 1868              	.LCFI41:
 1869              		.cfi_def_cfa_offset 4
 1870              		.cfi_offset 14, -4
 1871 0002 83B0     		sub	sp, sp, #12
 1872              	.LCFI42:
 1873              		.cfi_def_cfa_offset 16
1006:application-library/nrf24/nrf24.c ****   uint8_t read_byte;
1007:application-library/nrf24/nrf24.c ****   spi_read_register(R_REGISTER_MASK + EN_RXADDR, 1, &read_byte);
 1874              		.loc 1 1007 0
 1875 0004 0DF10702 		add	r2, sp, #7
 1876 0008 0121     		movs	r1, #1
 1877 000a 0220     		movs	r0, #2
 1878 000c FFF7FEFF 		bl	spi_read_register
 1879              	.LVL218:
1008:application-library/nrf24/nrf24.c ****   return read_byte;
1009:application-library/nrf24/nrf24.c **** }
 1880              		.loc 1 1009 0
ARM GAS  /tmp/cc0cESOd.s 			page 52


 1881 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 1882 0014 03B0     		add	sp, sp, #12
 1883              	.LCFI43:
 1884              		.cfi_def_cfa_offset 4
 1885              		@ sp needed
 1886 0016 5DF804FB 		ldr	pc, [sp], #4
 1887              		.cfi_endproc
 1888              	.LFE161:
 1890              		.section	.text.nRF24_set_SETUP_AW,"ax",%progbits
 1891              		.align	1
 1892              		.global	nRF24_set_SETUP_AW
 1893              		.syntax unified
 1894              		.thumb
 1895              		.thumb_func
 1896              		.fpu fpv4-sp-d16
 1898              	nRF24_set_SETUP_AW:
 1899              	.LFB162:
1010:application-library/nrf24/nrf24.c **** 
1011:application-library/nrf24/nrf24.c **** /**
1012:application-library/nrf24/nrf24.c ****   * @brief  nRF24 set <AW> register
1013:application-library/nrf24/nrf24.c ****   * @param  aw Setup of Address Widths. [ AW_MASK3bytes | AW_MASK4bytes | AW_MASK5bytes | AW_MASKDE
1014:application-library/nrf24/nrf24.c ****   * @retval None.
1015:application-library/nrf24/nrf24.c ****   */
1016:application-library/nrf24/nrf24.c **** void nRF24_set_SETUP_AW(uint8_t aw) 
1017:application-library/nrf24/nrf24.c **** {
 1900              		.loc 1 1017 0
 1901              		.cfi_startproc
 1902              		@ args = 0, pretend = 0, frame = 8
 1903              		@ frame_needed = 0, uses_anonymous_args = 0
 1904              	.LVL219:
 1905 0000 00B5     		push	{lr}
 1906              	.LCFI44:
 1907              		.cfi_def_cfa_offset 4
 1908              		.cfi_offset 14, -4
 1909 0002 83B0     		sub	sp, sp, #12
 1910              	.LCFI45:
 1911              		.cfi_def_cfa_offset 16
1018:application-library/nrf24/nrf24.c ****   uint8_t writing_byte = 0x00;
1019:application-library/nrf24/nrf24.c ****   writing_byte |= aw;
 1912              		.loc 1 1019 0
 1913 0004 02AA     		add	r2, sp, #8
 1914 0006 02F8010D 		strb	r0, [r2, #-1]!
1020:application-library/nrf24/nrf24.c ****   nRF24_verified_write_register(W_REGISTER_MASK + SETUP_AW, 1, &writing_byte);
 1915              		.loc 1 1020 0
 1916 000a 0121     		movs	r1, #1
 1917 000c 2320     		movs	r0, #35
 1918              	.LVL220:
 1919 000e FFF7FEFF 		bl	nRF24_verified_write_register
 1920              	.LVL221:
1021:application-library/nrf24/nrf24.c **** }
 1921              		.loc 1 1021 0
 1922 0012 03B0     		add	sp, sp, #12
 1923              	.LCFI46:
 1924              		.cfi_def_cfa_offset 4
 1925              		@ sp needed
 1926 0014 5DF804FB 		ldr	pc, [sp], #4
 1927              		.cfi_endproc
ARM GAS  /tmp/cc0cESOd.s 			page 53


 1928              	.LFE162:
 1930              		.section	.text.nRF24_get_SETUP_AW,"ax",%progbits
 1931              		.align	1
 1932              		.global	nRF24_get_SETUP_AW
 1933              		.syntax unified
 1934              		.thumb
 1935              		.thumb_func
 1936              		.fpu fpv4-sp-d16
 1938              	nRF24_get_SETUP_AW:
 1939              	.LFB163:
1022:application-library/nrf24/nrf24.c **** 
1023:application-library/nrf24/nrf24.c **** /**
1024:application-library/nrf24/nrf24.c ****   * @brief      Read <SETUP_AW> register from nRF24L01+.
1025:application-library/nrf24/nrf24.c ****   * @param      None.
1026:application-library/nrf24/nrf24.c ****   * @retval     <SETUP_AW> register value.
1027:application-library/nrf24/nrf24.c ****   */
1028:application-library/nrf24/nrf24.c **** uint8_t nRF24_get_SETUP_AW() 
1029:application-library/nrf24/nrf24.c **** {
 1940              		.loc 1 1029 0
 1941              		.cfi_startproc
 1942              		@ args = 0, pretend = 0, frame = 8
 1943              		@ frame_needed = 0, uses_anonymous_args = 0
 1944 0000 00B5     		push	{lr}
 1945              	.LCFI47:
 1946              		.cfi_def_cfa_offset 4
 1947              		.cfi_offset 14, -4
 1948 0002 83B0     		sub	sp, sp, #12
 1949              	.LCFI48:
 1950              		.cfi_def_cfa_offset 16
1030:application-library/nrf24/nrf24.c ****   uint8_t read_byte;
1031:application-library/nrf24/nrf24.c ****   spi_read_register(R_REGISTER_MASK + SETUP_AW, 1, &read_byte);
 1951              		.loc 1 1031 0
 1952 0004 0DF10702 		add	r2, sp, #7
 1953 0008 0121     		movs	r1, #1
 1954 000a 0320     		movs	r0, #3
 1955 000c FFF7FEFF 		bl	spi_read_register
 1956              	.LVL222:
1032:application-library/nrf24/nrf24.c ****   return read_byte;
1033:application-library/nrf24/nrf24.c **** }
 1957              		.loc 1 1033 0
 1958 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 1959 0014 03B0     		add	sp, sp, #12
 1960              	.LCFI49:
 1961              		.cfi_def_cfa_offset 4
 1962              		@ sp needed
 1963 0016 5DF804FB 		ldr	pc, [sp], #4
 1964              		.cfi_endproc
 1965              	.LFE163:
 1967              		.section	.text.nRF24_set_SETUP_RETR,"ax",%progbits
 1968              		.align	1
 1969              		.global	nRF24_set_SETUP_RETR
 1970              		.syntax unified
 1971              		.thumb
 1972              		.thumb_func
 1973              		.fpu fpv4-sp-d16
 1975              	nRF24_set_SETUP_RETR:
 1976              	.LFB164:
ARM GAS  /tmp/cc0cESOd.s 			page 54


1034:application-library/nrf24/nrf24.c **** 
1035:application-library/nrf24/nrf24.c **** /**
1036:application-library/nrf24/nrf24.c ****   * @brief  nRF24 configure auto-retransmit delay and auto retransmit count.
1037:application-library/nrf24/nrf24.c ****   * @param  ard Auto-Retransmit Delay
1038:application-library/nrf24/nrf24.c ****   *   [ ARD_MASK250us  | ARD_MASK500us  | ARD_MASK750us  | ARD_MASK1000us | ARD_MASK1250us        
1039:application-library/nrf24/nrf24.c ****   *   | ARD_MASK1500us | ARD_MASK1750us | ARD_MASK2000us | ARD_MASK2250us | ARD_MASK2500us        
1040:application-library/nrf24/nrf24.c ****   *   | ARD_MASK2750us | ARD_MASK3000us | ARD_MASK3250us | ARD_MASK3500us | ARD_MASK3750us        
1041:application-library/nrf24/nrf24.c ****   *   | ARD_MASK4000us | ARD_MASKDEFAULT ]
1042:application-library/nrf24/nrf24.c ****   * @param  arc Auto-Retransmit Count
1043:application-library/nrf24/nrf24.c ****   *    [  ARC_MASK0 | ARC_MASK1 | ARC_MASK2  | ARC_MASK3  | ARC_MASK4  | ARC_MASK5   | ARC_MASK6  |
1044:application-library/nrf24/nrf24.c ****   *   | ARC_MASK8 | ARC_MASK9 | ARC_MASK10 | ARC_MASK11 | ARC_MASK12 |  ARC_MASK13 | ARC_MASK14 | A
1045:application-library/nrf24/nrf24.c ****   *   | ARC_MASKDEFAULT ]
1046:application-library/nrf24/nrf24.c ****   * @retval None.
1047:application-library/nrf24/nrf24.c ****   */
1048:application-library/nrf24/nrf24.c **** void nRF24_set_SETUP_RETR(uint8_t ard, uint8_t arc)
1049:application-library/nrf24/nrf24.c **** {
 1977              		.loc 1 1049 0
 1978              		.cfi_startproc
 1979              		@ args = 0, pretend = 0, frame = 8
 1980              		@ frame_needed = 0, uses_anonymous_args = 0
 1981              	.LVL223:
 1982 0000 00B5     		push	{lr}
 1983              	.LCFI50:
 1984              		.cfi_def_cfa_offset 4
 1985              		.cfi_offset 14, -4
 1986 0002 83B0     		sub	sp, sp, #12
 1987              	.LCFI51:
 1988              		.cfi_def_cfa_offset 16
1050:application-library/nrf24/nrf24.c ****   uint8_t writing_byte = 0x00;
1051:application-library/nrf24/nrf24.c ****   writing_byte |= ard | arc;
 1989              		.loc 1 1051 0
 1990 0004 0143     		orrs	r1, r1, r0
 1991              	.LVL224:
 1992 0006 02AA     		add	r2, sp, #8
 1993 0008 02F8011D 		strb	r1, [r2, #-1]!
1052:application-library/nrf24/nrf24.c ****   nRF24_verified_write_register(W_REGISTER_MASK + SETUP_RETR, 1, &writing_byte);
 1994              		.loc 1 1052 0
 1995 000c 0121     		movs	r1, #1
 1996 000e 2420     		movs	r0, #36
 1997              	.LVL225:
 1998 0010 FFF7FEFF 		bl	nRF24_verified_write_register
 1999              	.LVL226:
1053:application-library/nrf24/nrf24.c **** }
 2000              		.loc 1 1053 0
 2001 0014 03B0     		add	sp, sp, #12
 2002              	.LCFI52:
 2003              		.cfi_def_cfa_offset 4
 2004              		@ sp needed
 2005 0016 5DF804FB 		ldr	pc, [sp], #4
 2006              		.cfi_endproc
 2007              	.LFE164:
 2009              		.section	.text.nRF24_get_SETUP_RETR,"ax",%progbits
 2010              		.align	1
 2011              		.global	nRF24_get_SETUP_RETR
 2012              		.syntax unified
 2013              		.thumb
 2014              		.thumb_func
ARM GAS  /tmp/cc0cESOd.s 			page 55


 2015              		.fpu fpv4-sp-d16
 2017              	nRF24_get_SETUP_RETR:
 2018              	.LFB165:
1054:application-library/nrf24/nrf24.c **** 
1055:application-library/nrf24/nrf24.c **** /**
1056:application-library/nrf24/nrf24.c ****   * @brief      Read <SETUP_RETR> register from nRF24L01+.
1057:application-library/nrf24/nrf24.c ****   * @param      None.
1058:application-library/nrf24/nrf24.c ****   * @retval     <SETUP_RETR> register value.
1059:application-library/nrf24/nrf24.c ****   */
1060:application-library/nrf24/nrf24.c **** uint8_t nRF24_get_SETUP_RETR(uint8_t ARD, uint8_t ARC)
1061:application-library/nrf24/nrf24.c **** {
 2019              		.loc 1 1061 0
 2020              		.cfi_startproc
 2021              		@ args = 0, pretend = 0, frame = 8
 2022              		@ frame_needed = 0, uses_anonymous_args = 0
 2023              	.LVL227:
 2024 0000 00B5     		push	{lr}
 2025              	.LCFI53:
 2026              		.cfi_def_cfa_offset 4
 2027              		.cfi_offset 14, -4
 2028 0002 83B0     		sub	sp, sp, #12
 2029              	.LCFI54:
 2030              		.cfi_def_cfa_offset 16
1062:application-library/nrf24/nrf24.c ****   uint8_t read_byte;
1063:application-library/nrf24/nrf24.c ****   spi_read_register(R_REGISTER_MASK + SETUP_RETR, 1, &read_byte);
 2031              		.loc 1 1063 0
 2032 0004 0DF10702 		add	r2, sp, #7
 2033 0008 0121     		movs	r1, #1
 2034              	.LVL228:
 2035 000a 0420     		movs	r0, #4
 2036              	.LVL229:
 2037 000c FFF7FEFF 		bl	spi_read_register
 2038              	.LVL230:
1064:application-library/nrf24/nrf24.c ****   return read_byte;
1065:application-library/nrf24/nrf24.c **** }
 2039              		.loc 1 1065 0
 2040 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 2041 0014 03B0     		add	sp, sp, #12
 2042              	.LCFI55:
 2043              		.cfi_def_cfa_offset 4
 2044              		@ sp needed
 2045 0016 5DF804FB 		ldr	pc, [sp], #4
 2046              		.cfi_endproc
 2047              	.LFE165:
 2049              		.section	.text.nRF24_set_RF_CH,"ax",%progbits
 2050              		.align	1
 2051              		.global	nRF24_set_RF_CH
 2052              		.syntax unified
 2053              		.thumb
 2054              		.thumb_func
 2055              		.fpu fpv4-sp-d16
 2057              	nRF24_set_RF_CH:
 2058              	.LFB166:
1066:application-library/nrf24/nrf24.c **** 
1067:application-library/nrf24/nrf24.c **** 
1068:application-library/nrf24/nrf24.c **** 
1069:application-library/nrf24/nrf24.c **** /**
ARM GAS  /tmp/cc0cESOd.s 			page 56


1070:application-library/nrf24/nrf24.c ****   * @brief  nRF24 sets the frequency channel of nRF24L01+ operates on.
1071:application-library/nrf24/nrf24.c ****   * @param  ch Channel. It is basically frequency in MHz. [ RF_CH_MASKDEFAULT ]
1072:application-library/nrf24/nrf24.c ****   * @retval None.
1073:application-library/nrf24/nrf24.c ****   * @note   frequency = (2400 + ch) MHz
1074:application-library/nrf24/nrf24.c ****   */
1075:application-library/nrf24/nrf24.c **** void nRF24_set_RF_CH(uint8_t ch)
1076:application-library/nrf24/nrf24.c **** {
 2059              		.loc 1 1076 0
 2060              		.cfi_startproc
 2061              		@ args = 0, pretend = 0, frame = 8
 2062              		@ frame_needed = 0, uses_anonymous_args = 0
 2063              	.LVL231:
 2064 0000 00B5     		push	{lr}
 2065              	.LCFI56:
 2066              		.cfi_def_cfa_offset 4
 2067              		.cfi_offset 14, -4
 2068 0002 83B0     		sub	sp, sp, #12
 2069              	.LCFI57:
 2070              		.cfi_def_cfa_offset 16
1077:application-library/nrf24/nrf24.c ****   uint8_t writing_byte = 0x00;
1078:application-library/nrf24/nrf24.c ****   writing_byte |= ch;
 2071              		.loc 1 1078 0
 2072 0004 02AA     		add	r2, sp, #8
 2073 0006 02F8010D 		strb	r0, [r2, #-1]!
1079:application-library/nrf24/nrf24.c ****   nRF24_verified_write_register(W_REGISTER_MASK + RF_CH, 1, &writing_byte);
 2074              		.loc 1 1079 0
 2075 000a 0121     		movs	r1, #1
 2076 000c 2520     		movs	r0, #37
 2077              	.LVL232:
 2078 000e FFF7FEFF 		bl	nRF24_verified_write_register
 2079              	.LVL233:
1080:application-library/nrf24/nrf24.c **** }
 2080              		.loc 1 1080 0
 2081 0012 03B0     		add	sp, sp, #12
 2082              	.LCFI58:
 2083              		.cfi_def_cfa_offset 4
 2084              		@ sp needed
 2085 0014 5DF804FB 		ldr	pc, [sp], #4
 2086              		.cfi_endproc
 2087              	.LFE166:
 2089              		.section	.text.nRF24_get_RF_CH,"ax",%progbits
 2090              		.align	1
 2091              		.global	nRF24_get_RF_CH
 2092              		.syntax unified
 2093              		.thumb
 2094              		.thumb_func
 2095              		.fpu fpv4-sp-d16
 2097              	nRF24_get_RF_CH:
 2098              	.LFB167:
1081:application-library/nrf24/nrf24.c **** 
1082:application-library/nrf24/nrf24.c **** 
1083:application-library/nrf24/nrf24.c **** 
1084:application-library/nrf24/nrf24.c **** /**
1085:application-library/nrf24/nrf24.c ****   * @brief   Read <RF_CH> register from nRF24L01+.
1086:application-library/nrf24/nrf24.c ****   * @param   None.
1087:application-library/nrf24/nrf24.c ****   * @retval  <RF_CH> register value.
1088:application-library/nrf24/nrf24.c ****   */
ARM GAS  /tmp/cc0cESOd.s 			page 57


1089:application-library/nrf24/nrf24.c **** uint8_t nRF24_get_RF_CH()
1090:application-library/nrf24/nrf24.c **** {
 2099              		.loc 1 1090 0
 2100              		.cfi_startproc
 2101              		@ args = 0, pretend = 0, frame = 8
 2102              		@ frame_needed = 0, uses_anonymous_args = 0
 2103 0000 00B5     		push	{lr}
 2104              	.LCFI59:
 2105              		.cfi_def_cfa_offset 4
 2106              		.cfi_offset 14, -4
 2107 0002 83B0     		sub	sp, sp, #12
 2108              	.LCFI60:
 2109              		.cfi_def_cfa_offset 16
1091:application-library/nrf24/nrf24.c ****   uint8_t read_byte;
1092:application-library/nrf24/nrf24.c ****   spi_read_register(R_REGISTER_MASK + RF_CH, 1, &read_byte);
 2110              		.loc 1 1092 0
 2111 0004 0DF10702 		add	r2, sp, #7
 2112 0008 0121     		movs	r1, #1
 2113 000a 0520     		movs	r0, #5
 2114 000c FFF7FEFF 		bl	spi_read_register
 2115              	.LVL234:
1093:application-library/nrf24/nrf24.c ****   return read_byte;
1094:application-library/nrf24/nrf24.c **** }
 2116              		.loc 1 1094 0
 2117 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 2118 0014 03B0     		add	sp, sp, #12
 2119              	.LCFI61:
 2120              		.cfi_def_cfa_offset 4
 2121              		@ sp needed
 2122 0016 5DF804FB 		ldr	pc, [sp], #4
 2123              		.cfi_endproc
 2124              	.LFE167:
 2126              		.section	.text.nRF24_set_RF_SETUP,"ax",%progbits
 2127              		.align	1
 2128              		.global	nRF24_set_RF_SETUP
 2129              		.syntax unified
 2130              		.thumb
 2131              		.thumb_func
 2132              		.fpu fpv4-sp-d16
 2134              	nRF24_set_RF_SETUP:
 2135              	.LFB168:
1095:application-library/nrf24/nrf24.c **** 
1096:application-library/nrf24/nrf24.c **** /**
1097:application-library/nrf24/nrf24.c ****   * @brief nRF24 RF SETUP register configuration. 
1098:application-library/nrf24/nrf24.c ****   * @param cont_wave Enables continuous carrier transmit when high. [ CONT_WAVE_MASK1 | CONT_WAVE_M
1099:application-library/nrf24/nrf24.c ****   * @param rf_dr_low Sets RF data rate to 250 kbps. [ RF_DR_LOW_MASK1 | RF_DR_LOW_MASK0 | RF_DR_LOW
1100:application-library/nrf24/nrf24.c ****   * @param pll_lock (!) TEST-ONLY SIGNAL for Nordic's internal testing purpose. Forces PLL lock sig
1101:application-library/nrf24/nrf24.c ****   * @param rf_dr_high Select between high speed data rates. This bit is don't care if RF_DR_LOW bit
1102:application-library/nrf24/nrf24.c ****   *  
1103:application-library/nrf24/nrf24.c ****   *    [ RF_DR_HIGH_MASK1 | RF_DR_HIGH_MASK0 | RF_DR_HIGH_MASKDEFAULT ]
1104:application-library/nrf24/nrf24.c ****   *
1105:application-library/nrf24/nrf24.c ****   * @note Use RF_DR_HIGH_MASKx and RF_DR_LOW_MASKx or you can use the following masks that combines
1106:application-library/nrf24/nrf24.c ****   *
1107:application-library/nrf24/nrf24.c ****   *     Encoding for RF data rate: 
1108:application-library/nrf24/nrf24.c ****   *     {RF_DR_LOW, RF_DR_HIGH}   Data-Rate
1109:application-library/nrf24/nrf24.c ****   *          0    ,     0            1   Mbps
1110:application-library/nrf24/nrf24.c ****   *          0    ,     1            2   Mbps
ARM GAS  /tmp/cc0cESOd.s 			page 58


1111:application-library/nrf24/nrf24.c ****   *          1    ,     0            250 kbps
1112:application-library/nrf24/nrf24.c ****   *          1    ,     1            Reserved
1113:application-library/nrf24/nrf24.c ****   *  
1114:application-library/nrf24/nrf24.c ****   *    [ RF_DR_MASK1Mbps | RF_DR_MASK2Mbps | RF_DR_MASK250kbps ]
1115:application-library/nrf24/nrf24.c ****   *
1116:application-library/nrf24/nrf24.c ****   * @param rf_pwr RF Output power in TX mode. [ RF_PWR_MASKNEG18dBm | RF_PWR_MASKNEG12dBm | RF_PWR_
1117:application-library/nrf24/nrf24.c ****   *                Power
1118:application-library/nrf24/nrf24.c ****   *         11   -18 dBm
1119:application-library/nrf24/nrf24.c ****   *         01   -12 dBm
1120:application-library/nrf24/nrf24.c ****   *         10    -6 dBm
1121:application-library/nrf24/nrf24.c ****   *         11     0 dBm
1122:application-library/nrf24/nrf24.c ****   * @retval None.
1123:application-library/nrf24/nrf24.c ****   */
1124:application-library/nrf24/nrf24.c **** void nRF24_set_RF_SETUP(uint8_t cont_wave, uint8_t rf_dr_low, uint8_t pll_lock, uint8_t rf_dr_high,
1125:application-library/nrf24/nrf24.c **** {
 2136              		.loc 1 1125 0
 2137              		.cfi_startproc
 2138              		@ args = 4, pretend = 0, frame = 8
 2139              		@ frame_needed = 0, uses_anonymous_args = 0
 2140              	.LVL235:
 2141 0000 00B5     		push	{lr}
 2142              	.LCFI62:
 2143              		.cfi_def_cfa_offset 4
 2144              		.cfi_offset 14, -4
 2145 0002 83B0     		sub	sp, sp, #12
 2146              	.LCFI63:
 2147              		.cfi_def_cfa_offset 16
1126:application-library/nrf24/nrf24.c ****   uint8_t writing_byte = 0x00;
1127:application-library/nrf24/nrf24.c ****   writing_byte |= cont_wave | rf_dr_low | pll_lock | rf_dr_high | rf_pwr;
 2148              		.loc 1 1127 0
 2149 0004 0143     		orrs	r1, r1, r0
 2150              	.LVL236:
 2151 0006 1143     		orrs	r1, r1, r2
 2152 0008 1943     		orrs	r1, r1, r3
 2153 000a 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 2154              	.LVL237:
 2155 000e 1943     		orrs	r1, r1, r3
 2156 0010 02AA     		add	r2, sp, #8
 2157              	.LVL238:
 2158 0012 02F8011D 		strb	r1, [r2, #-1]!
1128:application-library/nrf24/nrf24.c ****   nRF24_verified_write_register(W_REGISTER_MASK + RF_SETUP, 1, &writing_byte);
 2159              		.loc 1 1128 0
 2160 0016 0121     		movs	r1, #1
 2161 0018 2620     		movs	r0, #38
 2162              	.LVL239:
 2163 001a FFF7FEFF 		bl	nRF24_verified_write_register
 2164              	.LVL240:
1129:application-library/nrf24/nrf24.c **** }
 2165              		.loc 1 1129 0
 2166 001e 03B0     		add	sp, sp, #12
 2167              	.LCFI64:
 2168              		.cfi_def_cfa_offset 4
 2169              		@ sp needed
 2170 0020 5DF804FB 		ldr	pc, [sp], #4
 2171              		.cfi_endproc
 2172              	.LFE168:
 2174              		.section	.text.nRF24_get_RF_SETUP,"ax",%progbits
ARM GAS  /tmp/cc0cESOd.s 			page 59


 2175              		.align	1
 2176              		.global	nRF24_get_RF_SETUP
 2177              		.syntax unified
 2178              		.thumb
 2179              		.thumb_func
 2180              		.fpu fpv4-sp-d16
 2182              	nRF24_get_RF_SETUP:
 2183              	.LFB169:
1130:application-library/nrf24/nrf24.c **** 
1131:application-library/nrf24/nrf24.c **** /**
1132:application-library/nrf24/nrf24.c ****   * @brief   Read <RF_SETUP> register from nRF24L01+.
1133:application-library/nrf24/nrf24.c ****   * @param   None.
1134:application-library/nrf24/nrf24.c ****   * @retval  <RF_SETUP> register value.
1135:application-library/nrf24/nrf24.c ****   */
1136:application-library/nrf24/nrf24.c **** uint8_t nRF24_get_RF_SETUP()
1137:application-library/nrf24/nrf24.c **** {
 2184              		.loc 1 1137 0
 2185              		.cfi_startproc
 2186              		@ args = 0, pretend = 0, frame = 8
 2187              		@ frame_needed = 0, uses_anonymous_args = 0
 2188 0000 00B5     		push	{lr}
 2189              	.LCFI65:
 2190              		.cfi_def_cfa_offset 4
 2191              		.cfi_offset 14, -4
 2192 0002 83B0     		sub	sp, sp, #12
 2193              	.LCFI66:
 2194              		.cfi_def_cfa_offset 16
1138:application-library/nrf24/nrf24.c ****   uint8_t read_byte;
1139:application-library/nrf24/nrf24.c ****   spi_read_register(R_REGISTER_MASK + RF_SETUP, 1, &read_byte);
 2195              		.loc 1 1139 0
 2196 0004 0DF10702 		add	r2, sp, #7
 2197 0008 0121     		movs	r1, #1
 2198 000a 0620     		movs	r0, #6
 2199 000c FFF7FEFF 		bl	spi_read_register
 2200              	.LVL241:
1140:application-library/nrf24/nrf24.c ****   return read_byte;
1141:application-library/nrf24/nrf24.c **** }
 2201              		.loc 1 1141 0
 2202 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 2203 0014 03B0     		add	sp, sp, #12
 2204              	.LCFI67:
 2205              		.cfi_def_cfa_offset 4
 2206              		@ sp needed
 2207 0016 5DF804FB 		ldr	pc, [sp], #4
 2208              		.cfi_endproc
 2209              	.LFE169:
 2211              		.section	.text.nRF24_clear_STATUS,"ax",%progbits
 2212              		.align	1
 2213              		.global	nRF24_clear_STATUS
 2214              		.syntax unified
 2215              		.thumb
 2216              		.thumb_func
 2217              		.fpu fpv4-sp-d16
 2219              	nRF24_clear_STATUS:
 2220              	.LFB170:
1142:application-library/nrf24/nrf24.c **** 
1143:application-library/nrf24/nrf24.c **** /**
ARM GAS  /tmp/cc0cESOd.s 			page 60


1144:application-library/nrf24/nrf24.c ****   * @brief      Clear flag bits in 'STATUS' register.
1145:application-library/nrf24/nrf24.c ****   * @param      rx_dr Data Ready RX FIFO interrupt. Asserted when new data arrives RX FIFO.
1146:application-library/nrf24/nrf24.c ****   *               Write 1 to clear bit [ RX_DR_MASK1 ]
1147:application-library/nrf24/nrf24.c ****   * @param      tx_ds Data Sent TX FIFO interrupt. Asserted when packet transmitted on TX. 
1148:application-library/nrf24/nrf24.c ****   *               If AUTO_ACK is activated, this bit is set high only when ACK is received. Write 1
1149:application-library/nrf24/nrf24.c ****   * @param      max_rt Maximum number of TX retransmits interrupt. Write 1 to clear bit. 
1150:application-library/nrf24/nrf24.c ****   *               If MAX_RT is asserted it must be cleared to enable further communication. [ MAX_R
1151:application-library/nrf24/nrf24.c ****   * @retval     None.
1152:application-library/nrf24/nrf24.c ****   */
1153:application-library/nrf24/nrf24.c **** void nRF24_clear_STATUS(uint8_t rx_dr, uint8_t tx_ds, uint8_t max_rt) 
1154:application-library/nrf24/nrf24.c **** {
 2221              		.loc 1 1154 0
 2222              		.cfi_startproc
 2223              		@ args = 0, pretend = 0, frame = 8
 2224              		@ frame_needed = 0, uses_anonymous_args = 0
 2225              	.LVL242:
 2226 0000 00B5     		push	{lr}
 2227              	.LCFI68:
 2228              		.cfi_def_cfa_offset 4
 2229              		.cfi_offset 14, -4
 2230 0002 83B0     		sub	sp, sp, #12
 2231              	.LCFI69:
 2232              		.cfi_def_cfa_offset 16
1155:application-library/nrf24/nrf24.c ****   uint8_t writing_byte = 0x00;
1156:application-library/nrf24/nrf24.c ****   writing_byte |= rx_dr | tx_ds | max_rt;
 2233              		.loc 1 1156 0
 2234 0004 0143     		orrs	r1, r1, r0
 2235              	.LVL243:
 2236 0006 1143     		orrs	r1, r1, r2
 2237 0008 02AA     		add	r2, sp, #8
 2238              	.LVL244:
 2239 000a 02F8011D 		strb	r1, [r2, #-1]!
1157:application-library/nrf24/nrf24.c **** 
1158:application-library/nrf24/nrf24.c ****   /* Do not use nRF24_verified_write_register() to write to <STATUS> register. Not all bits are wri
1159:application-library/nrf24/nrf24.c ****   spi_write_register(W_REGISTER_MASK + STATUS, 1, &writing_byte);
 2240              		.loc 1 1159 0
 2241 000e 0121     		movs	r1, #1
 2242 0010 2720     		movs	r0, #39
 2243              	.LVL245:
 2244 0012 FFF7FEFF 		bl	spi_write_register
 2245              	.LVL246:
1160:application-library/nrf24/nrf24.c **** }
 2246              		.loc 1 1160 0
 2247 0016 03B0     		add	sp, sp, #12
 2248              	.LCFI70:
 2249              		.cfi_def_cfa_offset 4
 2250              		@ sp needed
 2251 0018 5DF804FB 		ldr	pc, [sp], #4
 2252              		.cfi_endproc
 2253              	.LFE170:
 2255              		.section	.text.nRF24_tx_self_test,"ax",%progbits
 2256              		.align	1
 2257              		.global	nRF24_tx_self_test
 2258              		.syntax unified
 2259              		.thumb
 2260              		.thumb_func
 2261              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cc0cESOd.s 			page 61


 2263              	nRF24_tx_self_test:
 2264              	.LFB148:
 495:application-library/nrf24/nrf24.c ****   char message[256];
 2265              		.loc 1 495 0
 2266              		.cfi_startproc
 2267              		@ Volatile: function does not return.
 2268              		@ args = 0, pretend = 0, frame = 272
 2269              		@ frame_needed = 0, uses_anonymous_args = 0
 2270 0000 00B5     		push	{lr}
 2271              	.LCFI71:
 2272              		.cfi_def_cfa_offset 4
 2273              		.cfi_offset 14, -4
 2274 0002 C5B0     		sub	sp, sp, #276
 2275              	.LCFI72:
 2276              		.cfi_def_cfa_offset 280
 500:application-library/nrf24/nrf24.c ****   serial_print(message);
 2277              		.loc 1 500 0
 2278 0004 04AC     		add	r4, sp, #16
 2279 0006 5A4D     		ldr	r5, .L130
 2280 0008 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2281 000a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2282 000c 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 2283 0010 07C4     		stmia	r4!, {r0, r1, r2}
 2284 0012 24F8023B 		strh	r3, [r4], #2	@ movhi
 2285 0016 1B0C     		lsrs	r3, r3, #16
 2286 0018 2370     		strb	r3, [r4]
 501:application-library/nrf24/nrf24.c **** 
 2287              		.loc 1 501 0
 2288 001a 04A8     		add	r0, sp, #16
 2289 001c FFF7FEFF 		bl	serial_print
 2290              	.LVL247:
 503:application-library/nrf24/nrf24.c ****   serial_print(message);
 2291              		.loc 1 503 0
 2292 0020 5322     		movs	r2, #83
 2293 0022 5449     		ldr	r1, .L130+4
 2294 0024 04A8     		add	r0, sp, #16
 2295 0026 FFF7FEFF 		bl	memcpy
 2296              	.LVL248:
 504:application-library/nrf24/nrf24.c ****   #endif
 2297              		.loc 1 504 0
 2298 002a 04A8     		add	r0, sp, #16
 2299 002c FFF7FEFF 		bl	serial_print
 2300              	.LVL249:
 507:application-library/nrf24/nrf24.c **** 
 2301              		.loc 1 507 0
 2302 0030 0024     		movs	r4, #0
 2303 0032 8DF80E40 		strb	r4, [sp, #14]
 511:application-library/nrf24/nrf24.c **** 
 2304              		.loc 1 511 0
 2305 0036 FFF7FEFF 		bl	nRF24_CE_0
 2306              	.LVL250:
 514:application-library/nrf24/nrf24.c ****   nRF24_verified_write_register(W_REGISTER_MASK + EN_AA, 1, &writing_byte);        // disable auto 
 2307              		.loc 1 514 0
 2308 003a 8DF80F40 		strb	r4, [sp, #15]
 515:application-library/nrf24/nrf24.c ****   nRF24_verified_write_register(W_REGISTER_MASK + EN_RXADDR, 1, &writing_byte);    // disable RX da
 2309              		.loc 1 515 0
 2310 003e 0DF10F02 		add	r2, sp, #15
ARM GAS  /tmp/cc0cESOd.s 			page 62


 2311 0042 0121     		movs	r1, #1
 2312 0044 2120     		movs	r0, #33
 2313 0046 FFF7FEFF 		bl	nRF24_verified_write_register
 2314              	.LVL251:
 516:application-library/nrf24/nrf24.c ****   nRF24_verified_write_register(W_REGISTER_MASK + SETUP_RETR, 1, &writing_byte);   // disable autom
 2315              		.loc 1 516 0
 2316 004a 0DF10F02 		add	r2, sp, #15
 2317 004e 0121     		movs	r1, #1
 2318 0050 2220     		movs	r0, #34
 2319 0052 FFF7FEFF 		bl	nRF24_verified_write_register
 2320              	.LVL252:
 517:application-library/nrf24/nrf24.c **** 
 2321              		.loc 1 517 0
 2322 0056 0DF10F02 		add	r2, sp, #15
 2323 005a 0121     		movs	r1, #1
 2324 005c 2420     		movs	r0, #36
 2325 005e FFF7FEFF 		bl	nRF24_verified_write_register
 2326              	.LVL253:
 519:application-library/nrf24/nrf24.c ****   nRF24_verified_write_register(W_REGISTER_MASK + CONFIG, 1, &writing_byte);       // PWR_UP = 1 PR
 2327              		.loc 1 519 0
 2328 0062 0E23     		movs	r3, #14
 2329 0064 8DF80F30 		strb	r3, [sp, #15]
 520:application-library/nrf24/nrf24.c **** 
 2330              		.loc 1 520 0
 2331 0068 0DF10F02 		add	r2, sp, #15
 2332 006c 0121     		movs	r1, #1
 2333 006e 2020     		movs	r0, #32
 2334 0070 FFF7FEFF 		bl	nRF24_verified_write_register
 2335              	.LVL254:
 523:application-library/nrf24/nrf24.c ****   spi_write_register(W_TX_PAYLOAD, 4, test_payload);
 2336              		.loc 1 523 0
 2337 0074 404B     		ldr	r3, .L130+8
 2338 0076 1B68     		ldr	r3, [r3]
 2339 0078 0293     		str	r3, [sp, #8]
 524:application-library/nrf24/nrf24.c ****   nRF24_CE_1(); // Chip Enable. Fire the packet out on the antenna!
 2340              		.loc 1 524 0
 2341 007a 02AA     		add	r2, sp, #8
 2342 007c 0421     		movs	r1, #4
 2343 007e A020     		movs	r0, #160
 2344 0080 FFF7FEFF 		bl	spi_write_register
 2345              	.LVL255:
 525:application-library/nrf24/nrf24.c ****   
 2346              		.loc 1 525 0
 2347 0084 FFF7FEFF 		bl	nRF24_CE_1
 2348              	.LVL256:
 529:application-library/nrf24/nrf24.c **** 
 2349              		.loc 1 529 0
 2350 0088 0DF10E02 		add	r2, sp, #14
 2351 008c 0121     		movs	r1, #1
 2352 008e 0720     		movs	r0, #7
 2353 0090 FFF7FEFF 		bl	spi_read_register
 2354              	.LVL257:
 531:application-library/nrf24/nrf24.c **** 
 2355              		.loc 1 531 0
 2356 0094 0120     		movs	r0, #1
 2357 0096 FFF7FEFF 		bl	SPI_DELAY
 2358              	.LVL258:
ARM GAS  /tmp/cc0cESOd.s 			page 63


 534:application-library/nrf24/nrf24.c **** 
 2359              		.loc 1 534 0
 2360 009a FFF7FEFF 		bl	nRF24_CE_0
 2361              	.LVL259:
 537:application-library/nrf24/nrf24.c ****   {
 2362              		.loc 1 537 0
 2363 009e 9DF80E20 		ldrb	r2, [sp, #14]	@ zero_extendqisi2
 2364 00a2 12F02E0F 		tst	r2, #46
 2365 00a6 08D0     		beq	.L123
 540:application-library/nrf24/nrf24.c ****                        <STATUS> has value of 0x2E. \
 2366              		.loc 1 540 0
 2367 00a8 DD22     		movs	r2, #221
 2368 00aa 3449     		ldr	r1, .L130+12
 2369 00ac 04A8     		add	r0, sp, #16
 2370 00ae FFF7FEFF 		bl	memcpy
 2371              	.LVL260:
 544:application-library/nrf24/nrf24.c ****     #endif
 2372              		.loc 1 544 0
 2373 00b2 04A8     		add	r0, sp, #16
 2374 00b4 FFF7FEFF 		bl	serial_print
 2375              	.LVL261:
 2376 00b8 22E0     		b	.L127
 2377              	.L123:
 550:application-library/nrf24/nrf24.c ****     serial_print(message);
 2378              		.loc 1 550 0
 2379 00ba 3149     		ldr	r1, .L130+16
 2380 00bc 04A8     		add	r0, sp, #16
 2381 00be FFF7FEFF 		bl	sprintf
 2382              	.LVL262:
 551:application-library/nrf24/nrf24.c ****     #endif
 2383              		.loc 1 551 0
 2384 00c2 04A8     		add	r0, sp, #16
 2385 00c4 FFF7FEFF 		bl	serial_print
 2386              	.LVL263:
 2387 00c8 1AE0     		b	.L127
 2388              	.L129:
 2389              	.LBB164:
 580:application-library/nrf24/nrf24.c ****       serial_print(message);
 2390              		.loc 1 580 0
 2391 00ca 04AC     		add	r4, sp, #16
 2392 00cc 2D4D     		ldr	r5, .L130+20
 2393 00ce 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2394 00d0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2395 00d2 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 2396 00d6 07C4     		stmia	r4!, {r0, r1, r2}
 2397 00d8 24F8023B 		strh	r3, [r4], #2	@ movhi
 2398 00dc 1B0C     		lsrs	r3, r3, #16
 2399 00de 2370     		strb	r3, [r4]
 2400              	.LVL264:
 2401              	.LBB165:
 2402              	.LBB166:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 2403              		.loc 1 183 0
 2404 00e0 04A8     		add	r0, sp, #16
 2405              	.LVL265:
 2406 00e2 FFF7FEFF 		bl	strlen
 2407              	.LVL266:
ARM GAS  /tmp/cc0cESOd.s 			page 64


 2408 00e6 6423     		movs	r3, #100
 2409 00e8 82B2     		uxth	r2, r0
 2410 00ea 04A9     		add	r1, sp, #16
 2411              	.LVL267:
 2412 00ec 2648     		ldr	r0, .L130+24
 2413 00ee FFF7FEFF 		bl	HAL_UART_Transmit
 2414              	.LVL268:
 2415              	.L126:
 2416              	.LBE166:
 2417              	.LBE165:
 593:application-library/nrf24/nrf24.c **** 
 2418              		.loc 1 593 0
 2419 00f2 1022     		movs	r2, #16
 2420 00f4 2021     		movs	r1, #32
 2421 00f6 4020     		movs	r0, #64
 2422 00f8 FFF7FEFF 		bl	nRF24_clear_STATUS
 2423              	.LVL269:
 595:application-library/nrf24/nrf24.c ****   }
 2424              		.loc 1 595 0
 2425 00fc FFF7FEFF 		bl	nRF24_CE_0
 2426              	.LVL270:
 2427              	.L127:
 561:application-library/nrf24/nrf24.c **** 
 2428              		.loc 1 561 0
 2429 0100 1D4B     		ldr	r3, .L130+8
 2430 0102 1B68     		ldr	r3, [r3]
 2431 0104 0193     		str	r3, [sp, #4]
 563:application-library/nrf24/nrf24.c **** 
 2432              		.loc 1 563 0
 2433 0106 01AA     		add	r2, sp, #4
 2434 0108 0421     		movs	r1, #4
 2435 010a A020     		movs	r0, #160
 2436 010c FFF7FEFF 		bl	spi_write_register
 2437              	.LVL271:
 566:application-library/nrf24/nrf24.c **** 
 2438              		.loc 1 566 0
 2439 0110 FFF7FEFF 		bl	nRF24_CE_1
 2440              	.LVL272:
 570:application-library/nrf24/nrf24.c **** 
 2441              		.loc 1 570 0
 2442 0114 0DF10302 		add	r2, sp, #3
 2443 0118 0121     		movs	r1, #1
 2444 011a 0720     		movs	r0, #7
 2445 011c FFF7FEFF 		bl	spi_read_register
 2446              	.LVL273:
 573:application-library/nrf24/nrf24.c ****     serial_print(message);
 2447              		.loc 1 573 0
 2448 0120 9DF80320 		ldrb	r2, [sp, #3]	@ zero_extendqisi2
 2449 0124 1949     		ldr	r1, .L130+28
 2450 0126 04A8     		add	r0, sp, #16
 2451 0128 FFF7FEFF 		bl	sprintf
 2452              	.LVL274:
 2453              	.LBB167:
 2454              	.LBB168:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 2455              		.loc 1 183 0
 2456 012c 04A8     		add	r0, sp, #16
ARM GAS  /tmp/cc0cESOd.s 			page 65


 2457              	.LVL275:
 2458 012e FFF7FEFF 		bl	strlen
 2459              	.LVL276:
 2460 0132 6423     		movs	r3, #100
 2461 0134 82B2     		uxth	r2, r0
 2462 0136 04A9     		add	r1, sp, #16
 2463              	.LVL277:
 2464 0138 1348     		ldr	r0, .L130+24
 2465 013a FFF7FEFF 		bl	HAL_UART_Transmit
 2466              	.LVL278:
 2467              	.LBE168:
 2468              	.LBE167:
 577:application-library/nrf24/nrf24.c ****     {
 2469              		.loc 1 577 0
 2470 013e 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 2471 0142 2E2B     		cmp	r3, #46
 2472 0144 C1D0     		beq	.L129
 587:application-library/nrf24/nrf24.c ****       serial_print(message);
 2473              		.loc 1 587 0
 2474 0146 04AC     		add	r4, sp, #16
 2475 0148 114D     		ldr	r5, .L130+32
 2476 014a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2477 014c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2478 014e 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 2479 0152 07C4     		stmia	r4!, {r0, r1, r2}
 2480 0154 24F8023B 		strh	r3, [r4], #2	@ movhi
 2481 0158 1B0C     		lsrs	r3, r3, #16
 2482 015a 2370     		strb	r3, [r4]
 2483              	.LVL279:
 2484              	.LBB169:
 2485              	.LBB170:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 2486              		.loc 1 183 0
 2487 015c 04A8     		add	r0, sp, #16
 2488              	.LVL280:
 2489 015e FFF7FEFF 		bl	strlen
 2490              	.LVL281:
 2491 0162 6423     		movs	r3, #100
 2492 0164 82B2     		uxth	r2, r0
 2493 0166 04A9     		add	r1, sp, #16
 2494              	.LVL282:
 2495 0168 0748     		ldr	r0, .L130+24
 2496 016a FFF7FEFF 		bl	HAL_UART_Transmit
 2497              	.LVL283:
 2498 016e C0E7     		b	.L126
 2499              	.L131:
 2500              		.align	2
 2501              	.L130:
 2502 0170 00000000 		.word	.LC23
 2503 0174 20000000 		.word	.LC24
 2504 0178 00000000 		.word	.LANCHOR0
 2505 017c 74000000 		.word	.LC25
 2506 0180 54010000 		.word	.LC26
 2507 0184 D0010000 		.word	.LC28
 2508 0188 00000000 		.word	huart2
 2509 018c B4010000 		.word	.LC27
 2510 0190 F0010000 		.word	.LC29
ARM GAS  /tmp/cc0cESOd.s 			page 66


 2511              	.LBE170:
 2512              	.LBE169:
 2513              	.LBE164:
 2514              		.cfi_endproc
 2515              	.LFE148:
 2517              		.section	.text.nRF24_get_STATUS,"ax",%progbits
 2518              		.align	1
 2519              		.global	nRF24_get_STATUS
 2520              		.syntax unified
 2521              		.thumb
 2522              		.thumb_func
 2523              		.fpu fpv4-sp-d16
 2525              	nRF24_get_STATUS:
 2526              	.LFB171:
1161:application-library/nrf24/nrf24.c **** 
1162:application-library/nrf24/nrf24.c **** /**
1163:application-library/nrf24/nrf24.c ****   * @brief      Read <STATUS> register from nRF24.
1164:application-library/nrf24/nrf24.c ****   * @param      None.
1165:application-library/nrf24/nrf24.c ****   * @retval     <STATUS> register value.
1166:application-library/nrf24/nrf24.c ****   * @note    Following masks can be used:
1167:application-library/nrf24/nrf24.c ****   *   RX_DR_READMASK   
1168:application-library/nrf24/nrf24.c ****   *   TX_DS_READMASK   
1169:application-library/nrf24/nrf24.c ****   *   MAX_RT_READMASK  
1170:application-library/nrf24/nrf24.c ****   *   RX_P_NO_READMASK    
1171:application-library/nrf24/nrf24.c ****   *   TX_FULL_READMASK    
1172:application-library/nrf24/nrf24.c ****   */
1173:application-library/nrf24/nrf24.c **** uint8_t nRF24_get_STATUS(void) 
1174:application-library/nrf24/nrf24.c **** {
 2527              		.loc 1 1174 0
 2528              		.cfi_startproc
 2529              		@ args = 0, pretend = 0, frame = 8
 2530              		@ frame_needed = 0, uses_anonymous_args = 0
 2531 0000 00B5     		push	{lr}
 2532              	.LCFI73:
 2533              		.cfi_def_cfa_offset 4
 2534              		.cfi_offset 14, -4
 2535 0002 83B0     		sub	sp, sp, #12
 2536              	.LCFI74:
 2537              		.cfi_def_cfa_offset 16
1175:application-library/nrf24/nrf24.c ****   uint8_t status;
1176:application-library/nrf24/nrf24.c ****   spi_read_register(R_REGISTER_MASK + STATUS, 1, &status);
 2538              		.loc 1 1176 0
 2539 0004 0DF10702 		add	r2, sp, #7
 2540 0008 0121     		movs	r1, #1
 2541 000a 0720     		movs	r0, #7
 2542 000c FFF7FEFF 		bl	spi_read_register
 2543              	.LVL284:
1177:application-library/nrf24/nrf24.c ****   return status;
1178:application-library/nrf24/nrf24.c **** }
 2544              		.loc 1 1178 0
 2545 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 2546 0014 03B0     		add	sp, sp, #12
 2547              	.LCFI75:
 2548              		.cfi_def_cfa_offset 4
 2549              		@ sp needed
 2550 0016 5DF804FB 		ldr	pc, [sp], #4
 2551              		.cfi_endproc
ARM GAS  /tmp/cc0cESOd.s 			page 67


 2552              	.LFE171:
 2554              		.section	.text.nRF24_receive_packet,"ax",%progbits
 2555              		.align	1
 2556              		.global	nRF24_receive_packet
 2557              		.syntax unified
 2558              		.thumb
 2559              		.thumb_func
 2560              		.fpu fpv4-sp-d16
 2562              	nRF24_receive_packet:
 2563              	.LFB154:
 810:application-library/nrf24/nrf24.c **** 	uint8_t RX_WIDTH = 32;
 2564              		.loc 1 810 0
 2565              		.cfi_startproc
 2566              		@ args = 0, pretend = 0, frame = 96
 2567              		@ frame_needed = 0, uses_anonymous_args = 0
 2568 0000 30B5     		push	{r4, r5, lr}
 2569              	.LCFI76:
 2570              		.cfi_def_cfa_offset 12
 2571              		.cfi_offset 4, -12
 2572              		.cfi_offset 5, -8
 2573              		.cfi_offset 14, -4
 2574 0002 99B0     		sub	sp, sp, #100
 2575              	.LCFI77:
 2576              		.cfi_def_cfa_offset 112
 2577              	.LVL285:
 815:application-library/nrf24/nrf24.c **** 
 2578              		.loc 1 815 0
 2579 0004 FFF7FEFF 		bl	nRF24_get_STATUS
 2580              	.LVL286:
 818:application-library/nrf24/nrf24.c **** 		/* Transition from [RX Mode] to [Standby-I] */
 2581              		.loc 1 818 0
 2582 0008 10F0400F 		tst	r0, #64
 2583 000c 12D1     		bne	.L138
 836:application-library/nrf24/nrf24.c **** 		serial_print(message);
 2584              		.loc 1 836 0
 2585 000e 08AC     		add	r4, sp, #32
 2586 0010 194D     		ldr	r5, .L139
 2587 0012 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2588              	.LVL287:
 2589 0014 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2590 0016 95E80700 		ldm	r5, {r0, r1, r2}
 2591 001a 84E80700 		stm	r4, {r0, r1, r2}
 2592              	.LVL288:
 2593              	.LBB175:
 2594              	.LBB176:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 2595              		.loc 1 183 0
 2596 001e 08A8     		add	r0, sp, #32
 2597              	.LVL289:
 2598 0020 FFF7FEFF 		bl	strlen
 2599              	.LVL290:
 2600 0024 6423     		movs	r3, #100
 2601 0026 82B2     		uxth	r2, r0
 2602 0028 08A9     		add	r1, sp, #32
 2603              	.LVL291:
 2604 002a 1448     		ldr	r0, .L139+4
 2605 002c FFF7FEFF 		bl	HAL_UART_Transmit
ARM GAS  /tmp/cc0cESOd.s 			page 68


 2606              	.LVL292:
 2607              	.L134:
 2608              	.LBE176:
 2609              	.LBE175:
 840:application-library/nrf24/nrf24.c **** 
 2610              		.loc 1 840 0
 2611 0030 19B0     		add	sp, sp, #100
 2612              	.LCFI78:
 2613              		.cfi_remember_state
 2614              		.cfi_def_cfa_offset 12
 2615              	.LVL293:
 2616              		@ sp needed
 2617 0032 30BD     		pop	{r4, r5, pc}
 2618              	.LVL294:
 2619              	.L138:
 2620              	.LCFI79:
 2621              		.cfi_restore_state
 820:application-library/nrf24/nrf24.c **** 
 2622              		.loc 1 820 0
 2623 0034 FFF7FEFF 		bl	nRF24_CE_0
 2624              	.LVL295:
 823:application-library/nrf24/nrf24.c **** 
 2625              		.loc 1 823 0
 2626 0038 6A46     		mov	r2, sp
 2627 003a 2021     		movs	r1, #32
 2628 003c 6120     		movs	r0, #97
 2629 003e FFF7FEFF 		bl	spi_read_register
 2630              	.LVL296:
 826:application-library/nrf24/nrf24.c **** 		serial_print(message);
 2631              		.loc 1 826 0
 2632 0042 08AC     		add	r4, sp, #32
 2633 0044 0E4D     		ldr	r5, .L139+8
 2634 0046 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2635 0048 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2636 004a 2B68     		ldr	r3, [r5]
 2637 004c 2380     		strh	r3, [r4]	@ movhi
 2638              	.LVL297:
 2639              	.LBB177:
 2640              	.LBB178:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 2641              		.loc 1 183 0
 2642 004e 08A8     		add	r0, sp, #32
 2643              	.LVL298:
 2644 0050 FFF7FEFF 		bl	strlen
 2645              	.LVL299:
 2646 0054 6423     		movs	r3, #100
 2647 0056 82B2     		uxth	r2, r0
 2648 0058 08A9     		add	r1, sp, #32
 2649              	.LVL300:
 2650 005a 0848     		ldr	r0, .L139+4
 2651 005c FFF7FEFF 		bl	HAL_UART_Transmit
 2652              	.LVL301:
 2653              	.LBE178:
 2654              	.LBE177:
 828:application-library/nrf24/nrf24.c **** 		#endif
 2655              		.loc 1 828 0
 2656 0060 6946     		mov	r1, sp
ARM GAS  /tmp/cc0cESOd.s 			page 69


 2657 0062 2020     		movs	r0, #32
 2658 0064 FFF7FEFF 		bl	print_bytearray
 2659              	.LVL302:
 832:application-library/nrf24/nrf24.c ****     nRF24_CE_1();
 2660              		.loc 1 832 0
 2661 0068 1022     		movs	r2, #16
 2662 006a 2021     		movs	r1, #32
 2663 006c 4020     		movs	r0, #64
 2664 006e FFF7FEFF 		bl	nRF24_clear_STATUS
 2665              	.LVL303:
 833:application-library/nrf24/nrf24.c ****   }else {
 2666              		.loc 1 833 0
 2667 0072 FFF7FEFF 		bl	nRF24_CE_1
 2668              	.LVL304:
 2669 0076 DBE7     		b	.L134
 2670              	.L140:
 2671              		.align	2
 2672              	.L139:
 2673 0078 14000000 		.word	.LC31
 2674 007c 00000000 		.word	huart2
 2675 0080 00000000 		.word	.LC30
 2676              		.cfi_endproc
 2677              	.LFE154:
 2679              		.section	.text.nRF24_get_OBSERVE_TX,"ax",%progbits
 2680              		.align	1
 2681              		.global	nRF24_get_OBSERVE_TX
 2682              		.syntax unified
 2683              		.thumb
 2684              		.thumb_func
 2685              		.fpu fpv4-sp-d16
 2687              	nRF24_get_OBSERVE_TX:
 2688              	.LFB172:
1179:application-library/nrf24/nrf24.c **** 
1180:application-library/nrf24/nrf24.c **** /**
1181:application-library/nrf24/nrf24.c ****   * @brief      Read <OBSERVE_TX> register from nRF24.
1182:application-library/nrf24/nrf24.c ****   * @param      None.
1183:application-library/nrf24/nrf24.c ****   * @retval     <OBSERVE_TX> register value.
1184:application-library/nrf24/nrf24.c ****   */
1185:application-library/nrf24/nrf24.c **** uint8_t nRF24_get_OBSERVE_TX()
1186:application-library/nrf24/nrf24.c **** {
 2689              		.loc 1 1186 0
 2690              		.cfi_startproc
 2691              		@ args = 0, pretend = 0, frame = 8
 2692              		@ frame_needed = 0, uses_anonymous_args = 0
 2693 0000 00B5     		push	{lr}
 2694              	.LCFI80:
 2695              		.cfi_def_cfa_offset 4
 2696              		.cfi_offset 14, -4
 2697 0002 83B0     		sub	sp, sp, #12
 2698              	.LCFI81:
 2699              		.cfi_def_cfa_offset 16
1187:application-library/nrf24/nrf24.c ****   #define PLOS_CNT_READMASK  0b1111 << 4
1188:application-library/nrf24/nrf24.c ****   #define ARC_CNT_READMASK   0b1111 << 0
1189:application-library/nrf24/nrf24.c ****   uint8_t read_byte;
1190:application-library/nrf24/nrf24.c ****   spi_read_register(R_REGISTER_MASK + OBSERVE_TX, 1, &read_byte);
 2700              		.loc 1 1190 0
 2701 0004 0DF10702 		add	r2, sp, #7
ARM GAS  /tmp/cc0cESOd.s 			page 70


 2702 0008 0121     		movs	r1, #1
 2703 000a 0820     		movs	r0, #8
 2704 000c FFF7FEFF 		bl	spi_read_register
 2705              	.LVL305:
1191:application-library/nrf24/nrf24.c ****   return read_byte;
1192:application-library/nrf24/nrf24.c **** }
 2706              		.loc 1 1192 0
 2707 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 2708 0014 03B0     		add	sp, sp, #12
 2709              	.LCFI82:
 2710              		.cfi_def_cfa_offset 4
 2711              		@ sp needed
 2712 0016 5DF804FB 		ldr	pc, [sp], #4
 2713              		.cfi_endproc
 2714              	.LFE172:
 2716              		.section	.text.nRF24_get_RPD,"ax",%progbits
 2717              		.align	1
 2718              		.global	nRF24_get_RPD
 2719              		.syntax unified
 2720              		.thumb
 2721              		.thumb_func
 2722              		.fpu fpv4-sp-d16
 2724              	nRF24_get_RPD:
 2725              	.LFB173:
1193:application-library/nrf24/nrf24.c **** 
1194:application-library/nrf24/nrf24.c **** /**
1195:application-library/nrf24/nrf24.c ****   * @brief      Read <RPD> register from nRF24.
1196:application-library/nrf24/nrf24.c ****   * @param      None.
1197:application-library/nrf24/nrf24.c ****   * @retval     <RPD> register value.
1198:application-library/nrf24/nrf24.c ****   */
1199:application-library/nrf24/nrf24.c **** uint8_t nRF24_get_RPD() 
1200:application-library/nrf24/nrf24.c **** {
 2726              		.loc 1 1200 0
 2727              		.cfi_startproc
 2728              		@ args = 0, pretend = 0, frame = 8
 2729              		@ frame_needed = 0, uses_anonymous_args = 0
 2730 0000 00B5     		push	{lr}
 2731              	.LCFI83:
 2732              		.cfi_def_cfa_offset 4
 2733              		.cfi_offset 14, -4
 2734 0002 83B0     		sub	sp, sp, #12
 2735              	.LCFI84:
 2736              		.cfi_def_cfa_offset 16
1201:application-library/nrf24/nrf24.c ****   uint8_t read_byte;
1202:application-library/nrf24/nrf24.c ****   spi_read_register(R_REGISTER_MASK + RPD, 1, &read_byte);
 2737              		.loc 1 1202 0
 2738 0004 0DF10702 		add	r2, sp, #7
 2739 0008 0121     		movs	r1, #1
 2740 000a 0920     		movs	r0, #9
 2741 000c FFF7FEFF 		bl	spi_read_register
 2742              	.LVL306:
1203:application-library/nrf24/nrf24.c ****   return read_byte;
1204:application-library/nrf24/nrf24.c **** }
 2743              		.loc 1 1204 0
 2744 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 2745 0014 03B0     		add	sp, sp, #12
 2746              	.LCFI85:
ARM GAS  /tmp/cc0cESOd.s 			page 71


 2747              		.cfi_def_cfa_offset 4
 2748              		@ sp needed
 2749 0016 5DF804FB 		ldr	pc, [sp], #4
 2750              		.cfi_endproc
 2751              	.LFE173:
 2753              		.section	.text.nRF24_set_RX_ADDR_P0,"ax",%progbits
 2754              		.align	1
 2755              		.global	nRF24_set_RX_ADDR_P0
 2756              		.syntax unified
 2757              		.thumb
 2758              		.thumb_func
 2759              		.fpu fpv4-sp-d16
 2761              	nRF24_set_RX_ADDR_P0:
 2762              	.LFB174:
1205:application-library/nrf24/nrf24.c **** 
1206:application-library/nrf24/nrf24.c **** 
1207:application-library/nrf24/nrf24.c **** /**
1208:application-library/nrf24/nrf24.c ****   * @brief  Set RX (receive) address for data pipe 0. Least Significant Byte written first.
1209:application-library/nrf24/nrf24.c ****   * @param  rx_addr_width The width of RX address. Needs to be consistent with SET_AW.
1210:application-library/nrf24/nrf24.c ****   * @param  p_rx_addr_p0 Pointer to an array storing receive address for data pipe 0. 
1211:application-library/nrf24/nrf24.c ****   *           The array pointed should have a length of either 3, 4, or 5 bytes. 
1212:application-library/nrf24/nrf24.c ****   *           The SET_AW register determines the length of the address array. Default length is 5.
1213:application-library/nrf24/nrf24.c ****   * @retval None.
1214:application-library/nrf24/nrf24.c ****   */
1215:application-library/nrf24/nrf24.c **** void nRF24_set_RX_ADDR_P0(uint8_t rx_addr_width, uint8_t* p_rx_addr_p0) 
1216:application-library/nrf24/nrf24.c **** {
 2763              		.loc 1 1216 0
 2764              		.cfi_startproc
 2765              		@ args = 0, pretend = 0, frame = 0
 2766              		@ frame_needed = 0, uses_anonymous_args = 0
 2767              	.LVL307:
 2768 0000 08B5     		push	{r3, lr}
 2769              	.LCFI86:
 2770              		.cfi_def_cfa_offset 8
 2771              		.cfi_offset 3, -8
 2772              		.cfi_offset 14, -4
1217:application-library/nrf24/nrf24.c ****   nRF24_verified_write_register(W_REGISTER_MASK + RX_ADDR_P0, rx_addr_width, p_rx_addr_p0);
 2773              		.loc 1 1217 0
 2774 0002 0A46     		mov	r2, r1
 2775 0004 0146     		mov	r1, r0
 2776              	.LVL308:
 2777 0006 2A20     		movs	r0, #42
 2778              	.LVL309:
 2779 0008 FFF7FEFF 		bl	nRF24_verified_write_register
 2780              	.LVL310:
 2781 000c 08BD     		pop	{r3, pc}
 2782              		.cfi_endproc
 2783              	.LFE174:
 2785              		.section	.text.nRF24_get_RX_ADDR_P0,"ax",%progbits
 2786              		.align	1
 2787              		.global	nRF24_get_RX_ADDR_P0
 2788              		.syntax unified
 2789              		.thumb
 2790              		.thumb_func
 2791              		.fpu fpv4-sp-d16
 2793              	nRF24_get_RX_ADDR_P0:
 2794              	.LFB175:
ARM GAS  /tmp/cc0cESOd.s 			page 72


1218:application-library/nrf24/nrf24.c **** }
1219:application-library/nrf24/nrf24.c **** 
1220:application-library/nrf24/nrf24.c **** /**
1221:application-library/nrf24/nrf24.c ****   * @brief      Read <RX_ADDR_P0> register from nRF24.
1222:application-library/nrf24/nrf24.c ****   * @param[in]  rx_addr_width The width of RX address. Needs to be consistent with SET_AW.
1223:application-library/nrf24/nrf24.c ****   * @param[out] p_read_buffer Pointer to an array that's used to store the read RX address on Pipe 
1224:application-library/nrf24/nrf24.c ****   * @retval     None.
1225:application-library/nrf24/nrf24.c ****   */
1226:application-library/nrf24/nrf24.c **** void nRF24_get_RX_ADDR_P0(uint8_t rx_addr_width, uint8_t* p_read_buffer) 
1227:application-library/nrf24/nrf24.c **** {
 2795              		.loc 1 1227 0
 2796              		.cfi_startproc
 2797              		@ args = 0, pretend = 0, frame = 0
 2798              		@ frame_needed = 0, uses_anonymous_args = 0
 2799              	.LVL311:
 2800 0000 08B5     		push	{r3, lr}
 2801              	.LCFI87:
 2802              		.cfi_def_cfa_offset 8
 2803              		.cfi_offset 3, -8
 2804              		.cfi_offset 14, -4
1228:application-library/nrf24/nrf24.c ****   spi_read_register(R_REGISTER_MASK + RX_ADDR_P0, rx_addr_width, p_read_buffer);
 2805              		.loc 1 1228 0
 2806 0002 0A46     		mov	r2, r1
 2807 0004 0146     		mov	r1, r0
 2808              	.LVL312:
 2809 0006 0A20     		movs	r0, #10
 2810              	.LVL313:
 2811 0008 FFF7FEFF 		bl	spi_read_register
 2812              	.LVL314:
 2813 000c 08BD     		pop	{r3, pc}
 2814              		.cfi_endproc
 2815              	.LFE175:
 2817              		.section	.text.nRF24_set_RX_ADDR_P1,"ax",%progbits
 2818              		.align	1
 2819              		.global	nRF24_set_RX_ADDR_P1
 2820              		.syntax unified
 2821              		.thumb
 2822              		.thumb_func
 2823              		.fpu fpv4-sp-d16
 2825              	nRF24_set_RX_ADDR_P1:
 2826              	.LFB176:
1229:application-library/nrf24/nrf24.c **** }
1230:application-library/nrf24/nrf24.c **** 
1231:application-library/nrf24/nrf24.c **** /**
1232:application-library/nrf24/nrf24.c ****   * @brief  Set RX (receive) address for data pipe 1. Least Significant Byte written first.
1233:application-library/nrf24/nrf24.c ****   * @param  rx_addr_width The width of RX address. Needs to be consistent with SET_AW.
1234:application-library/nrf24/nrf24.c ****   * @param  p_rx_addr_p1 Pointer to an array storing receive address for data pipe 1. 
1235:application-library/nrf24/nrf24.c ****   *           The array pointed should have a length of either 3, 4, or 5 bytes. 
1236:application-library/nrf24/nrf24.c ****   *           The SET_AW register determines the length of the address array. Default length is 5.
1237:application-library/nrf24/nrf24.c ****   * @note   The RX data pipe 0 and pipe 1 and have totally different addresses. 
1238:application-library/nrf24/nrf24.c ****   *           However, for RX pipe 2,3,4,5 the [39:8] addresses byte need to be same as RX pipe 1.
1239:application-library/nrf24/nrf24.c ****   *           Given an example,
1240:application-library/nrf24/nrf24.c ****   *           RX_ADDR_P0 = 0xE7E7E7E7E7
1241:application-library/nrf24/nrf24.c ****   *           RX_ADDR_P1 = 0xC2C2C2C2C2
1242:application-library/nrf24/nrf24.c ****   *           RX_ADDR_P2 = 0x--------C3 = 0xC2C2C2C2C3
1243:application-library/nrf24/nrf24.c ****   *           RX_ADDR_P3 = 0x--------C4 = 0xC2C2C2C2C4
1244:application-library/nrf24/nrf24.c ****   *           RX_ADDR_P4 = 0x--------C5 = 0xC2C2C2C2C5
ARM GAS  /tmp/cc0cESOd.s 			page 73


1245:application-library/nrf24/nrf24.c ****   *           RX_ADDR_P5 = 0x--------C6 = 0xC2C2C2C2C6
1246:application-library/nrf24/nrf24.c ****   * @retval None.
1247:application-library/nrf24/nrf24.c ****   */
1248:application-library/nrf24/nrf24.c **** void nRF24_set_RX_ADDR_P1(uint8_t rx_addr_width, uint8_t* p_rx_addr_p1) 
1249:application-library/nrf24/nrf24.c **** {
 2827              		.loc 1 1249 0
 2828              		.cfi_startproc
 2829              		@ args = 0, pretend = 0, frame = 0
 2830              		@ frame_needed = 0, uses_anonymous_args = 0
 2831              	.LVL315:
 2832 0000 08B5     		push	{r3, lr}
 2833              	.LCFI88:
 2834              		.cfi_def_cfa_offset 8
 2835              		.cfi_offset 3, -8
 2836              		.cfi_offset 14, -4
1250:application-library/nrf24/nrf24.c ****   nRF24_verified_write_register(W_REGISTER_MASK + RX_ADDR_P1, rx_addr_width, p_rx_addr_p1);
 2837              		.loc 1 1250 0
 2838 0002 0A46     		mov	r2, r1
 2839 0004 0146     		mov	r1, r0
 2840              	.LVL316:
 2841 0006 2B20     		movs	r0, #43
 2842              	.LVL317:
 2843 0008 FFF7FEFF 		bl	nRF24_verified_write_register
 2844              	.LVL318:
 2845 000c 08BD     		pop	{r3, pc}
 2846              		.cfi_endproc
 2847              	.LFE176:
 2849              		.section	.text.nRF24_get_RX_ADDR_P1,"ax",%progbits
 2850              		.align	1
 2851              		.global	nRF24_get_RX_ADDR_P1
 2852              		.syntax unified
 2853              		.thumb
 2854              		.thumb_func
 2855              		.fpu fpv4-sp-d16
 2857              	nRF24_get_RX_ADDR_P1:
 2858              	.LFB177:
1251:application-library/nrf24/nrf24.c **** }
1252:application-library/nrf24/nrf24.c **** 
1253:application-library/nrf24/nrf24.c **** 
1254:application-library/nrf24/nrf24.c **** /**
1255:application-library/nrf24/nrf24.c ****   * @brief      Read <RX_ADDR_P1> register from nRF24.
1256:application-library/nrf24/nrf24.c ****   * @param[in]  rx_addr_width The width of RX address. Needs to be consistent with SET_AW.
1257:application-library/nrf24/nrf24.c ****   * @param[out] p_read_buffer Pointer to an array that's used to store the read RX address on Pipe 
1258:application-library/nrf24/nrf24.c ****   * @retval     None.
1259:application-library/nrf24/nrf24.c ****   */
1260:application-library/nrf24/nrf24.c **** void nRF24_get_RX_ADDR_P1(uint8_t rx_addr_width, uint8_t* p_read_buffer) 
1261:application-library/nrf24/nrf24.c **** {
 2859              		.loc 1 1261 0
 2860              		.cfi_startproc
 2861              		@ args = 0, pretend = 0, frame = 0
 2862              		@ frame_needed = 0, uses_anonymous_args = 0
 2863              	.LVL319:
 2864 0000 08B5     		push	{r3, lr}
 2865              	.LCFI89:
 2866              		.cfi_def_cfa_offset 8
 2867              		.cfi_offset 3, -8
 2868              		.cfi_offset 14, -4
ARM GAS  /tmp/cc0cESOd.s 			page 74


1262:application-library/nrf24/nrf24.c ****   spi_read_register(R_REGISTER_MASK + RX_ADDR_P1, rx_addr_width, p_read_buffer);
 2869              		.loc 1 1262 0
 2870 0002 0A46     		mov	r2, r1
 2871 0004 0146     		mov	r1, r0
 2872              	.LVL320:
 2873 0006 0B20     		movs	r0, #11
 2874              	.LVL321:
 2875 0008 FFF7FEFF 		bl	spi_read_register
 2876              	.LVL322:
 2877 000c 08BD     		pop	{r3, pc}
 2878              		.cfi_endproc
 2879              	.LFE177:
 2881              		.section	.text.nRF24_set_RX_ADDR_P2,"ax",%progbits
 2882              		.align	1
 2883              		.global	nRF24_set_RX_ADDR_P2
 2884              		.syntax unified
 2885              		.thumb
 2886              		.thumb_func
 2887              		.fpu fpv4-sp-d16
 2889              	nRF24_set_RX_ADDR_P2:
 2890              	.LFB178:
1263:application-library/nrf24/nrf24.c **** }
1264:application-library/nrf24/nrf24.c **** 
1265:application-library/nrf24/nrf24.c **** /**
1266:application-library/nrf24/nrf24.c ****   * @brief  Set RX (receive) address for data pipe 2. 
1267:application-library/nrf24/nrf24.c ****   * @param  rx_addr_p2 Byte storing receive address for data pipe 2. 
1268:application-library/nrf24/nrf24.c ****   *           rx_addr_p2 overwrite the Least Significant Byte on RX_ADDR_P1
1269:application-library/nrf24/nrf24.c ****   *           Given an example,
1270:application-library/nrf24/nrf24.c ****   *           RX_ADDR_P1 = 0xC2C2C2C2C2
1271:application-library/nrf24/nrf24.c ****   *           RX_ADDR_P2 = 0x--------C3 = 0xC2C2C2C2C3
1272:application-library/nrf24/nrf24.c ****   * @retval None.
1273:application-library/nrf24/nrf24.c ****   */
1274:application-library/nrf24/nrf24.c **** void nRF24_set_RX_ADDR_P2(uint8_t rx_addr_p2) 
1275:application-library/nrf24/nrf24.c **** {
 2891              		.loc 1 1275 0
 2892              		.cfi_startproc
 2893              		@ args = 0, pretend = 0, frame = 8
 2894              		@ frame_needed = 0, uses_anonymous_args = 0
 2895              	.LVL323:
 2896 0000 00B5     		push	{lr}
 2897              	.LCFI90:
 2898              		.cfi_def_cfa_offset 4
 2899              		.cfi_offset 14, -4
 2900 0002 83B0     		sub	sp, sp, #12
 2901              	.LCFI91:
 2902              		.cfi_def_cfa_offset 16
1276:application-library/nrf24/nrf24.c ****   uint8_t writing_byte = 0x00;
1277:application-library/nrf24/nrf24.c ****   writing_byte |= rx_addr_p2;
 2903              		.loc 1 1277 0
 2904 0004 02AA     		add	r2, sp, #8
 2905 0006 02F8010D 		strb	r0, [r2, #-1]!
1278:application-library/nrf24/nrf24.c ****   nRF24_verified_write_register(W_REGISTER_MASK + RX_ADDR_P2, 1, &writing_byte);
 2906              		.loc 1 1278 0
 2907 000a 0121     		movs	r1, #1
 2908 000c 2C20     		movs	r0, #44
 2909              	.LVL324:
 2910 000e FFF7FEFF 		bl	nRF24_verified_write_register
ARM GAS  /tmp/cc0cESOd.s 			page 75


 2911              	.LVL325:
1279:application-library/nrf24/nrf24.c **** }
 2912              		.loc 1 1279 0
 2913 0012 03B0     		add	sp, sp, #12
 2914              	.LCFI92:
 2915              		.cfi_def_cfa_offset 4
 2916              		@ sp needed
 2917 0014 5DF804FB 		ldr	pc, [sp], #4
 2918              		.cfi_endproc
 2919              	.LFE178:
 2921              		.section	.text.nRF24_get_RX_ADDR_P2,"ax",%progbits
 2922              		.align	1
 2923              		.global	nRF24_get_RX_ADDR_P2
 2924              		.syntax unified
 2925              		.thumb
 2926              		.thumb_func
 2927              		.fpu fpv4-sp-d16
 2929              	nRF24_get_RX_ADDR_P2:
 2930              	.LFB179:
1280:application-library/nrf24/nrf24.c **** 
1281:application-library/nrf24/nrf24.c **** 
1282:application-library/nrf24/nrf24.c **** 
1283:application-library/nrf24/nrf24.c **** /**
1284:application-library/nrf24/nrf24.c ****   * @brief      Read <RX_ADDR_P2> register from nRF24.
1285:application-library/nrf24/nrf24.c ****   * @param[in]  rx_addr_width The width of RX address. Needs to be consistent with SET_AW.
1286:application-library/nrf24/nrf24.c ****   * @param[out] p_read_buffer Pointer to an array that's used to store the read RX address on Pipe 
1287:application-library/nrf24/nrf24.c ****   * @retval     None.
1288:application-library/nrf24/nrf24.c ****   */
1289:application-library/nrf24/nrf24.c **** void nRF24_get_RX_ADDR_P2(uint8_t rx_addr_width, uint8_t* p_read_buffer) 
1290:application-library/nrf24/nrf24.c **** {
 2931              		.loc 1 1290 0
 2932              		.cfi_startproc
 2933              		@ args = 0, pretend = 0, frame = 0
 2934              		@ frame_needed = 0, uses_anonymous_args = 0
 2935              	.LVL326:
 2936 0000 08B5     		push	{r3, lr}
 2937              	.LCFI93:
 2938              		.cfi_def_cfa_offset 8
 2939              		.cfi_offset 3, -8
 2940              		.cfi_offset 14, -4
1291:application-library/nrf24/nrf24.c ****   spi_read_register(R_REGISTER_MASK + RX_ADDR_P2, rx_addr_width, p_read_buffer);
 2941              		.loc 1 1291 0
 2942 0002 0A46     		mov	r2, r1
 2943 0004 0146     		mov	r1, r0
 2944              	.LVL327:
 2945 0006 0C20     		movs	r0, #12
 2946              	.LVL328:
 2947 0008 FFF7FEFF 		bl	spi_read_register
 2948              	.LVL329:
 2949 000c 08BD     		pop	{r3, pc}
 2950              		.cfi_endproc
 2951              	.LFE179:
 2953              		.section	.text.nRF24_set_RX_ADDR_P3,"ax",%progbits
 2954              		.align	1
 2955              		.global	nRF24_set_RX_ADDR_P3
 2956              		.syntax unified
 2957              		.thumb
ARM GAS  /tmp/cc0cESOd.s 			page 76


 2958              		.thumb_func
 2959              		.fpu fpv4-sp-d16
 2961              	nRF24_set_RX_ADDR_P3:
 2962              	.LFB180:
1292:application-library/nrf24/nrf24.c **** }
1293:application-library/nrf24/nrf24.c **** 
1294:application-library/nrf24/nrf24.c **** 
1295:application-library/nrf24/nrf24.c **** /**
1296:application-library/nrf24/nrf24.c ****   * @brief  Set RX (receive) address for data pipe 3. 
1297:application-library/nrf24/nrf24.c ****   * @param  rx_addr_p3 Byte storing receive address for data pipe 3. 
1298:application-library/nrf24/nrf24.c ****   *           rx_addr_p3 overwrite the Least Significant Byte on RX_ADDR_P1
1299:application-library/nrf24/nrf24.c ****   *           Given an example,
1300:application-library/nrf24/nrf24.c ****   *           RX_ADDR_P1 = 0xC2C2C2C2C2
1301:application-library/nrf24/nrf24.c ****   *           RX_ADDR_P3 = 0x--------C4 = 0xC2C2C2C2C4
1302:application-library/nrf24/nrf24.c ****   * @retval None.
1303:application-library/nrf24/nrf24.c ****   */
1304:application-library/nrf24/nrf24.c **** void nRF24_set_RX_ADDR_P3(uint8_t rx_addr_p3) 
1305:application-library/nrf24/nrf24.c **** {
 2963              		.loc 1 1305 0
 2964              		.cfi_startproc
 2965              		@ args = 0, pretend = 0, frame = 8
 2966              		@ frame_needed = 0, uses_anonymous_args = 0
 2967              	.LVL330:
 2968 0000 00B5     		push	{lr}
 2969              	.LCFI94:
 2970              		.cfi_def_cfa_offset 4
 2971              		.cfi_offset 14, -4
 2972 0002 83B0     		sub	sp, sp, #12
 2973              	.LCFI95:
 2974              		.cfi_def_cfa_offset 16
1306:application-library/nrf24/nrf24.c ****   uint8_t writing_byte = 0x00;
1307:application-library/nrf24/nrf24.c ****   writing_byte |= rx_addr_p3;
 2975              		.loc 1 1307 0
 2976 0004 02AA     		add	r2, sp, #8
 2977 0006 02F8010D 		strb	r0, [r2, #-1]!
1308:application-library/nrf24/nrf24.c ****   nRF24_verified_write_register(W_REGISTER_MASK + RX_ADDR_P3, 1, &writing_byte);
 2978              		.loc 1 1308 0
 2979 000a 0121     		movs	r1, #1
 2980 000c 2D20     		movs	r0, #45
 2981              	.LVL331:
 2982 000e FFF7FEFF 		bl	nRF24_verified_write_register
 2983              	.LVL332:
1309:application-library/nrf24/nrf24.c **** }
 2984              		.loc 1 1309 0
 2985 0012 03B0     		add	sp, sp, #12
 2986              	.LCFI96:
 2987              		.cfi_def_cfa_offset 4
 2988              		@ sp needed
 2989 0014 5DF804FB 		ldr	pc, [sp], #4
 2990              		.cfi_endproc
 2991              	.LFE180:
 2993              		.section	.text.nRF24_get_RX_ADDR_P3,"ax",%progbits
 2994              		.align	1
 2995              		.global	nRF24_get_RX_ADDR_P3
 2996              		.syntax unified
 2997              		.thumb
 2998              		.thumb_func
ARM GAS  /tmp/cc0cESOd.s 			page 77


 2999              		.fpu fpv4-sp-d16
 3001              	nRF24_get_RX_ADDR_P3:
 3002              	.LFB181:
1310:application-library/nrf24/nrf24.c **** 
1311:application-library/nrf24/nrf24.c **** /**
1312:application-library/nrf24/nrf24.c ****   * @brief      Read <RX_ADDR_P3> register from nRF24.
1313:application-library/nrf24/nrf24.c ****   * @param[in]  rx_addr_width The width of RX address. Needs to be consistent with SET_AW.
1314:application-library/nrf24/nrf24.c ****   * @param[out] p_read_buffer Pointer to an array that's used to store the read RX address on Pipe 
1315:application-library/nrf24/nrf24.c ****   * @retval     None.
1316:application-library/nrf24/nrf24.c ****   */
1317:application-library/nrf24/nrf24.c **** void nRF24_get_RX_ADDR_P3(uint8_t rx_addr_width, uint8_t* p_read_buffer) 
1318:application-library/nrf24/nrf24.c **** {
 3003              		.loc 1 1318 0
 3004              		.cfi_startproc
 3005              		@ args = 0, pretend = 0, frame = 0
 3006              		@ frame_needed = 0, uses_anonymous_args = 0
 3007              	.LVL333:
 3008 0000 08B5     		push	{r3, lr}
 3009              	.LCFI97:
 3010              		.cfi_def_cfa_offset 8
 3011              		.cfi_offset 3, -8
 3012              		.cfi_offset 14, -4
1319:application-library/nrf24/nrf24.c ****   spi_read_register(R_REGISTER_MASK + RX_ADDR_P3, rx_addr_width, p_read_buffer);
 3013              		.loc 1 1319 0
 3014 0002 0A46     		mov	r2, r1
 3015 0004 0146     		mov	r1, r0
 3016              	.LVL334:
 3017 0006 0D20     		movs	r0, #13
 3018              	.LVL335:
 3019 0008 FFF7FEFF 		bl	spi_read_register
 3020              	.LVL336:
 3021 000c 08BD     		pop	{r3, pc}
 3022              		.cfi_endproc
 3023              	.LFE181:
 3025              		.section	.text.nRF24_set_RX_ADDR_P4,"ax",%progbits
 3026              		.align	1
 3027              		.global	nRF24_set_RX_ADDR_P4
 3028              		.syntax unified
 3029              		.thumb
 3030              		.thumb_func
 3031              		.fpu fpv4-sp-d16
 3033              	nRF24_set_RX_ADDR_P4:
 3034              	.LFB182:
1320:application-library/nrf24/nrf24.c **** }
1321:application-library/nrf24/nrf24.c **** 
1322:application-library/nrf24/nrf24.c **** /**
1323:application-library/nrf24/nrf24.c ****   * @brief  Set RX (receive) address for data pipe 4.
1324:application-library/nrf24/nrf24.c ****   * @param  rx_addr_p4 Byte storing receive address for data pipe 4. 
1325:application-library/nrf24/nrf24.c ****   *           rx_addr_p4 overwrite the Least Significant Byte on RX_ADDR_P1
1326:application-library/nrf24/nrf24.c ****   *           Given an example,
1327:application-library/nrf24/nrf24.c ****   *           RX_ADDR_P1 = 0xC2C2C2C2C2
1328:application-library/nrf24/nrf24.c ****   *           RX_ADDR_P4 = 0x--------C5 = 0xC2C2C2C2C5
1329:application-library/nrf24/nrf24.c ****   * @retval None.
1330:application-library/nrf24/nrf24.c ****   */
1331:application-library/nrf24/nrf24.c **** void nRF24_set_RX_ADDR_P4(uint8_t rx_addr_p4) 
1332:application-library/nrf24/nrf24.c **** {
 3035              		.loc 1 1332 0
ARM GAS  /tmp/cc0cESOd.s 			page 78


 3036              		.cfi_startproc
 3037              		@ args = 0, pretend = 0, frame = 8
 3038              		@ frame_needed = 0, uses_anonymous_args = 0
 3039              	.LVL337:
 3040 0000 00B5     		push	{lr}
 3041              	.LCFI98:
 3042              		.cfi_def_cfa_offset 4
 3043              		.cfi_offset 14, -4
 3044 0002 83B0     		sub	sp, sp, #12
 3045              	.LCFI99:
 3046              		.cfi_def_cfa_offset 16
1333:application-library/nrf24/nrf24.c ****   uint8_t writing_byte = 0x00;
1334:application-library/nrf24/nrf24.c ****   writing_byte |= rx_addr_p4;
 3047              		.loc 1 1334 0
 3048 0004 02AA     		add	r2, sp, #8
 3049 0006 02F8010D 		strb	r0, [r2, #-1]!
1335:application-library/nrf24/nrf24.c ****   nRF24_verified_write_register(W_REGISTER_MASK + RX_ADDR_P4, 1, &writing_byte);
 3050              		.loc 1 1335 0
 3051 000a 0121     		movs	r1, #1
 3052 000c 2E20     		movs	r0, #46
 3053              	.LVL338:
 3054 000e FFF7FEFF 		bl	nRF24_verified_write_register
 3055              	.LVL339:
1336:application-library/nrf24/nrf24.c **** }
 3056              		.loc 1 1336 0
 3057 0012 03B0     		add	sp, sp, #12
 3058              	.LCFI100:
 3059              		.cfi_def_cfa_offset 4
 3060              		@ sp needed
 3061 0014 5DF804FB 		ldr	pc, [sp], #4
 3062              		.cfi_endproc
 3063              	.LFE182:
 3065              		.section	.text.nRF24_get_RX_ADDR_P4,"ax",%progbits
 3066              		.align	1
 3067              		.global	nRF24_get_RX_ADDR_P4
 3068              		.syntax unified
 3069              		.thumb
 3070              		.thumb_func
 3071              		.fpu fpv4-sp-d16
 3073              	nRF24_get_RX_ADDR_P4:
 3074              	.LFB183:
1337:application-library/nrf24/nrf24.c **** 
1338:application-library/nrf24/nrf24.c **** /**
1339:application-library/nrf24/nrf24.c ****   * @brief      Read <RX_ADDR_P4> register from nRF24.
1340:application-library/nrf24/nrf24.c ****   * @param[in]  rx_addr_width The width of RX address. Needs to be consistent with SET_AW.
1341:application-library/nrf24/nrf24.c ****   * @param[out] p_read_buffer Pointer to an array that's used to store the read RX address on Pipe 
1342:application-library/nrf24/nrf24.c ****   * @retval     None.
1343:application-library/nrf24/nrf24.c ****   */
1344:application-library/nrf24/nrf24.c **** void nRF24_get_RX_ADDR_P4(uint8_t rx_addr_width, uint8_t* p_read_buffer) 
1345:application-library/nrf24/nrf24.c **** {
 3075              		.loc 1 1345 0
 3076              		.cfi_startproc
 3077              		@ args = 0, pretend = 0, frame = 0
 3078              		@ frame_needed = 0, uses_anonymous_args = 0
 3079              	.LVL340:
 3080 0000 08B5     		push	{r3, lr}
 3081              	.LCFI101:
ARM GAS  /tmp/cc0cESOd.s 			page 79


 3082              		.cfi_def_cfa_offset 8
 3083              		.cfi_offset 3, -8
 3084              		.cfi_offset 14, -4
1346:application-library/nrf24/nrf24.c ****   spi_read_register(R_REGISTER_MASK + RX_ADDR_P4, rx_addr_width, p_read_buffer);
 3085              		.loc 1 1346 0
 3086 0002 0A46     		mov	r2, r1
 3087 0004 0146     		mov	r1, r0
 3088              	.LVL341:
 3089 0006 0E20     		movs	r0, #14
 3090              	.LVL342:
 3091 0008 FFF7FEFF 		bl	spi_read_register
 3092              	.LVL343:
 3093 000c 08BD     		pop	{r3, pc}
 3094              		.cfi_endproc
 3095              	.LFE183:
 3097              		.section	.text.nRF24_set_RX_ADDR_P5,"ax",%progbits
 3098              		.align	1
 3099              		.global	nRF24_set_RX_ADDR_P5
 3100              		.syntax unified
 3101              		.thumb
 3102              		.thumb_func
 3103              		.fpu fpv4-sp-d16
 3105              	nRF24_set_RX_ADDR_P5:
 3106              	.LFB184:
1347:application-library/nrf24/nrf24.c **** }
1348:application-library/nrf24/nrf24.c **** 
1349:application-library/nrf24/nrf24.c **** /**
1350:application-library/nrf24/nrf24.c ****   * @brief  Set RX (receive) address for data pipe 5.
1351:application-library/nrf24/nrf24.c ****   * @param  rx_addr_p5 Byte storing receive address for data pipe 5. 
1352:application-library/nrf24/nrf24.c ****   *           rx_addr_p5 overwrite the Least Significant Byte on RX_ADDR_P1
1353:application-library/nrf24/nrf24.c ****   *           Given an example,
1354:application-library/nrf24/nrf24.c ****   *           RX_ADDR_P1 = 0xC2C2C2C2C2
1355:application-library/nrf24/nrf24.c ****   *           RX_ADDR_P5 = 0x--------C6 = 0xC2C2C2C2C6
1356:application-library/nrf24/nrf24.c ****   * @retval None.
1357:application-library/nrf24/nrf24.c ****   */
1358:application-library/nrf24/nrf24.c **** void nRF24_set_RX_ADDR_P5(uint8_t rx_addr_p5) 
1359:application-library/nrf24/nrf24.c **** {
 3107              		.loc 1 1359 0
 3108              		.cfi_startproc
 3109              		@ args = 0, pretend = 0, frame = 8
 3110              		@ frame_needed = 0, uses_anonymous_args = 0
 3111              	.LVL344:
 3112 0000 00B5     		push	{lr}
 3113              	.LCFI102:
 3114              		.cfi_def_cfa_offset 4
 3115              		.cfi_offset 14, -4
 3116 0002 83B0     		sub	sp, sp, #12
 3117              	.LCFI103:
 3118              		.cfi_def_cfa_offset 16
1360:application-library/nrf24/nrf24.c ****   uint8_t writing_byte = 0x00;
1361:application-library/nrf24/nrf24.c ****   writing_byte |= rx_addr_p5;
 3119              		.loc 1 1361 0
 3120 0004 02AA     		add	r2, sp, #8
 3121 0006 02F8010D 		strb	r0, [r2, #-1]!
1362:application-library/nrf24/nrf24.c ****   nRF24_verified_write_register(W_REGISTER_MASK + RX_ADDR_P5, 1, &writing_byte);
 3122              		.loc 1 1362 0
 3123 000a 0121     		movs	r1, #1
ARM GAS  /tmp/cc0cESOd.s 			page 80


 3124 000c 2F20     		movs	r0, #47
 3125              	.LVL345:
 3126 000e FFF7FEFF 		bl	nRF24_verified_write_register
 3127              	.LVL346:
1363:application-library/nrf24/nrf24.c **** }
 3128              		.loc 1 1363 0
 3129 0012 03B0     		add	sp, sp, #12
 3130              	.LCFI104:
 3131              		.cfi_def_cfa_offset 4
 3132              		@ sp needed
 3133 0014 5DF804FB 		ldr	pc, [sp], #4
 3134              		.cfi_endproc
 3135              	.LFE184:
 3137              		.section	.text.nRF24_get_RX_ADDR_P5,"ax",%progbits
 3138              		.align	1
 3139              		.global	nRF24_get_RX_ADDR_P5
 3140              		.syntax unified
 3141              		.thumb
 3142              		.thumb_func
 3143              		.fpu fpv4-sp-d16
 3145              	nRF24_get_RX_ADDR_P5:
 3146              	.LFB185:
1364:application-library/nrf24/nrf24.c **** 
1365:application-library/nrf24/nrf24.c **** 
1366:application-library/nrf24/nrf24.c **** /**
1367:application-library/nrf24/nrf24.c ****   * @brief      Read <RX_ADDR_P5> register from nRF24.
1368:application-library/nrf24/nrf24.c ****   * @param[in]  rx_addr_width The width of RX address. Needs to be consistent with SET_AW.
1369:application-library/nrf24/nrf24.c ****   * @param[out] p_read_buffer Pointer to an array that's used to store the read RX address on Pipe 
1370:application-library/nrf24/nrf24.c ****   * @retval     None.
1371:application-library/nrf24/nrf24.c ****   */
1372:application-library/nrf24/nrf24.c **** void nRF24_get_RX_ADDR_P5(uint8_t rx_addr_width, uint8_t* p_read_buffer) 
1373:application-library/nrf24/nrf24.c **** {
 3147              		.loc 1 1373 0
 3148              		.cfi_startproc
 3149              		@ args = 0, pretend = 0, frame = 0
 3150              		@ frame_needed = 0, uses_anonymous_args = 0
 3151              	.LVL347:
 3152 0000 08B5     		push	{r3, lr}
 3153              	.LCFI105:
 3154              		.cfi_def_cfa_offset 8
 3155              		.cfi_offset 3, -8
 3156              		.cfi_offset 14, -4
1374:application-library/nrf24/nrf24.c ****   spi_read_register(R_REGISTER_MASK + RX_ADDR_P5, rx_addr_width, p_read_buffer);
 3157              		.loc 1 1374 0
 3158 0002 0A46     		mov	r2, r1
 3159 0004 0146     		mov	r1, r0
 3160              	.LVL348:
 3161 0006 0F20     		movs	r0, #15
 3162              	.LVL349:
 3163 0008 FFF7FEFF 		bl	spi_read_register
 3164              	.LVL350:
 3165 000c 08BD     		pop	{r3, pc}
 3166              		.cfi_endproc
 3167              	.LFE185:
 3169              		.section	.text.nRF24_set_TX_ADDR,"ax",%progbits
 3170              		.align	1
 3171              		.global	nRF24_set_TX_ADDR
ARM GAS  /tmp/cc0cESOd.s 			page 81


 3172              		.syntax unified
 3173              		.thumb
 3174              		.thumb_func
 3175              		.fpu fpv4-sp-d16
 3177              	nRF24_set_TX_ADDR:
 3178              	.LFB186:
1375:application-library/nrf24/nrf24.c **** }
1376:application-library/nrf24/nrf24.c **** 
1377:application-library/nrf24/nrf24.c **** /**
1378:application-library/nrf24/nrf24.c ****   * @brief  Set TX (transmit) address. Least Significant Byte written first.
1379:application-library/nrf24/nrf24.c ****   * @param  tx_addr_width The width of TX address. Needs to be consistent with SET_AW.
1380:application-library/nrf24/nrf24.c ****   * @param  p_tx_addr Pointer to an array storing the transmit address.
1381:application-library/nrf24/nrf24.c ****   * @retval None.
1382:application-library/nrf24/nrf24.c ****   */
1383:application-library/nrf24/nrf24.c **** void nRF24_set_TX_ADDR(uint8_t tx_addr_width, uint8_t* p_tx_addr) 
1384:application-library/nrf24/nrf24.c **** {
 3179              		.loc 1 1384 0
 3180              		.cfi_startproc
 3181              		@ args = 0, pretend = 0, frame = 0
 3182              		@ frame_needed = 0, uses_anonymous_args = 0
 3183              	.LVL351:
 3184 0000 08B5     		push	{r3, lr}
 3185              	.LCFI106:
 3186              		.cfi_def_cfa_offset 8
 3187              		.cfi_offset 3, -8
 3188              		.cfi_offset 14, -4
1385:application-library/nrf24/nrf24.c ****   nRF24_verified_write_register(W_REGISTER_MASK + TX_ADDR, tx_addr_width, p_tx_addr);
 3189              		.loc 1 1385 0
 3190 0002 0A46     		mov	r2, r1
 3191 0004 0146     		mov	r1, r0
 3192              	.LVL352:
 3193 0006 3020     		movs	r0, #48
 3194              	.LVL353:
 3195 0008 FFF7FEFF 		bl	nRF24_verified_write_register
 3196              	.LVL354:
 3197 000c 08BD     		pop	{r3, pc}
 3198              		.cfi_endproc
 3199              	.LFE186:
 3201              		.section	.text.nRF24_config_normal_tx_mode,"ax",%progbits
 3202              		.align	1
 3203              		.global	nRF24_config_normal_tx_mode
 3204              		.syntax unified
 3205              		.thumb
 3206              		.thumb_func
 3207              		.fpu fpv4-sp-d16
 3209              	nRF24_config_normal_tx_mode:
 3210              	.LFB150:
 666:application-library/nrf24/nrf24.c ****     nRF24_CE_0();
 3211              		.loc 1 666 0
 3212              		.cfi_startproc
 3213              		@ args = 0, pretend = 0, frame = 8
 3214              		@ frame_needed = 0, uses_anonymous_args = 0
 3215 0000 10B5     		push	{r4, lr}
 3216              	.LCFI107:
 3217              		.cfi_def_cfa_offset 8
 3218              		.cfi_offset 4, -8
 3219              		.cfi_offset 14, -4
ARM GAS  /tmp/cc0cESOd.s 			page 82


 3220 0002 86B0     		sub	sp, sp, #24
 3221              	.LCFI108:
 3222              		.cfi_def_cfa_offset 32
 667:application-library/nrf24/nrf24.c **** 
 3223              		.loc 1 667 0
 3224 0004 FFF7FEFF 		bl	nRF24_CE_0
 3225              	.LVL355:
 670:application-library/nrf24/nrf24.c ****  
 3226              		.loc 1 670 0
 3227 0008 0320     		movs	r0, #3
 3228 000a FFF7FEFF 		bl	nRF24_set_SETUP_AW
 3229              	.LVL356:
 673:application-library/nrf24/nrf24.c ****     nRF24_set_TX_ADDR(5, TX_ADDRESS); 
 3230              		.loc 1 673 0
 3231 000e 1B4B     		ldr	r3, .L173
 3232 0010 93E80300 		ldm	r3, {r0, r1}
 3233 0014 0490     		str	r0, [sp, #16]
 3234 0016 8DF81410 		strb	r1, [sp, #20]
 674:application-library/nrf24/nrf24.c **** 
 3235              		.loc 1 674 0
 3236 001a 04A9     		add	r1, sp, #16
 3237 001c 0520     		movs	r0, #5
 3238 001e FFF7FEFF 		bl	nRF24_set_TX_ADDR
 3239              	.LVL357:
 677:application-library/nrf24/nrf24.c **** 
 3240              		.loc 1 677 0
 3241 0022 0024     		movs	r4, #0
 3242 0024 0194     		str	r4, [sp, #4]
 3243 0026 0094     		str	r4, [sp]
 3244 0028 2346     		mov	r3, r4
 3245 002a 2246     		mov	r2, r4
 3246 002c 2146     		mov	r1, r4
 3247 002e 2046     		mov	r0, r4
 3248 0030 FFF7FEFF 		bl	nRF24_set_EN_AA
 3249              	.LVL358:
 680:application-library/nrf24/nrf24.c **** 
 3250              		.loc 1 680 0
 3251 0034 0194     		str	r4, [sp, #4]
 3252 0036 0094     		str	r4, [sp]
 3253 0038 2346     		mov	r3, r4
 3254 003a 2246     		mov	r2, r4
 3255 003c 2146     		mov	r1, r4
 3256 003e 2046     		mov	r0, r4
 3257 0040 FFF7FEFF 		bl	nRF24_set_EN_RXADDR
 3258              	.LVL359:
 683:application-library/nrf24/nrf24.c **** 
 3259              		.loc 1 683 0
 3260 0044 2146     		mov	r1, r4
 3261 0046 2046     		mov	r0, r4
 3262 0048 FFF7FEFF 		bl	nRF24_set_SETUP_RETR
 3263              	.LVL360:
 686:application-library/nrf24/nrf24.c **** 
 3264              		.loc 1 686 0
 3265 004c 2820     		movs	r0, #40
 3266 004e FFF7FEFF 		bl	nRF24_set_RF_CH
 3267              	.LVL361:
 689:application-library/nrf24/nrf24.c ****   
ARM GAS  /tmp/cc0cESOd.s 			page 83


 3268              		.loc 1 689 0
 3269 0052 0623     		movs	r3, #6
 3270 0054 0093     		str	r3, [sp]
 3271 0056 0123     		movs	r3, #1
 3272 0058 2246     		mov	r2, r4
 3273 005a 2146     		mov	r1, r4
 3274 005c 2046     		mov	r0, r4
 3275 005e FFF7FEFF 		bl	nRF24_set_RF_SETUP
 3276              	.LVL362:
 692:application-library/nrf24/nrf24.c **** 
 3277              		.loc 1 692 0
 3278 0062 0294     		str	r4, [sp, #8]
 3279 0064 0223     		movs	r3, #2
 3280 0066 0193     		str	r3, [sp, #4]
 3281 0068 0423     		movs	r3, #4
 3282 006a 0093     		str	r3, [sp]
 3283 006c 0823     		movs	r3, #8
 3284 006e 2246     		mov	r2, r4
 3285 0070 2146     		mov	r1, r4
 3286 0072 2046     		mov	r0, r4
 3287 0074 FFF7FEFF 		bl	nRF24_set_CONFIG
 3288              	.LVL363:
 696:application-library/nrf24/nrf24.c **** 
 3289              		.loc 1 696 0
 3290 0078 06B0     		add	sp, sp, #24
 3291              	.LCFI109:
 3292              		.cfi_def_cfa_offset 8
 3293              		@ sp needed
 3294 007a 10BD     		pop	{r4, pc}
 3295              	.L174:
 3296              		.align	2
 3297              	.L173:
 3298 007c 04000000 		.word	.LANCHOR0+4
 3299              		.cfi_endproc
 3300              	.LFE150:
 3302              		.section	.text.nRF24_config_enhanced_shockburst_tx_mode,"ax",%progbits
 3303              		.align	1
 3304              		.global	nRF24_config_enhanced_shockburst_tx_mode
 3305              		.syntax unified
 3306              		.thumb
 3307              		.thumb_func
 3308              		.fpu fpv4-sp-d16
 3310              	nRF24_config_enhanced_shockburst_tx_mode:
 3311              	.LFB151:
 711:application-library/nrf24/nrf24.c ****     nRF24_CE_0();
 3312              		.loc 1 711 0
 3313              		.cfi_startproc
 3314              		@ args = 0, pretend = 0, frame = 16
 3315              		@ frame_needed = 0, uses_anonymous_args = 0
 3316 0000 30B5     		push	{r4, r5, lr}
 3317              	.LCFI110:
 3318              		.cfi_def_cfa_offset 12
 3319              		.cfi_offset 4, -12
 3320              		.cfi_offset 5, -8
 3321              		.cfi_offset 14, -4
 3322 0002 89B0     		sub	sp, sp, #36
 3323              	.LCFI111:
ARM GAS  /tmp/cc0cESOd.s 			page 84


 3324              		.cfi_def_cfa_offset 48
 712:application-library/nrf24/nrf24.c ****     // nRF24_clear_STATUS(RX_DR_MASK1, TX_DS_MASK1, MAX_RT_MASK1);
 3325              		.loc 1 712 0
 3326 0004 FFF7FEFF 		bl	nRF24_CE_0
 3327              	.LVL364:
 716:application-library/nrf24/nrf24.c **** 
 3328              		.loc 1 716 0
 3329 0008 0320     		movs	r0, #3
 3330 000a FFF7FEFF 		bl	nRF24_set_SETUP_AW
 3331              	.LVL365:
 718:application-library/nrf24/nrf24.c ****     nRF24_set_TX_ADDR(5, TX_ADDRESS);
 3332              		.loc 1 718 0
 3333 000e 1F4B     		ldr	r3, .L177
 3334 0010 93E80300 		ldm	r3, {r0, r1}
 3335 0014 0690     		str	r0, [sp, #24]
 3336 0016 8DF81C10 		strb	r1, [sp, #28]
 719:application-library/nrf24/nrf24.c **** 
 3337              		.loc 1 719 0
 3338 001a 06A9     		add	r1, sp, #24
 3339 001c 0520     		movs	r0, #5
 3340 001e FFF7FEFF 		bl	nRF24_set_TX_ADDR
 3341              	.LVL366:
 722:application-library/nrf24/nrf24.c **** 
 3342              		.loc 1 722 0
 3343 0022 06A9     		add	r1, sp, #24
 3344 0024 0520     		movs	r0, #5
 3345 0026 FFF7FEFF 		bl	nRF24_set_RX_ADDR_P0
 3346              	.LVL367:
 724:application-library/nrf24/nrf24.c ****     nRF24_set_EN_RXADDR(ERX_P5_MASK0, ERX_P4_MASK0, ERX_P3_MASK0, ERX_P2_MASK0, ERX_P1_MASK0, ERX_P
 3347              		.loc 1 724 0
 3348 002a 0125     		movs	r5, #1
 3349 002c 0195     		str	r5, [sp, #4]
 3350 002e 0024     		movs	r4, #0
 3351 0030 0094     		str	r4, [sp]
 3352 0032 2346     		mov	r3, r4
 3353 0034 2246     		mov	r2, r4
 3354 0036 2146     		mov	r1, r4
 3355 0038 2046     		mov	r0, r4
 3356 003a FFF7FEFF 		bl	nRF24_set_EN_AA
 3357              	.LVL368:
 725:application-library/nrf24/nrf24.c ****     nRF24_set_SETUP_RETR(ARD_MASKDEFAULT, ARC_MASK10);
 3358              		.loc 1 725 0
 3359 003e 0195     		str	r5, [sp, #4]
 3360 0040 0094     		str	r4, [sp]
 3361 0042 2346     		mov	r3, r4
 3362 0044 2246     		mov	r2, r4
 3363 0046 2146     		mov	r1, r4
 3364 0048 2046     		mov	r0, r4
 3365 004a FFF7FEFF 		bl	nRF24_set_EN_RXADDR
 3366              	.LVL369:
 726:application-library/nrf24/nrf24.c ****     nRF24_set_RF_CH(40);
 3367              		.loc 1 726 0
 3368 004e 0A21     		movs	r1, #10
 3369 0050 2046     		mov	r0, r4
 3370 0052 FFF7FEFF 		bl	nRF24_set_SETUP_RETR
 3371              	.LVL370:
 727:application-library/nrf24/nrf24.c ****     uint8_t writing_byte = 0x07;
ARM GAS  /tmp/cc0cESOd.s 			page 85


 3372              		.loc 1 727 0
 3373 0056 2820     		movs	r0, #40
 3374 0058 FFF7FEFF 		bl	nRF24_set_RF_CH
 3375              	.LVL371:
 728:application-library/nrf24/nrf24.c ****     nRF24_verified_write_register(W_REGISTER_MASK + RF_SETUP, 1, &writing_byte);
 3376              		.loc 1 728 0
 3377 005c 08AA     		add	r2, sp, #32
 3378 005e 0723     		movs	r3, #7
 3379 0060 02F8093D 		strb	r3, [r2, #-9]!
 729:application-library/nrf24/nrf24.c ****     // nRF24_set_RF_SETUP(CONT_WAVE_MASKDEFAULT, RF_DR_LOW_MASKDEFAULT, PLL_LOCK_MASKDEFAULT, RF_DR
 3380              		.loc 1 729 0
 3381 0064 2946     		mov	r1, r5
 3382 0066 2620     		movs	r0, #38
 3383 0068 FFF7FEFF 		bl	nRF24_verified_write_register
 3384              	.LVL372:
 731:application-library/nrf24/nrf24.c ****     SPI_DELAY(10);
 3385              		.loc 1 731 0
 3386 006c 0294     		str	r4, [sp, #8]
 3387 006e 0223     		movs	r3, #2
 3388 0070 0193     		str	r3, [sp, #4]
 3389 0072 0423     		movs	r3, #4
 3390 0074 0093     		str	r3, [sp]
 3391 0076 0823     		movs	r3, #8
 3392 0078 2246     		mov	r2, r4
 3393 007a 2146     		mov	r1, r4
 3394 007c 2046     		mov	r0, r4
 3395 007e FFF7FEFF 		bl	nRF24_set_CONFIG
 3396              	.LVL373:
 732:application-library/nrf24/nrf24.c **** 
 3397              		.loc 1 732 0
 3398 0082 0A20     		movs	r0, #10
 3399 0084 FFF7FEFF 		bl	SPI_DELAY
 3400              	.LVL374:
 734:application-library/nrf24/nrf24.c **** 
 3401              		.loc 1 734 0
 3402 0088 09B0     		add	sp, sp, #36
 3403              	.LCFI112:
 3404              		.cfi_def_cfa_offset 12
 3405              		@ sp needed
 3406 008a 30BD     		pop	{r4, r5, pc}
 3407              	.L178:
 3408              		.align	2
 3409              	.L177:
 3410 008c 04000000 		.word	.LANCHOR0+4
 3411              		.cfi_endproc
 3412              	.LFE151:
 3414              		.section	.text.nRF24_get_TX_ADDR,"ax",%progbits
 3415              		.align	1
 3416              		.global	nRF24_get_TX_ADDR
 3417              		.syntax unified
 3418              		.thumb
 3419              		.thumb_func
 3420              		.fpu fpv4-sp-d16
 3422              	nRF24_get_TX_ADDR:
 3423              	.LFB187:
1386:application-library/nrf24/nrf24.c **** }
1387:application-library/nrf24/nrf24.c **** 
ARM GAS  /tmp/cc0cESOd.s 			page 86


1388:application-library/nrf24/nrf24.c **** 
1389:application-library/nrf24/nrf24.c **** /**
1390:application-library/nrf24/nrf24.c ****   * @brief      Read <TX_ADDR> register from nRF24.
1391:application-library/nrf24/nrf24.c ****   * @param[in]  tx_addr_width The width of RX address. Needs to be consistent with SET_AW.
1392:application-library/nrf24/nrf24.c ****   * @param[out] p_read_buffer Pointer to an array that's used to store the read TX address.
1393:application-library/nrf24/nrf24.c ****   * @retval     None.
1394:application-library/nrf24/nrf24.c ****   */
1395:application-library/nrf24/nrf24.c **** void nRF24_get_TX_ADDR(uint8_t tx_addr_width, uint8_t* p_read_buffer) 
1396:application-library/nrf24/nrf24.c **** {
 3424              		.loc 1 1396 0
 3425              		.cfi_startproc
 3426              		@ args = 0, pretend = 0, frame = 0
 3427              		@ frame_needed = 0, uses_anonymous_args = 0
 3428              	.LVL375:
 3429 0000 08B5     		push	{r3, lr}
 3430              	.LCFI113:
 3431              		.cfi_def_cfa_offset 8
 3432              		.cfi_offset 3, -8
 3433              		.cfi_offset 14, -4
1397:application-library/nrf24/nrf24.c ****   spi_read_register(R_REGISTER_MASK + TX_ADDR, tx_addr_width, p_read_buffer);
 3434              		.loc 1 1397 0
 3435 0002 0A46     		mov	r2, r1
 3436 0004 0146     		mov	r1, r0
 3437              	.LVL376:
 3438 0006 1020     		movs	r0, #16
 3439              	.LVL377:
 3440 0008 FFF7FEFF 		bl	spi_read_register
 3441              	.LVL378:
 3442 000c 08BD     		pop	{r3, pc}
 3443              		.cfi_endproc
 3444              	.LFE187:
 3446              		.section	.text.nRF24_set_RX_PW_P0,"ax",%progbits
 3447              		.align	1
 3448              		.global	nRF24_set_RX_PW_P0
 3449              		.syntax unified
 3450              		.thumb
 3451              		.thumb_func
 3452              		.fpu fpv4-sp-d16
 3454              	nRF24_set_RX_PW_P0:
 3455              	.LFB188:
1398:application-library/nrf24/nrf24.c **** }
1399:application-library/nrf24/nrf24.c **** 
1400:application-library/nrf24/nrf24.c **** /**
1401:application-library/nrf24/nrf24.c ****   * @brief Set number of bytes in RX payload in data pipe 0.
1402:application-library/nrf24/nrf24.c ****   * @param rx_pw_p0 Number of bytes. 
1403:application-library/nrf24/nrf24.c ****   *          0 = pipe not used.
1404:application-library/nrf24/nrf24.c ****   *          1 = 1 byte.
1405:application-library/nrf24/nrf24.c ****   *          2 = 2 bytes.
1406:application-library/nrf24/nrf24.c ****   *          ...
1407:application-library/nrf24/nrf24.c ****   *          32 = 32 bytes.
1408:application-library/nrf24/nrf24.c ****   */
1409:application-library/nrf24/nrf24.c **** void nRF24_set_RX_PW_P0(uint8_t rx_pw_p0) 
1410:application-library/nrf24/nrf24.c **** {
 3456              		.loc 1 1410 0
 3457              		.cfi_startproc
 3458              		@ args = 0, pretend = 0, frame = 8
 3459              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc0cESOd.s 			page 87


 3460              	.LVL379:
 3461 0000 00B5     		push	{lr}
 3462              	.LCFI114:
 3463              		.cfi_def_cfa_offset 4
 3464              		.cfi_offset 14, -4
 3465 0002 83B0     		sub	sp, sp, #12
 3466              	.LCFI115:
 3467              		.cfi_def_cfa_offset 16
1411:application-library/nrf24/nrf24.c ****   uint8_t writing_byte = 0x00;
1412:application-library/nrf24/nrf24.c ****   writing_byte |= rx_pw_p0;
 3468              		.loc 1 1412 0
 3469 0004 02AA     		add	r2, sp, #8
 3470 0006 02F8010D 		strb	r0, [r2, #-1]!
1413:application-library/nrf24/nrf24.c ****   nRF24_verified_write_register(W_REGISTER_MASK + RX_PW_P0, 1, &writing_byte);
 3471              		.loc 1 1413 0
 3472 000a 0121     		movs	r1, #1
 3473 000c 3120     		movs	r0, #49
 3474              	.LVL380:
 3475 000e FFF7FEFF 		bl	nRF24_verified_write_register
 3476              	.LVL381:
1414:application-library/nrf24/nrf24.c **** }
 3477              		.loc 1 1414 0
 3478 0012 03B0     		add	sp, sp, #12
 3479              	.LCFI116:
 3480              		.cfi_def_cfa_offset 4
 3481              		@ sp needed
 3482 0014 5DF804FB 		ldr	pc, [sp], #4
 3483              		.cfi_endproc
 3484              	.LFE188:
 3486              		.section	.text.nRF24_config_normal_rx_mode,"ax",%progbits
 3487              		.align	1
 3488              		.global	nRF24_config_normal_rx_mode
 3489              		.syntax unified
 3490              		.thumb
 3491              		.thumb_func
 3492              		.fpu fpv4-sp-d16
 3494              	nRF24_config_normal_rx_mode:
 3495              	.LFB152:
 749:application-library/nrf24/nrf24.c ****     nRF24_CE_0();
 3496              		.loc 1 749 0
 3497              		.cfi_startproc
 3498              		@ args = 0, pretend = 0, frame = 8
 3499              		@ frame_needed = 0, uses_anonymous_args = 0
 3500 0000 30B5     		push	{r4, r5, lr}
 3501              	.LCFI117:
 3502              		.cfi_def_cfa_offset 12
 3503              		.cfi_offset 4, -12
 3504              		.cfi_offset 5, -8
 3505              		.cfi_offset 14, -4
 3506 0002 87B0     		sub	sp, sp, #28
 3507              	.LCFI118:
 3508              		.cfi_def_cfa_offset 40
 750:application-library/nrf24/nrf24.c **** 
 3509              		.loc 1 750 0
 3510 0004 FFF7FEFF 		bl	nRF24_CE_0
 3511              	.LVL382:
 753:application-library/nrf24/nrf24.c ****  
ARM GAS  /tmp/cc0cESOd.s 			page 88


 3512              		.loc 1 753 0
 3513 0008 0320     		movs	r0, #3
 3514 000a FFF7FEFF 		bl	nRF24_set_SETUP_AW
 3515              	.LVL383:
 756:application-library/nrf24/nrf24.c ****     nRF24_set_RX_ADDR_P0(5, RX_ADDRESS); 
 3516              		.loc 1 756 0
 3517 000e 1E4B     		ldr	r3, .L185
 3518 0010 93E80300 		ldm	r3, {r0, r1}
 3519 0014 0490     		str	r0, [sp, #16]
 3520 0016 8DF81410 		strb	r1, [sp, #20]
 757:application-library/nrf24/nrf24.c **** 
 3521              		.loc 1 757 0
 3522 001a 04A9     		add	r1, sp, #16
 3523 001c 0520     		movs	r0, #5
 3524 001e FFF7FEFF 		bl	nRF24_set_RX_ADDR_P0
 3525              	.LVL384:
 760:application-library/nrf24/nrf24.c **** 
 3526              		.loc 1 760 0
 3527 0022 0024     		movs	r4, #0
 3528 0024 0194     		str	r4, [sp, #4]
 3529 0026 0094     		str	r4, [sp]
 3530 0028 2346     		mov	r3, r4
 3531 002a 2246     		mov	r2, r4
 3532 002c 2146     		mov	r1, r4
 3533 002e 2046     		mov	r0, r4
 3534 0030 FFF7FEFF 		bl	nRF24_set_EN_AA
 3535              	.LVL385:
 763:application-library/nrf24/nrf24.c **** 
 3536              		.loc 1 763 0
 3537 0034 0125     		movs	r5, #1
 3538 0036 0195     		str	r5, [sp, #4]
 3539 0038 0094     		str	r4, [sp]
 3540 003a 2346     		mov	r3, r4
 3541 003c 2246     		mov	r2, r4
 3542 003e 2146     		mov	r1, r4
 3543 0040 2046     		mov	r0, r4
 3544 0042 FFF7FEFF 		bl	nRF24_set_EN_RXADDR
 3545              	.LVL386:
 766:application-library/nrf24/nrf24.c **** 
 3546              		.loc 1 766 0
 3547 0046 2146     		mov	r1, r4
 3548 0048 2046     		mov	r0, r4
 3549 004a FFF7FEFF 		bl	nRF24_set_SETUP_RETR
 3550              	.LVL387:
 769:application-library/nrf24/nrf24.c **** 
 3551              		.loc 1 769 0
 3552 004e 2820     		movs	r0, #40
 3553 0050 FFF7FEFF 		bl	nRF24_set_RF_CH
 3554              	.LVL388:
 772:application-library/nrf24/nrf24.c **** 
 3555              		.loc 1 772 0
 3556 0054 0623     		movs	r3, #6
 3557 0056 0093     		str	r3, [sp]
 3558 0058 2B46     		mov	r3, r5
 3559 005a 2246     		mov	r2, r4
 3560 005c 2146     		mov	r1, r4
 3561 005e 2046     		mov	r0, r4
ARM GAS  /tmp/cc0cESOd.s 			page 89


 3562 0060 FFF7FEFF 		bl	nRF24_set_RF_SETUP
 3563              	.LVL389:
 775:application-library/nrf24/nrf24.c ****   
 3564              		.loc 1 775 0
 3565 0064 2020     		movs	r0, #32
 3566 0066 FFF7FEFF 		bl	nRF24_set_RX_PW_P0
 3567              	.LVL390:
 778:application-library/nrf24/nrf24.c **** 
 3568              		.loc 1 778 0
 3569 006a 0295     		str	r5, [sp, #8]
 3570 006c 0223     		movs	r3, #2
 3571 006e 0193     		str	r3, [sp, #4]
 3572 0070 0423     		movs	r3, #4
 3573 0072 0093     		str	r3, [sp]
 3574 0074 0823     		movs	r3, #8
 3575 0076 2246     		mov	r2, r4
 3576 0078 2146     		mov	r1, r4
 3577 007a 2046     		mov	r0, r4
 3578 007c FFF7FEFF 		bl	nRF24_set_CONFIG
 3579              	.LVL391:
 781:application-library/nrf24/nrf24.c **** 		/* nRF24 starts hearing as RX. */
 3580              		.loc 1 781 0
 3581 0080 FFF7FEFF 		bl	nRF24_CE_1
 3582              	.LVL392:
 783:application-library/nrf24/nrf24.c **** 
 3583              		.loc 1 783 0
 3584 0084 07B0     		add	sp, sp, #28
 3585              	.LCFI119:
 3586              		.cfi_def_cfa_offset 12
 3587              		@ sp needed
 3588 0086 30BD     		pop	{r4, r5, pc}
 3589              	.L186:
 3590              		.align	2
 3591              	.L185:
 3592 0088 04000000 		.word	.LANCHOR0+4
 3593              		.cfi_endproc
 3594              	.LFE152:
 3596              		.section	.text.nRF24_get_RX_PW_P0,"ax",%progbits
 3597              		.align	1
 3598              		.global	nRF24_get_RX_PW_P0
 3599              		.syntax unified
 3600              		.thumb
 3601              		.thumb_func
 3602              		.fpu fpv4-sp-d16
 3604              	nRF24_get_RX_PW_P0:
 3605              	.LFB189:
1415:application-library/nrf24/nrf24.c **** 
1416:application-library/nrf24/nrf24.c **** 
1417:application-library/nrf24/nrf24.c **** /**
1418:application-library/nrf24/nrf24.c ****   * @brief      Read <RX_PW_P0> register from nRF24.
1419:application-library/nrf24/nrf24.c ****   * @param      None.
1420:application-library/nrf24/nrf24.c ****   * @retval     <RX_PW_P0> register value.
1421:application-library/nrf24/nrf24.c ****   */
1422:application-library/nrf24/nrf24.c **** uint8_t nRF24_get_RX_PW_P0() 
1423:application-library/nrf24/nrf24.c **** {
 3606              		.loc 1 1423 0
 3607              		.cfi_startproc
ARM GAS  /tmp/cc0cESOd.s 			page 90


 3608              		@ args = 0, pretend = 0, frame = 8
 3609              		@ frame_needed = 0, uses_anonymous_args = 0
 3610 0000 00B5     		push	{lr}
 3611              	.LCFI120:
 3612              		.cfi_def_cfa_offset 4
 3613              		.cfi_offset 14, -4
 3614 0002 83B0     		sub	sp, sp, #12
 3615              	.LCFI121:
 3616              		.cfi_def_cfa_offset 16
1424:application-library/nrf24/nrf24.c ****   uint8_t read_byte;
1425:application-library/nrf24/nrf24.c ****   spi_read_register(R_REGISTER_MASK + RX_PW_P0, 1, &read_byte);
 3617              		.loc 1 1425 0
 3618 0004 0DF10702 		add	r2, sp, #7
 3619 0008 0121     		movs	r1, #1
 3620 000a 1120     		movs	r0, #17
 3621 000c FFF7FEFF 		bl	spi_read_register
 3622              	.LVL393:
1426:application-library/nrf24/nrf24.c ****   return read_byte;
1427:application-library/nrf24/nrf24.c **** }
 3623              		.loc 1 1427 0
 3624 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 3625 0014 03B0     		add	sp, sp, #12
 3626              	.LCFI122:
 3627              		.cfi_def_cfa_offset 4
 3628              		@ sp needed
 3629 0016 5DF804FB 		ldr	pc, [sp], #4
 3630              		.cfi_endproc
 3631              	.LFE189:
 3633              		.section	.text.nRF24_set_RX_PW_P1,"ax",%progbits
 3634              		.align	1
 3635              		.global	nRF24_set_RX_PW_P1
 3636              		.syntax unified
 3637              		.thumb
 3638              		.thumb_func
 3639              		.fpu fpv4-sp-d16
 3641              	nRF24_set_RX_PW_P1:
 3642              	.LFB190:
1428:application-library/nrf24/nrf24.c **** 
1429:application-library/nrf24/nrf24.c **** 
1430:application-library/nrf24/nrf24.c **** /**
1431:application-library/nrf24/nrf24.c ****   * @brief Set number of bytes in RX payload in data pipe 1.
1432:application-library/nrf24/nrf24.c ****   * @param rx_pw_p1 Number of bytes. 
1433:application-library/nrf24/nrf24.c ****   *          0 = pipe not used.
1434:application-library/nrf24/nrf24.c ****   *          1 = 1 byte.
1435:application-library/nrf24/nrf24.c ****   *          2 = 2 bytes.
1436:application-library/nrf24/nrf24.c ****   *          ...
1437:application-library/nrf24/nrf24.c ****   *          32 = 32 bytes.
1438:application-library/nrf24/nrf24.c ****   * @retval None.
1439:application-library/nrf24/nrf24.c ****   */
1440:application-library/nrf24/nrf24.c **** void nRF24_set_RX_PW_P1(uint8_t rx_pw_p1) 
1441:application-library/nrf24/nrf24.c **** {
 3643              		.loc 1 1441 0
 3644              		.cfi_startproc
 3645              		@ args = 0, pretend = 0, frame = 8
 3646              		@ frame_needed = 0, uses_anonymous_args = 0
 3647              	.LVL394:
 3648 0000 00B5     		push	{lr}
ARM GAS  /tmp/cc0cESOd.s 			page 91


 3649              	.LCFI123:
 3650              		.cfi_def_cfa_offset 4
 3651              		.cfi_offset 14, -4
 3652 0002 83B0     		sub	sp, sp, #12
 3653              	.LCFI124:
 3654              		.cfi_def_cfa_offset 16
1442:application-library/nrf24/nrf24.c ****   uint8_t writing_byte = 0x00;
1443:application-library/nrf24/nrf24.c ****   writing_byte |= rx_pw_p1;
 3655              		.loc 1 1443 0
 3656 0004 02AA     		add	r2, sp, #8
 3657 0006 02F8010D 		strb	r0, [r2, #-1]!
1444:application-library/nrf24/nrf24.c ****   nRF24_verified_write_register(W_REGISTER_MASK + RX_PW_P1, 1, &writing_byte);
 3658              		.loc 1 1444 0
 3659 000a 0121     		movs	r1, #1
 3660 000c 3220     		movs	r0, #50
 3661              	.LVL395:
 3662 000e FFF7FEFF 		bl	nRF24_verified_write_register
 3663              	.LVL396:
1445:application-library/nrf24/nrf24.c **** }
 3664              		.loc 1 1445 0
 3665 0012 03B0     		add	sp, sp, #12
 3666              	.LCFI125:
 3667              		.cfi_def_cfa_offset 4
 3668              		@ sp needed
 3669 0014 5DF804FB 		ldr	pc, [sp], #4
 3670              		.cfi_endproc
 3671              	.LFE190:
 3673              		.section	.text.nRF24_get_RX_PW_P1,"ax",%progbits
 3674              		.align	1
 3675              		.global	nRF24_get_RX_PW_P1
 3676              		.syntax unified
 3677              		.thumb
 3678              		.thumb_func
 3679              		.fpu fpv4-sp-d16
 3681              	nRF24_get_RX_PW_P1:
 3682              	.LFB191:
1446:application-library/nrf24/nrf24.c **** 
1447:application-library/nrf24/nrf24.c **** 
1448:application-library/nrf24/nrf24.c **** /**
1449:application-library/nrf24/nrf24.c ****   * @brief      Read <RX_PW_P1> register from nRF24.
1450:application-library/nrf24/nrf24.c ****   * @param      None.
1451:application-library/nrf24/nrf24.c ****   * @retval     <RX_PW_P1> register value.
1452:application-library/nrf24/nrf24.c ****   */
1453:application-library/nrf24/nrf24.c **** uint8_t nRF24_get_RX_PW_P1() 
1454:application-library/nrf24/nrf24.c **** {
 3683              		.loc 1 1454 0
 3684              		.cfi_startproc
 3685              		@ args = 0, pretend = 0, frame = 8
 3686              		@ frame_needed = 0, uses_anonymous_args = 0
 3687 0000 00B5     		push	{lr}
 3688              	.LCFI126:
 3689              		.cfi_def_cfa_offset 4
 3690              		.cfi_offset 14, -4
 3691 0002 83B0     		sub	sp, sp, #12
 3692              	.LCFI127:
 3693              		.cfi_def_cfa_offset 16
1455:application-library/nrf24/nrf24.c ****   uint8_t read_byte;
ARM GAS  /tmp/cc0cESOd.s 			page 92


1456:application-library/nrf24/nrf24.c ****   spi_read_register(R_REGISTER_MASK + RX_PW_P1, 1, &read_byte);
 3694              		.loc 1 1456 0
 3695 0004 0DF10702 		add	r2, sp, #7
 3696 0008 0121     		movs	r1, #1
 3697 000a 1220     		movs	r0, #18
 3698 000c FFF7FEFF 		bl	spi_read_register
 3699              	.LVL397:
1457:application-library/nrf24/nrf24.c ****   return read_byte;
1458:application-library/nrf24/nrf24.c **** }
 3700              		.loc 1 1458 0
 3701 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 3702 0014 03B0     		add	sp, sp, #12
 3703              	.LCFI128:
 3704              		.cfi_def_cfa_offset 4
 3705              		@ sp needed
 3706 0016 5DF804FB 		ldr	pc, [sp], #4
 3707              		.cfi_endproc
 3708              	.LFE191:
 3710              		.section	.text.nRF24_set_RX_PW_P2,"ax",%progbits
 3711              		.align	1
 3712              		.global	nRF24_set_RX_PW_P2
 3713              		.syntax unified
 3714              		.thumb
 3715              		.thumb_func
 3716              		.fpu fpv4-sp-d16
 3718              	nRF24_set_RX_PW_P2:
 3719              	.LFB192:
1459:application-library/nrf24/nrf24.c **** 
1460:application-library/nrf24/nrf24.c **** 
1461:application-library/nrf24/nrf24.c **** /**
1462:application-library/nrf24/nrf24.c ****   * @brief Set number of bytes in RX payload in data pipe 2.
1463:application-library/nrf24/nrf24.c ****   * @param rx_pw_p2 Number of bytes. 
1464:application-library/nrf24/nrf24.c ****   *          0 = pipe not used.
1465:application-library/nrf24/nrf24.c ****   *          1 = 1 byte.
1466:application-library/nrf24/nrf24.c ****   *          2 = 2 bytes.
1467:application-library/nrf24/nrf24.c ****   *          ...
1468:application-library/nrf24/nrf24.c ****   *          32 = 32 bytes.
1469:application-library/nrf24/nrf24.c ****   * @retval None.
1470:application-library/nrf24/nrf24.c ****   */
1471:application-library/nrf24/nrf24.c **** void nRF24_set_RX_PW_P2(uint8_t rx_pw_p2) 
1472:application-library/nrf24/nrf24.c **** {
 3720              		.loc 1 1472 0
 3721              		.cfi_startproc
 3722              		@ args = 0, pretend = 0, frame = 8
 3723              		@ frame_needed = 0, uses_anonymous_args = 0
 3724              	.LVL398:
 3725 0000 00B5     		push	{lr}
 3726              	.LCFI129:
 3727              		.cfi_def_cfa_offset 4
 3728              		.cfi_offset 14, -4
 3729 0002 83B0     		sub	sp, sp, #12
 3730              	.LCFI130:
 3731              		.cfi_def_cfa_offset 16
1473:application-library/nrf24/nrf24.c ****   uint8_t writing_byte = 0x00;
1474:application-library/nrf24/nrf24.c ****   writing_byte |= rx_pw_p2;
 3732              		.loc 1 1474 0
 3733 0004 02AA     		add	r2, sp, #8
ARM GAS  /tmp/cc0cESOd.s 			page 93


 3734 0006 02F8010D 		strb	r0, [r2, #-1]!
1475:application-library/nrf24/nrf24.c ****   nRF24_verified_write_register(W_REGISTER_MASK + RX_PW_P2, 1, &writing_byte);
 3735              		.loc 1 1475 0
 3736 000a 0121     		movs	r1, #1
 3737 000c 3320     		movs	r0, #51
 3738              	.LVL399:
 3739 000e FFF7FEFF 		bl	nRF24_verified_write_register
 3740              	.LVL400:
1476:application-library/nrf24/nrf24.c **** }
 3741              		.loc 1 1476 0
 3742 0012 03B0     		add	sp, sp, #12
 3743              	.LCFI131:
 3744              		.cfi_def_cfa_offset 4
 3745              		@ sp needed
 3746 0014 5DF804FB 		ldr	pc, [sp], #4
 3747              		.cfi_endproc
 3748              	.LFE192:
 3750              		.section	.text.nRF24_get_RX_PW_P2,"ax",%progbits
 3751              		.align	1
 3752              		.global	nRF24_get_RX_PW_P2
 3753              		.syntax unified
 3754              		.thumb
 3755              		.thumb_func
 3756              		.fpu fpv4-sp-d16
 3758              	nRF24_get_RX_PW_P2:
 3759              	.LFB193:
1477:application-library/nrf24/nrf24.c **** 
1478:application-library/nrf24/nrf24.c **** 
1479:application-library/nrf24/nrf24.c **** /**
1480:application-library/nrf24/nrf24.c ****   * @brief      Read <RX_PW_P2> register from nRF24.
1481:application-library/nrf24/nrf24.c ****   * @param      None.
1482:application-library/nrf24/nrf24.c ****   * @retval     <RX_PW_P2> register value.
1483:application-library/nrf24/nrf24.c ****   */
1484:application-library/nrf24/nrf24.c **** uint8_t nRF24_get_RX_PW_P2() 
1485:application-library/nrf24/nrf24.c **** {
 3760              		.loc 1 1485 0
 3761              		.cfi_startproc
 3762              		@ args = 0, pretend = 0, frame = 8
 3763              		@ frame_needed = 0, uses_anonymous_args = 0
 3764 0000 00B5     		push	{lr}
 3765              	.LCFI132:
 3766              		.cfi_def_cfa_offset 4
 3767              		.cfi_offset 14, -4
 3768 0002 83B0     		sub	sp, sp, #12
 3769              	.LCFI133:
 3770              		.cfi_def_cfa_offset 16
1486:application-library/nrf24/nrf24.c ****   uint8_t read_byte;
1487:application-library/nrf24/nrf24.c ****   spi_read_register(R_REGISTER_MASK + RX_PW_P2, 1, &read_byte);
 3771              		.loc 1 1487 0
 3772 0004 0DF10702 		add	r2, sp, #7
 3773 0008 0121     		movs	r1, #1
 3774 000a 1320     		movs	r0, #19
 3775 000c FFF7FEFF 		bl	spi_read_register
 3776              	.LVL401:
1488:application-library/nrf24/nrf24.c ****   return read_byte;
1489:application-library/nrf24/nrf24.c **** }
 3777              		.loc 1 1489 0
ARM GAS  /tmp/cc0cESOd.s 			page 94


 3778 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 3779 0014 03B0     		add	sp, sp, #12
 3780              	.LCFI134:
 3781              		.cfi_def_cfa_offset 4
 3782              		@ sp needed
 3783 0016 5DF804FB 		ldr	pc, [sp], #4
 3784              		.cfi_endproc
 3785              	.LFE193:
 3787              		.section	.text.nRF24_set_RX_PW_P3,"ax",%progbits
 3788              		.align	1
 3789              		.global	nRF24_set_RX_PW_P3
 3790              		.syntax unified
 3791              		.thumb
 3792              		.thumb_func
 3793              		.fpu fpv4-sp-d16
 3795              	nRF24_set_RX_PW_P3:
 3796              	.LFB194:
1490:application-library/nrf24/nrf24.c **** 
1491:application-library/nrf24/nrf24.c **** 
1492:application-library/nrf24/nrf24.c **** /**
1493:application-library/nrf24/nrf24.c ****   * @brief Set number of bytes in RX payload in data pipe 3.
1494:application-library/nrf24/nrf24.c ****   * @param rx_pw_p3 Number of bytes. 
1495:application-library/nrf24/nrf24.c ****   *          0 = pipe not used.
1496:application-library/nrf24/nrf24.c ****   *          1 = 1 byte.
1497:application-library/nrf24/nrf24.c ****   *          2 = 2 bytes.
1498:application-library/nrf24/nrf24.c ****   *          ...
1499:application-library/nrf24/nrf24.c ****   *          32 = 32 bytes.
1500:application-library/nrf24/nrf24.c ****   * @retval None.
1501:application-library/nrf24/nrf24.c ****   */
1502:application-library/nrf24/nrf24.c **** void nRF24_set_RX_PW_P3(uint8_t rx_pw_p3) 
1503:application-library/nrf24/nrf24.c **** {
 3797              		.loc 1 1503 0
 3798              		.cfi_startproc
 3799              		@ args = 0, pretend = 0, frame = 8
 3800              		@ frame_needed = 0, uses_anonymous_args = 0
 3801              	.LVL402:
 3802 0000 00B5     		push	{lr}
 3803              	.LCFI135:
 3804              		.cfi_def_cfa_offset 4
 3805              		.cfi_offset 14, -4
 3806 0002 83B0     		sub	sp, sp, #12
 3807              	.LCFI136:
 3808              		.cfi_def_cfa_offset 16
1504:application-library/nrf24/nrf24.c ****   uint8_t writing_byte = 0x00;
1505:application-library/nrf24/nrf24.c ****   writing_byte |= rx_pw_p3;
 3809              		.loc 1 1505 0
 3810 0004 02AA     		add	r2, sp, #8
 3811 0006 02F8010D 		strb	r0, [r2, #-1]!
1506:application-library/nrf24/nrf24.c ****   nRF24_verified_write_register(W_REGISTER_MASK + RX_PW_P3, 1, &writing_byte);
 3812              		.loc 1 1506 0
 3813 000a 0121     		movs	r1, #1
 3814 000c 3420     		movs	r0, #52
 3815              	.LVL403:
 3816 000e FFF7FEFF 		bl	nRF24_verified_write_register
 3817              	.LVL404:
1507:application-library/nrf24/nrf24.c **** }
 3818              		.loc 1 1507 0
ARM GAS  /tmp/cc0cESOd.s 			page 95


 3819 0012 03B0     		add	sp, sp, #12
 3820              	.LCFI137:
 3821              		.cfi_def_cfa_offset 4
 3822              		@ sp needed
 3823 0014 5DF804FB 		ldr	pc, [sp], #4
 3824              		.cfi_endproc
 3825              	.LFE194:
 3827              		.section	.text.nRF24_get_RX_PW_P3,"ax",%progbits
 3828              		.align	1
 3829              		.global	nRF24_get_RX_PW_P3
 3830              		.syntax unified
 3831              		.thumb
 3832              		.thumb_func
 3833              		.fpu fpv4-sp-d16
 3835              	nRF24_get_RX_PW_P3:
 3836              	.LFB195:
1508:application-library/nrf24/nrf24.c **** 
1509:application-library/nrf24/nrf24.c **** /**
1510:application-library/nrf24/nrf24.c ****   * @brief      Read <RX_PW_P3> register from nRF24.
1511:application-library/nrf24/nrf24.c ****   * @param      None.
1512:application-library/nrf24/nrf24.c ****   * @retval     <RX_PW_P3> register value.
1513:application-library/nrf24/nrf24.c ****   */
1514:application-library/nrf24/nrf24.c **** uint8_t nRF24_get_RX_PW_P3() 
1515:application-library/nrf24/nrf24.c **** {
 3837              		.loc 1 1515 0
 3838              		.cfi_startproc
 3839              		@ args = 0, pretend = 0, frame = 8
 3840              		@ frame_needed = 0, uses_anonymous_args = 0
 3841 0000 00B5     		push	{lr}
 3842              	.LCFI138:
 3843              		.cfi_def_cfa_offset 4
 3844              		.cfi_offset 14, -4
 3845 0002 83B0     		sub	sp, sp, #12
 3846              	.LCFI139:
 3847              		.cfi_def_cfa_offset 16
1516:application-library/nrf24/nrf24.c ****   uint8_t read_byte;
1517:application-library/nrf24/nrf24.c ****   spi_read_register(R_REGISTER_MASK + RX_PW_P3, 1, &read_byte);
 3848              		.loc 1 1517 0
 3849 0004 0DF10702 		add	r2, sp, #7
 3850 0008 0121     		movs	r1, #1
 3851 000a 1420     		movs	r0, #20
 3852 000c FFF7FEFF 		bl	spi_read_register
 3853              	.LVL405:
1518:application-library/nrf24/nrf24.c ****   return read_byte;
1519:application-library/nrf24/nrf24.c **** }
 3854              		.loc 1 1519 0
 3855 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 3856 0014 03B0     		add	sp, sp, #12
 3857              	.LCFI140:
 3858              		.cfi_def_cfa_offset 4
 3859              		@ sp needed
 3860 0016 5DF804FB 		ldr	pc, [sp], #4
 3861              		.cfi_endproc
 3862              	.LFE195:
 3864              		.section	.text.nRF24_set_RX_PW_P4,"ax",%progbits
 3865              		.align	1
 3866              		.global	nRF24_set_RX_PW_P4
ARM GAS  /tmp/cc0cESOd.s 			page 96


 3867              		.syntax unified
 3868              		.thumb
 3869              		.thumb_func
 3870              		.fpu fpv4-sp-d16
 3872              	nRF24_set_RX_PW_P4:
 3873              	.LFB196:
1520:application-library/nrf24/nrf24.c **** 
1521:application-library/nrf24/nrf24.c **** 
1522:application-library/nrf24/nrf24.c **** /**
1523:application-library/nrf24/nrf24.c ****   * @brief Set number of bytes in RX payload in data pipe 4.
1524:application-library/nrf24/nrf24.c ****   * @param rx_pw_p4 Number of bytes. 
1525:application-library/nrf24/nrf24.c ****   *          0 = pipe not used.
1526:application-library/nrf24/nrf24.c ****   *          1 = 1 byte.
1527:application-library/nrf24/nrf24.c ****   *          2 = 2 bytes.
1528:application-library/nrf24/nrf24.c ****   *          ...
1529:application-library/nrf24/nrf24.c ****   *          32 = 32 bytes.
1530:application-library/nrf24/nrf24.c ****   * @retval None.
1531:application-library/nrf24/nrf24.c ****   */
1532:application-library/nrf24/nrf24.c **** void nRF24_set_RX_PW_P4(uint8_t rx_pw_p4) 
1533:application-library/nrf24/nrf24.c **** {
 3874              		.loc 1 1533 0
 3875              		.cfi_startproc
 3876              		@ args = 0, pretend = 0, frame = 8
 3877              		@ frame_needed = 0, uses_anonymous_args = 0
 3878              	.LVL406:
 3879 0000 00B5     		push	{lr}
 3880              	.LCFI141:
 3881              		.cfi_def_cfa_offset 4
 3882              		.cfi_offset 14, -4
 3883 0002 83B0     		sub	sp, sp, #12
 3884              	.LCFI142:
 3885              		.cfi_def_cfa_offset 16
1534:application-library/nrf24/nrf24.c ****   uint8_t writing_byte = 0x00;
1535:application-library/nrf24/nrf24.c ****   writing_byte |= rx_pw_p4;
 3886              		.loc 1 1535 0
 3887 0004 02AA     		add	r2, sp, #8
 3888 0006 02F8010D 		strb	r0, [r2, #-1]!
1536:application-library/nrf24/nrf24.c ****   nRF24_verified_write_register(W_REGISTER_MASK + RX_PW_P4, 1, &writing_byte);
 3889              		.loc 1 1536 0
 3890 000a 0121     		movs	r1, #1
 3891 000c 3520     		movs	r0, #53
 3892              	.LVL407:
 3893 000e FFF7FEFF 		bl	nRF24_verified_write_register
 3894              	.LVL408:
1537:application-library/nrf24/nrf24.c **** }
 3895              		.loc 1 1537 0
 3896 0012 03B0     		add	sp, sp, #12
 3897              	.LCFI143:
 3898              		.cfi_def_cfa_offset 4
 3899              		@ sp needed
 3900 0014 5DF804FB 		ldr	pc, [sp], #4
 3901              		.cfi_endproc
 3902              	.LFE196:
 3904              		.section	.text.nRF24_get_RX_PW_P4,"ax",%progbits
 3905              		.align	1
 3906              		.global	nRF24_get_RX_PW_P4
 3907              		.syntax unified
ARM GAS  /tmp/cc0cESOd.s 			page 97


 3908              		.thumb
 3909              		.thumb_func
 3910              		.fpu fpv4-sp-d16
 3912              	nRF24_get_RX_PW_P4:
 3913              	.LFB197:
1538:application-library/nrf24/nrf24.c **** 
1539:application-library/nrf24/nrf24.c **** /**
1540:application-library/nrf24/nrf24.c ****   * @brief      Read <RX_PW_P4> register from nRF24.
1541:application-library/nrf24/nrf24.c ****   * @param      None.
1542:application-library/nrf24/nrf24.c ****   * @retval     <RX_PW_P4> register value.
1543:application-library/nrf24/nrf24.c ****   */
1544:application-library/nrf24/nrf24.c **** uint8_t nRF24_get_RX_PW_P4() 
1545:application-library/nrf24/nrf24.c **** {
 3914              		.loc 1 1545 0
 3915              		.cfi_startproc
 3916              		@ args = 0, pretend = 0, frame = 8
 3917              		@ frame_needed = 0, uses_anonymous_args = 0
 3918 0000 00B5     		push	{lr}
 3919              	.LCFI144:
 3920              		.cfi_def_cfa_offset 4
 3921              		.cfi_offset 14, -4
 3922 0002 83B0     		sub	sp, sp, #12
 3923              	.LCFI145:
 3924              		.cfi_def_cfa_offset 16
1546:application-library/nrf24/nrf24.c ****   uint8_t read_byte;
1547:application-library/nrf24/nrf24.c ****   spi_read_register(R_REGISTER_MASK + RX_PW_P4, 1, &read_byte);
 3925              		.loc 1 1547 0
 3926 0004 0DF10702 		add	r2, sp, #7
 3927 0008 0121     		movs	r1, #1
 3928 000a 1520     		movs	r0, #21
 3929 000c FFF7FEFF 		bl	spi_read_register
 3930              	.LVL409:
1548:application-library/nrf24/nrf24.c ****   return read_byte;
1549:application-library/nrf24/nrf24.c **** }
 3931              		.loc 1 1549 0
 3932 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 3933 0014 03B0     		add	sp, sp, #12
 3934              	.LCFI146:
 3935              		.cfi_def_cfa_offset 4
 3936              		@ sp needed
 3937 0016 5DF804FB 		ldr	pc, [sp], #4
 3938              		.cfi_endproc
 3939              	.LFE197:
 3941              		.section	.text.nRF24_set_RX_PW_P5,"ax",%progbits
 3942              		.align	1
 3943              		.global	nRF24_set_RX_PW_P5
 3944              		.syntax unified
 3945              		.thumb
 3946              		.thumb_func
 3947              		.fpu fpv4-sp-d16
 3949              	nRF24_set_RX_PW_P5:
 3950              	.LFB198:
1550:application-library/nrf24/nrf24.c **** 
1551:application-library/nrf24/nrf24.c **** /**
1552:application-library/nrf24/nrf24.c ****   * @brief Set number of bytes in RX payload in data pipe 5.
1553:application-library/nrf24/nrf24.c ****   * @param rx_pw_p5 Number of bytes. 
1554:application-library/nrf24/nrf24.c ****   *          0 = pipe not used.
ARM GAS  /tmp/cc0cESOd.s 			page 98


1555:application-library/nrf24/nrf24.c ****   *          1 = 1 byte.
1556:application-library/nrf24/nrf24.c ****   *          2 = 2 bytes.
1557:application-library/nrf24/nrf24.c ****   *          ...
1558:application-library/nrf24/nrf24.c ****   *          32 = 32 bytes.
1559:application-library/nrf24/nrf24.c ****   * @retval None.
1560:application-library/nrf24/nrf24.c ****   */
1561:application-library/nrf24/nrf24.c **** void nRF24_set_RX_PW_P5(uint8_t rx_pw_p5) 
1562:application-library/nrf24/nrf24.c **** {
 3951              		.loc 1 1562 0
 3952              		.cfi_startproc
 3953              		@ args = 0, pretend = 0, frame = 8
 3954              		@ frame_needed = 0, uses_anonymous_args = 0
 3955              	.LVL410:
 3956 0000 00B5     		push	{lr}
 3957              	.LCFI147:
 3958              		.cfi_def_cfa_offset 4
 3959              		.cfi_offset 14, -4
 3960 0002 83B0     		sub	sp, sp, #12
 3961              	.LCFI148:
 3962              		.cfi_def_cfa_offset 16
1563:application-library/nrf24/nrf24.c ****   uint8_t writing_byte = 0x00;
1564:application-library/nrf24/nrf24.c ****   writing_byte |= rx_pw_p5;
 3963              		.loc 1 1564 0
 3964 0004 02AA     		add	r2, sp, #8
 3965 0006 02F8010D 		strb	r0, [r2, #-1]!
1565:application-library/nrf24/nrf24.c ****   nRF24_verified_write_register(W_REGISTER_MASK + RX_PW_P5, 1, &writing_byte);
 3966              		.loc 1 1565 0
 3967 000a 0121     		movs	r1, #1
 3968 000c 3620     		movs	r0, #54
 3969              	.LVL411:
 3970 000e FFF7FEFF 		bl	nRF24_verified_write_register
 3971              	.LVL412:
1566:application-library/nrf24/nrf24.c **** }
 3972              		.loc 1 1566 0
 3973 0012 03B0     		add	sp, sp, #12
 3974              	.LCFI149:
 3975              		.cfi_def_cfa_offset 4
 3976              		@ sp needed
 3977 0014 5DF804FB 		ldr	pc, [sp], #4
 3978              		.cfi_endproc
 3979              	.LFE198:
 3981              		.section	.text.nRF24_get_RX_PW_P5,"ax",%progbits
 3982              		.align	1
 3983              		.global	nRF24_get_RX_PW_P5
 3984              		.syntax unified
 3985              		.thumb
 3986              		.thumb_func
 3987              		.fpu fpv4-sp-d16
 3989              	nRF24_get_RX_PW_P5:
 3990              	.LFB199:
1567:application-library/nrf24/nrf24.c **** 
1568:application-library/nrf24/nrf24.c **** /**
1569:application-library/nrf24/nrf24.c ****   * @brief  Read <RX_PW_P5> register from nRF24.
1570:application-library/nrf24/nrf24.c ****   * @param  None.
1571:application-library/nrf24/nrf24.c ****   * @retval <RX_PW_P5> register value.
1572:application-library/nrf24/nrf24.c ****   */
1573:application-library/nrf24/nrf24.c **** uint8_t nRF24_get_RX_PW_P5() 
ARM GAS  /tmp/cc0cESOd.s 			page 99


1574:application-library/nrf24/nrf24.c **** {
 3991              		.loc 1 1574 0
 3992              		.cfi_startproc
 3993              		@ args = 0, pretend = 0, frame = 8
 3994              		@ frame_needed = 0, uses_anonymous_args = 0
 3995 0000 00B5     		push	{lr}
 3996              	.LCFI150:
 3997              		.cfi_def_cfa_offset 4
 3998              		.cfi_offset 14, -4
 3999 0002 83B0     		sub	sp, sp, #12
 4000              	.LCFI151:
 4001              		.cfi_def_cfa_offset 16
1575:application-library/nrf24/nrf24.c ****   uint8_t read_byte;
1576:application-library/nrf24/nrf24.c ****   spi_read_register(R_REGISTER_MASK + RX_PW_P5, 1, &read_byte);
 4002              		.loc 1 1576 0
 4003 0004 0DF10702 		add	r2, sp, #7
 4004 0008 0121     		movs	r1, #1
 4005 000a 1620     		movs	r0, #22
 4006 000c FFF7FEFF 		bl	spi_read_register
 4007              	.LVL413:
1577:application-library/nrf24/nrf24.c ****   return read_byte;
1578:application-library/nrf24/nrf24.c **** }
 4008              		.loc 1 1578 0
 4009 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 4010 0014 03B0     		add	sp, sp, #12
 4011              	.LCFI152:
 4012              		.cfi_def_cfa_offset 4
 4013              		@ sp needed
 4014 0016 5DF804FB 		ldr	pc, [sp], #4
 4015              		.cfi_endproc
 4016              	.LFE199:
 4018              		.section	.text.nRF24_get_FIFO_STATUS,"ax",%progbits
 4019              		.align	1
 4020              		.global	nRF24_get_FIFO_STATUS
 4021              		.syntax unified
 4022              		.thumb
 4023              		.thumb_func
 4024              		.fpu fpv4-sp-d16
 4026              	nRF24_get_FIFO_STATUS:
 4027              	.LFB200:
1579:application-library/nrf24/nrf24.c **** 
1580:application-library/nrf24/nrf24.c **** 
1581:application-library/nrf24/nrf24.c **** /**
1582:application-library/nrf24/nrf24.c ****   * @brief  Read 'FIFO_STATUS' register from nRF24.
1583:application-library/nrf24/nrf24.c ****   * @param  None.
1584:application-library/nrf24/nrf24.c ****   * @retval FIFO_STATUS register value.
1585:application-library/nrf24/nrf24.c ****   * @note   Following masks can be used:
1586:application-library/nrf24/nrf24.c ****   *  TX_REUSE_READMASK  
1587:application-library/nrf24/nrf24.c ****   *  TX_EMPTY_READMASK  
1588:application-library/nrf24/nrf24.c ****   *  RX_FULL_READMASK 
1589:application-library/nrf24/nrf24.c ****   *  RX_EMPTY_READMASK 
1590:application-library/nrf24/nrf24.c ****   */
1591:application-library/nrf24/nrf24.c **** uint8_t nRF24_get_FIFO_STATUS() 
1592:application-library/nrf24/nrf24.c **** {
 4028              		.loc 1 1592 0
 4029              		.cfi_startproc
 4030              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/cc0cESOd.s 			page 100


 4031              		@ frame_needed = 0, uses_anonymous_args = 0
 4032 0000 00B5     		push	{lr}
 4033              	.LCFI153:
 4034              		.cfi_def_cfa_offset 4
 4035              		.cfi_offset 14, -4
 4036 0002 83B0     		sub	sp, sp, #12
 4037              	.LCFI154:
 4038              		.cfi_def_cfa_offset 16
1593:application-library/nrf24/nrf24.c ****   uint8_t fifo_status;
1594:application-library/nrf24/nrf24.c ****   spi_read_register(R_REGISTER_MASK + FIFO_STATUS, 1, &fifo_status);
 4039              		.loc 1 1594 0
 4040 0004 0DF10702 		add	r2, sp, #7
 4041 0008 0121     		movs	r1, #1
 4042 000a 1720     		movs	r0, #23
 4043 000c FFF7FEFF 		bl	spi_read_register
 4044              	.LVL414:
1595:application-library/nrf24/nrf24.c ****   return fifo_status;
1596:application-library/nrf24/nrf24.c **** }
 4045              		.loc 1 1596 0
 4046 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 4047 0014 03B0     		add	sp, sp, #12
 4048              	.LCFI155:
 4049              		.cfi_def_cfa_offset 4
 4050              		@ sp needed
 4051 0016 5DF804FB 		ldr	pc, [sp], #4
 4052              		.cfi_endproc
 4053              	.LFE200:
 4055              		.section	.text.nRF24_release_payload,"ax",%progbits
 4056              		.align	1
 4057              		.global	nRF24_release_payload
 4058              		.syntax unified
 4059              		.thumb
 4060              		.thumb_func
 4061              		.fpu fpv4-sp-d16
 4063              	nRF24_release_payload:
 4064              	.LFB201:
1597:application-library/nrf24/nrf24.c **** 
1598:application-library/nrf24/nrf24.c **** /**
1599:application-library/nrf24/nrf24.c ****   * @brief Write the payload (data to transfer) to the TX FIFO.
1600:application-library/nrf24/nrf24.c ****   * @param tx_payload_width Length of the payload in number of bytes.
1601:application-library/nrf24/nrf24.c ****               (!) tx_payload_width MUST be the same value as the receiver's <RX_PW_Px>, x being the
1602:application-library/nrf24/nrf24.c ****   * @param payload  Actual data to transfer.
1603:application-library/nrf24/nrf24.c ****   * @retval None.
1604:application-library/nrf24/nrf24.c ****   */
1605:application-library/nrf24/nrf24.c **** void nRF24_release_payload(uint8_t tx_payload_width, uint8_t* payload)
1606:application-library/nrf24/nrf24.c **** {
 4065              		.loc 1 1606 0
 4066              		.cfi_startproc
 4067              		@ args = 0, pretend = 0, frame = 0
 4068              		@ frame_needed = 0, uses_anonymous_args = 0
 4069              	.LVL415:
 4070 0000 08B5     		push	{r3, lr}
 4071              	.LCFI156:
 4072              		.cfi_def_cfa_offset 8
 4073              		.cfi_offset 3, -8
 4074              		.cfi_offset 14, -4
1607:application-library/nrf24/nrf24.c ****   spi_write_register(W_TX_PAYLOAD, tx_payload_width, payload);
ARM GAS  /tmp/cc0cESOd.s 			page 101


 4075              		.loc 1 1607 0
 4076 0002 0A46     		mov	r2, r1
 4077 0004 0146     		mov	r1, r0
 4078              	.LVL416:
 4079 0006 A020     		movs	r0, #160
 4080              	.LVL417:
 4081 0008 FFF7FEFF 		bl	spi_write_register
 4082              	.LVL418:
 4083 000c 08BD     		pop	{r3, pc}
 4084              		.cfi_endproc
 4085              	.LFE201:
 4087              		.section	.text.nRF24_send_packet,"ax",%progbits
 4088              		.align	1
 4089              		.global	nRF24_send_packet
 4090              		.syntax unified
 4091              		.thumb
 4092              		.thumb_func
 4093              		.fpu fpv4-sp-d16
 4095              	nRF24_send_packet:
 4096              	.LFB149:
 610:application-library/nrf24/nrf24.c **** 
 4097              		.loc 1 610 0
 4098              		.cfi_startproc
 4099              		@ args = 0, pretend = 0, frame = 72
 4100              		@ frame_needed = 0, uses_anonymous_args = 0
 4101              	.LVL419:
 4102 0000 30B5     		push	{r4, r5, lr}
 4103              	.LCFI157:
 4104              		.cfi_def_cfa_offset 12
 4105              		.cfi_offset 4, -12
 4106              		.cfi_offset 5, -8
 4107              		.cfi_offset 14, -4
 4108 0002 93B0     		sub	sp, sp, #76
 4109              	.LCFI158:
 4110              		.cfi_def_cfa_offset 88
 615:application-library/nrf24/nrf24.c **** 
 4111              		.loc 1 615 0
 4112 0004 FFF7FEFF 		bl	nRF24_release_payload
 4113              	.LVL420:
 618:application-library/nrf24/nrf24.c **** 
 4114              		.loc 1 618 0
 4115 0008 FFF7FEFF 		bl	nRF24_CE_1
 4116              	.LVL421:
 622:application-library/nrf24/nrf24.c **** 
 4117              		.loc 1 622 0
 4118 000c 0DF10702 		add	r2, sp, #7
 4119 0010 0121     		movs	r1, #1
 4120 0012 0720     		movs	r0, #7
 4121 0014 FFF7FEFF 		bl	spi_read_register
 4122              	.LVL422:
 626:application-library/nrf24/nrf24.c ****   serial_print(message);
 4123              		.loc 1 626 0
 4124 0018 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 4125 001c 2149     		ldr	r1, .L218
 4126 001e 02A8     		add	r0, sp, #8
 4127 0020 FFF7FEFF 		bl	sprintf
 4128              	.LVL423:
ARM GAS  /tmp/cc0cESOd.s 			page 102


 4129              	.LBB185:
 4130              	.LBB186:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 4131              		.loc 1 183 0
 4132 0024 02A8     		add	r0, sp, #8
 4133              	.LVL424:
 4134 0026 FFF7FEFF 		bl	strlen
 4135              	.LVL425:
 4136 002a 6423     		movs	r3, #100
 4137 002c 82B2     		uxth	r2, r0
 4138 002e 02A9     		add	r1, sp, #8
 4139              	.LVL426:
 4140 0030 1D48     		ldr	r0, .L218+4
 4141 0032 FFF7FEFF 		bl	HAL_UART_Transmit
 4142              	.LVL427:
 4143              	.LBE186:
 4144              	.LBE185:
 631:application-library/nrf24/nrf24.c ****   {
 4145              		.loc 1 631 0
 4146 0036 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 4147 003a 2E2B     		cmp	r3, #46
 4148 003c 1CD0     		beq	.L217
 641:application-library/nrf24/nrf24.c ****     serial_print(message);
 4149              		.loc 1 641 0
 4150 003e 02AC     		add	r4, sp, #8
 4151 0040 1A4D     		ldr	r5, .L218+8
 4152 0042 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4153 0044 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4154 0046 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 4155 004a 07C4     		stmia	r4!, {r0, r1, r2}
 4156 004c 24F8023B 		strh	r3, [r4], #2	@ movhi
 4157 0050 1B0C     		lsrs	r3, r3, #16
 4158 0052 2370     		strb	r3, [r4]
 4159              	.LVL428:
 4160              	.LBB187:
 4161              	.LBB188:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 4162              		.loc 1 183 0
 4163 0054 02A8     		add	r0, sp, #8
 4164              	.LVL429:
 4165 0056 FFF7FEFF 		bl	strlen
 4166              	.LVL430:
 4167 005a 6423     		movs	r3, #100
 4168 005c 82B2     		uxth	r2, r0
 4169 005e 02A9     		add	r1, sp, #8
 4170              	.LVL431:
 4171 0060 1148     		ldr	r0, .L218+4
 4172 0062 FFF7FEFF 		bl	HAL_UART_Transmit
 4173              	.LVL432:
 4174              	.L215:
 4175              	.LBE188:
 4176              	.LBE187:
 647:application-library/nrf24/nrf24.c **** 
 4177              		.loc 1 647 0
 4178 0066 1022     		movs	r2, #16
 4179 0068 2021     		movs	r1, #32
 4180 006a 4020     		movs	r0, #64
ARM GAS  /tmp/cc0cESOd.s 			page 103


 4181 006c FFF7FEFF 		bl	nRF24_clear_STATUS
 4182              	.LVL433:
 650:application-library/nrf24/nrf24.c **** }
 4183              		.loc 1 650 0
 4184 0070 FFF7FEFF 		bl	nRF24_CE_0
 4185              	.LVL434:
 651:application-library/nrf24/nrf24.c **** 
 4186              		.loc 1 651 0
 4187 0074 13B0     		add	sp, sp, #76
 4188              	.LCFI159:
 4189              		.cfi_remember_state
 4190              		.cfi_def_cfa_offset 12
 4191              		@ sp needed
 4192 0076 30BD     		pop	{r4, r5, pc}
 4193              	.L217:
 4194              	.LCFI160:
 4195              		.cfi_restore_state
 634:application-library/nrf24/nrf24.c ****     serial_print(message);
 4196              		.loc 1 634 0
 4197 0078 02AC     		add	r4, sp, #8
 4198 007a 0D4D     		ldr	r5, .L218+12
 4199 007c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4200 007e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4201 0080 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 4202 0084 07C4     		stmia	r4!, {r0, r1, r2}
 4203 0086 24F8023B 		strh	r3, [r4], #2	@ movhi
 4204 008a 1B0C     		lsrs	r3, r3, #16
 4205 008c 2370     		strb	r3, [r4]
 4206              	.LVL435:
 4207              	.LBB189:
 4208              	.LBB190:
 183:application-library/nrf24/nrf24.c ****   #elif defined BCM2835
 4209              		.loc 1 183 0
 4210 008e 02A8     		add	r0, sp, #8
 4211              	.LVL436:
 4212 0090 FFF7FEFF 		bl	strlen
 4213              	.LVL437:
 4214 0094 6423     		movs	r3, #100
 4215 0096 82B2     		uxth	r2, r0
 4216 0098 02A9     		add	r1, sp, #8
 4217              	.LVL438:
 4218 009a 0348     		ldr	r0, .L218+4
 4219 009c FFF7FEFF 		bl	HAL_UART_Transmit
 4220              	.LVL439:
 4221 00a0 E1E7     		b	.L215
 4222              	.L219:
 4223 00a2 00BF     		.align	2
 4224              	.L218:
 4225 00a4 B4010000 		.word	.LC27
 4226 00a8 00000000 		.word	huart2
 4227 00ac F0010000 		.word	.LC29
 4228 00b0 D0010000 		.word	.LC28
 4229              	.LBE190:
 4230              	.LBE189:
 4231              		.cfi_endproc
 4232              	.LFE149:
 4234              		.section	.rodata
ARM GAS  /tmp/cc0cESOd.s 			page 104


 4235              		.align	2
 4236              		.set	.LANCHOR0,. + 0
 4237              	.LC0:
 4238 0000 C0       		.byte	-64
 4239 0001 C0       		.byte	-64
 4240 0002 CA       		.byte	-54
 4241 0003 FE       		.byte	-2
 4242              	.LC1:
 4243 0004 99       		.byte	-103
 4244 0005 AA       		.byte	-86
 4245 0006 BB       		.byte	-69
 4246 0007 CC       		.byte	-52
 4247 0008 DD       		.byte	-35
 4248              		.section	.rodata.nRF24_print_all_registers.str1.4,"aMS",%progbits,1
 4249              		.align	2
 4250              	.LC8:
 4251 0000 434F4E46 		.ascii	"CONFIG: <0x%02x>\012\000"
 4251      49473A20 
 4251      3C307825 
 4251      3032783E 
 4251      0A00
 4252 0012 0000     		.space	2
 4253              	.LC9:
 4254 0014 454E5F41 		.ascii	"EN_AA: <0x%02x>\012\000"
 4254      413A203C 
 4254      30782530 
 4254      32783E0A 
 4254      00
 4255 0025 000000   		.space	3
 4256              	.LC10:
 4257 0028 454E5F52 		.ascii	"EN_RXADDR: <0x%02x>\012\000"
 4257      58414444 
 4257      523A203C 
 4257      30782530 
 4257      32783E0A 
 4258 003d 000000   		.space	3
 4259              	.LC11:
 4260 0040 53455455 		.ascii	"SETUP_AW: <0x%02x>\012\000"
 4260      505F4157 
 4260      3A203C30 
 4260      78253032 
 4260      783E0A00 
 4261              	.LC12:
 4262 0054 53455455 		.ascii	"SETUP_RETR: <0x%02x>\012\000"
 4262      505F5245 
 4262      54523A20 
 4262      3C307825 
 4262      3032783E 
 4263 006a 0000     		.space	2
 4264              	.LC13:
 4265 006c 52465F43 		.ascii	"RF_CH: <0x%02x>\012\000"
 4265      483A203C 
 4265      30782530 
 4265      32783E0A 
 4265      00
 4266 007d 000000   		.space	3
 4267              	.LC14:
ARM GAS  /tmp/cc0cESOd.s 			page 105


 4268 0080 52465F53 		.ascii	"RF_SETUP: <0x%02x>\012\000"
 4268      45545550 
 4268      3A203C30 
 4268      78253032 
 4268      783E0A00 
 4269              	.LC15:
 4270 0094 53544154 		.ascii	"STATUS: <0x%02x>\012\000"
 4270      55533A20 
 4270      3C307825 
 4270      3032783E 
 4270      0A00
 4271 00a6 0000     		.space	2
 4272              	.LC16:
 4273 00a8 52585F41 		.ascii	"RX_ADDR_P0: <%#02x %#02x %#02x %#02x %#02x>\012\000"
 4273      4444525F 
 4273      50303A20 
 4273      3C252330 
 4273      32782025 
 4274 00d5 000000   		.space	3
 4275              	.LC17:
 4276 00d8 52585F41 		.ascii	"RX_ADDR_P1: <%#02x %#02x %#02x %#02x %#02x>\012\000"
 4276      4444525F 
 4276      50313A20 
 4276      3C252330 
 4276      32782025 
 4277 0105 000000   		.space	3
 4278              	.LC18:
 4279 0108 52585F41 		.ascii	"RX_ADDR_P2: <%#02x %#02x %#02x %#02x %#02x>\012\000"
 4279      4444525F 
 4279      50323A20 
 4279      3C252330 
 4279      32782025 
 4280 0135 000000   		.space	3
 4281              	.LC19:
 4282 0138 52585F41 		.ascii	"RX_ADDR_P3: <%#02x %#02x %#02x %#02x %#02x>\012\000"
 4282      4444525F 
 4282      50333A20 
 4282      3C252330 
 4282      32782025 
 4283 0165 000000   		.space	3
 4284              	.LC20:
 4285 0168 52585F41 		.ascii	"RX_ADDR_P4: <%#02x %#02x %#02x %#02x %#02x>\012\000"
 4285      4444525F 
 4285      50343A20 
 4285      3C252330 
 4285      32782025 
 4286 0195 000000   		.space	3
 4287              	.LC21:
 4288 0198 52585F41 		.ascii	"RX_ADDR_P5: <%#02x %#02x %#02x %#02x %#02x>\012\000"
 4288      4444525F 
 4288      50353A20 
 4288      3C252330 
 4288      32782025 
 4289 01c5 000000   		.space	3
 4290              	.LC22:
 4291 01c8 54585F41 		.ascii	"TX_ADDR: <%#02x %#02x %#02x %#02x %#02x>\012\000"
 4291      4444523A 
ARM GAS  /tmp/cc0cESOd.s 			page 106


 4291      203C2523 
 4291      30327820 
 4291      25233032 
 4292              		.section	.rodata.nRF24_receive_packet.str1.4,"aMS",%progbits,1
 4293              		.align	2
 4294              	.LC30:
 4295 0000 3E204461 		.ascii	"> Data received: \000"
 4295      74612072 
 4295      65636569 
 4295      7665643A 
 4295      2000
 4296 0012 0000     		.space	2
 4297              	.LC31:
 4298 0014 4E6F2064 		.ascii	"No data has been received.\012\000"
 4298      61746120 
 4298      68617320 
 4298      6265656E 
 4298      20726563 
 4299              		.section	.rodata.nRF24_tx_self_test.str1.4,"aMS",%progbits,1
 4300              		.align	2
 4301              	.LC23:
 4302 0000 2D2D2D2D 		.ascii	"---- nrf24 tx self test. ----\012\000"
 4302      206E7266 
 4302      32342074 
 4302      78207365 
 4302      6C662074 
 4303 001f 00       		.space	1
 4304              	.LC24:
 4305 0020 2D2D2D2D 		.ascii	"---- This test to verifies function of a tranmitter"
 4305      20546869 
 4305      73207465 
 4305      73742074 
 4305      6F207665 
 4306 0053 2073656E 		.ascii	" send without a receiver. ----\012\000"
 4306      64207769 
 4306      74686F75 
 4306      74206120 
 4306      72656365 
 4307 0073 00       		.space	1
 4308              	.LC25:
 4309 0074 0A203E20 		.ascii	"\012 > nRF24 transmission self-test has passed.    "
 4309      6E524632 
 4309      34207472 
 4309      616E736D 
 4309      69737369 
 4310 00a4 20202020 		.ascii	"                    <STATUS> has value of 0x2E.    "
 4310      20202020 
 4310      20202020 
 4310      20202020 
 4310      20202020 
 4311 00d7 20202020 		.ascii	"                    TX_DS (transfer data sent) was "
 4311      20202020 
 4311      20202020 
 4311      20202020 
 4311      20202020 
 4312 010a 7365742E 		.ascii	"set.                        RX_P_NO = 111, this mea"
 4312      20202020 
ARM GAS  /tmp/cc0cESOd.s 			page 107


 4312      20202020 
 4312      20202020 
 4312      20202020 
 4313 013d 6E732052 		.ascii	"ns RX FIFO Empty. \012\000"
 4313      58204649 
 4313      464F2045 
 4313      6D707479 
 4313      2E200A00 
 4314 0151 000000   		.space	3
 4315              	.LC26:
 4316 0154 0A203E20 		.ascii	"\012 > nRF24 transmission self-test has failed. <ST"
 4316      6E524632 
 4316      34207472 
 4316      616E736D 
 4316      69737369 
 4317 0184 41545553 		.ascii	"ATUS> is expected 0x2E. Current value: %#02x\012\000"
 4317      3E206973 
 4317      20657870 
 4317      65637465 
 4317      64203078 
 4318 01b2 0000     		.space	2
 4319              	.LC27:
 4320 01b4 3C535441 		.ascii	"<STATUS> REGISTER : %#02x\012\000"
 4320      5455533E 
 4320      20524547 
 4320      49535445 
 4320      52203A20 
 4321 01cf 00       		.space	1
 4322              	.LC28:
 4323 01d0 6E524632 		.ascii	"nRF24 send status - success -\012\000"
 4323      34207365 
 4323      6E642073 
 4323      74617475 
 4323      73202D20 
 4324 01ef 00       		.space	1
 4325              	.LC29:
 4326 01f0 6E524632 		.ascii	"nRF24 send status - failure -\012\000"
 4326      34207365 
 4326      6E642073 
 4326      74617475 
 4326      73202D20 
 4327              		.section	.rodata.nRF24_verified_write_register.str1.4,"aMS",%progbits,1
 4328              		.align	2
 4329              	.LC2:
 4330 0000 50726F62 		.ascii	"Problem writing to nRF24 register -- \000"
 4330      6C656D20 
 4330      77726974 
 4330      696E6720 
 4330      746F206E 
 4331 0026 0000     		.space	2
 4332              	.LC3:
 4333 0028 77726974 		.ascii	"writing data: <%#02x> read_data: <%#02x>\012\000"
 4333      696E6720 
 4333      64617461 
 4333      3A203C25 
 4333      23303278 
 4334 0052 0000     		.space	2
ARM GAS  /tmp/cc0cESOd.s 			page 108


 4335              	.LC4:
 4336 0054 53756363 		.ascii	"Success writing to nRF24 register -- \000"
 4336      65737320 
 4336      77726974 
 4336      696E6720 
 4336      746F206E 
 4337              		.section	.rodata.print_bytearray.str1.4,"aMS",%progbits,1
 4338              		.align	2
 4339              	.LC5:
 4340 0000 25233032 		.ascii	"%#02x\000"
 4340      7800
 4341 0006 0000     		.space	2
 4342              	.LC6:
 4343 0008 2D00     		.ascii	"-\000"
 4344 000a 0000     		.space	2
 4345              	.LC7:
 4346 000c 0A00     		.ascii	"\012\000"
 4347              		.text
 4348              	.Letext0:
 4349              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 4350              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 4351              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 4352              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 4353              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 4354              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 4355              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 4356              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 4357              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 4358              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 4359              		.file 12 "/usr/include/newlib/sys/lock.h"
 4360              		.file 13 "/usr/include/newlib/sys/_types.h"
 4361              		.file 14 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 4362              		.file 15 "/usr/include/newlib/sys/reent.h"
 4363              		.file 16 "application-library/nrf24/nrf24.h"
 4364              		.file 17 "/usr/include/newlib/string.h"
 4365              		.file 18 "/usr/include/newlib/stdio.h"
ARM GAS  /tmp/cc0cESOd.s 			page 109


DEFINED SYMBOLS
                            *ABS*:0000000000000000 nrf24.c
     /tmp/cc0cESOd.s:18     .text.nRF24_gpio_initialize:0000000000000000 $t
     /tmp/cc0cESOd.s:25     .text.nRF24_gpio_initialize:0000000000000000 nRF24_gpio_initialize
     /tmp/cc0cESOd.s:38     .text.SPI_SCK_1:0000000000000000 $t
     /tmp/cc0cESOd.s:45     .text.SPI_SCK_1:0000000000000000 SPI_SCK_1
     /tmp/cc0cESOd.s:67     .text.SPI_SCK_1:0000000000000010 $d
     /tmp/cc0cESOd.s:72     .text.SPI_SCK_0:0000000000000000 $t
     /tmp/cc0cESOd.s:79     .text.SPI_SCK_0:0000000000000000 SPI_SCK_0
     /tmp/cc0cESOd.s:100    .text.SPI_SCK_0:0000000000000010 $d
     /tmp/cc0cESOd.s:105    .text.SPI_MOSI_1:0000000000000000 $t
     /tmp/cc0cESOd.s:112    .text.SPI_MOSI_1:0000000000000000 SPI_MOSI_1
     /tmp/cc0cESOd.s:133    .text.SPI_MOSI_1:0000000000000010 $d
     /tmp/cc0cESOd.s:138    .text.SPI_MOSI_0:0000000000000000 $t
     /tmp/cc0cESOd.s:145    .text.SPI_MOSI_0:0000000000000000 SPI_MOSI_0
     /tmp/cc0cESOd.s:166    .text.SPI_MOSI_0:0000000000000010 $d
     /tmp/cc0cESOd.s:171    .text.SPI_CS_1:0000000000000000 $t
     /tmp/cc0cESOd.s:178    .text.SPI_CS_1:0000000000000000 SPI_CS_1
     /tmp/cc0cESOd.s:199    .text.SPI_CS_1:0000000000000010 $d
     /tmp/cc0cESOd.s:204    .text.SPI_CS_0:0000000000000000 $t
     /tmp/cc0cESOd.s:211    .text.SPI_CS_0:0000000000000000 SPI_CS_0
     /tmp/cc0cESOd.s:232    .text.SPI_CS_0:0000000000000010 $d
     /tmp/cc0cESOd.s:237    .text.SPI_READ_MISO:0000000000000000 $t
     /tmp/cc0cESOd.s:244    .text.SPI_READ_MISO:0000000000000000 SPI_READ_MISO
     /tmp/cc0cESOd.s:268    .text.SPI_READ_MISO:0000000000000014 $d
     /tmp/cc0cESOd.s:273    .text.serial_print:0000000000000000 $t
     /tmp/cc0cESOd.s:280    .text.serial_print:0000000000000000 serial_print
     /tmp/cc0cESOd.s:307    .text.serial_print:0000000000000018 $d
     /tmp/cc0cESOd.s:312    .text.SPI_DELAY:0000000000000000 $t
     /tmp/cc0cESOd.s:319    .text.SPI_DELAY:0000000000000000 SPI_DELAY
     /tmp/cc0cESOd.s:339    .text.gpio_clockout_8_bits:0000000000000000 $t
     /tmp/cc0cESOd.s:346    .text.gpio_clockout_8_bits:0000000000000000 gpio_clockout_8_bits
     /tmp/cc0cESOd.s:451    .text.gpio_clockout_8_bits:0000000000000064 $d
     /tmp/cc0cESOd.s:459    .text.gpio_clockin_8_bits:0000000000000000 $t
     /tmp/cc0cESOd.s:466    .text.gpio_clockin_8_bits:0000000000000000 gpio_clockin_8_bits
     /tmp/cc0cESOd.s:568    .text.gpio_clockin_8_bits:0000000000000058 $d
     /tmp/cc0cESOd.s:574    .text.spi_read_register:0000000000000000 $t
     /tmp/cc0cESOd.s:581    .text.spi_read_register:0000000000000000 spi_read_register
     /tmp/cc0cESOd.s:646    .text.spi_read_register:0000000000000038 $d
     /tmp/cc0cESOd.s:653    .text.spi_write_register:0000000000000000 $t
     /tmp/cc0cESOd.s:660    .text.spi_write_register:0000000000000000 spi_write_register
     /tmp/cc0cESOd.s:727    .text.spi_write_register:0000000000000038 $d
     /tmp/cc0cESOd.s:734    .text.nRF24_CE_1:0000000000000000 $t
     /tmp/cc0cESOd.s:741    .text.nRF24_CE_1:0000000000000000 nRF24_CE_1
     /tmp/cc0cESOd.s:762    .text.nRF24_CE_1:0000000000000010 $d
     /tmp/cc0cESOd.s:767    .text.nRF24_CE_0:0000000000000000 $t
     /tmp/cc0cESOd.s:774    .text.nRF24_CE_0:0000000000000000 nRF24_CE_0
     /tmp/cc0cESOd.s:795    .text.nRF24_CE_0:0000000000000010 $d
     /tmp/cc0cESOd.s:800    .text.nRF24_verified_write_register:0000000000000000 $t
     /tmp/cc0cESOd.s:807    .text.nRF24_verified_write_register:0000000000000000 nRF24_verified_write_register
     /tmp/cc0cESOd.s:996    .text.nRF24_verified_write_register:00000000000000f4 $d
     /tmp/cc0cESOd.s:1004   .text.print_bytearray:0000000000000000 $t
     /tmp/cc0cESOd.s:1011   .text.print_bytearray:0000000000000000 print_bytearray
     /tmp/cc0cESOd.s:1101   .text.print_bytearray:0000000000000054 $d
     /tmp/cc0cESOd.s:1109   .text.nRF24_print_all_registers:0000000000000000 $t
     /tmp/cc0cESOd.s:1116   .text.nRF24_print_all_registers:0000000000000000 nRF24_print_all_registers
     /tmp/cc0cESOd.s:1610   .text.nRF24_print_all_registers:000000000000030c $d
ARM GAS  /tmp/cc0cESOd.s 			page 110


     /tmp/cc0cESOd.s:1630   .text.nRF24_set_CONFIG:0000000000000000 $t
     /tmp/cc0cESOd.s:1637   .text.nRF24_set_CONFIG:0000000000000000 nRF24_set_CONFIG
     /tmp/cc0cESOd.s:1682   .text.nRF24_get_CONFIG:0000000000000000 $t
     /tmp/cc0cESOd.s:1689   .text.nRF24_get_CONFIG:0000000000000000 nRF24_get_CONFIG
     /tmp/cc0cESOd.s:1719   .text.nRF24_set_EN_AA:0000000000000000 $t
     /tmp/cc0cESOd.s:1726   .text.nRF24_set_EN_AA:0000000000000000 nRF24_set_EN_AA
     /tmp/cc0cESOd.s:1768   .text.nRF24_get_EN_AA:0000000000000000 $t
     /tmp/cc0cESOd.s:1775   .text.nRF24_get_EN_AA:0000000000000000 nRF24_get_EN_AA
     /tmp/cc0cESOd.s:1805   .text.nRF24_set_EN_RXADDR:0000000000000000 $t
     /tmp/cc0cESOd.s:1812   .text.nRF24_set_EN_RXADDR:0000000000000000 nRF24_set_EN_RXADDR
     /tmp/cc0cESOd.s:1854   .text.nRF24_get_EN_RXADDR:0000000000000000 $t
     /tmp/cc0cESOd.s:1861   .text.nRF24_get_EN_RXADDR:0000000000000000 nRF24_get_EN_RXADDR
     /tmp/cc0cESOd.s:1891   .text.nRF24_set_SETUP_AW:0000000000000000 $t
     /tmp/cc0cESOd.s:1898   .text.nRF24_set_SETUP_AW:0000000000000000 nRF24_set_SETUP_AW
     /tmp/cc0cESOd.s:1931   .text.nRF24_get_SETUP_AW:0000000000000000 $t
     /tmp/cc0cESOd.s:1938   .text.nRF24_get_SETUP_AW:0000000000000000 nRF24_get_SETUP_AW
     /tmp/cc0cESOd.s:1968   .text.nRF24_set_SETUP_RETR:0000000000000000 $t
     /tmp/cc0cESOd.s:1975   .text.nRF24_set_SETUP_RETR:0000000000000000 nRF24_set_SETUP_RETR
     /tmp/cc0cESOd.s:2010   .text.nRF24_get_SETUP_RETR:0000000000000000 $t
     /tmp/cc0cESOd.s:2017   .text.nRF24_get_SETUP_RETR:0000000000000000 nRF24_get_SETUP_RETR
     /tmp/cc0cESOd.s:2050   .text.nRF24_set_RF_CH:0000000000000000 $t
     /tmp/cc0cESOd.s:2057   .text.nRF24_set_RF_CH:0000000000000000 nRF24_set_RF_CH
     /tmp/cc0cESOd.s:2090   .text.nRF24_get_RF_CH:0000000000000000 $t
     /tmp/cc0cESOd.s:2097   .text.nRF24_get_RF_CH:0000000000000000 nRF24_get_RF_CH
     /tmp/cc0cESOd.s:2127   .text.nRF24_set_RF_SETUP:0000000000000000 $t
     /tmp/cc0cESOd.s:2134   .text.nRF24_set_RF_SETUP:0000000000000000 nRF24_set_RF_SETUP
     /tmp/cc0cESOd.s:2175   .text.nRF24_get_RF_SETUP:0000000000000000 $t
     /tmp/cc0cESOd.s:2182   .text.nRF24_get_RF_SETUP:0000000000000000 nRF24_get_RF_SETUP
     /tmp/cc0cESOd.s:2212   .text.nRF24_clear_STATUS:0000000000000000 $t
     /tmp/cc0cESOd.s:2219   .text.nRF24_clear_STATUS:0000000000000000 nRF24_clear_STATUS
     /tmp/cc0cESOd.s:2256   .text.nRF24_tx_self_test:0000000000000000 $t
     /tmp/cc0cESOd.s:2263   .text.nRF24_tx_self_test:0000000000000000 nRF24_tx_self_test
     /tmp/cc0cESOd.s:2502   .text.nRF24_tx_self_test:0000000000000170 $d
     /tmp/cc0cESOd.s:2518   .text.nRF24_get_STATUS:0000000000000000 $t
     /tmp/cc0cESOd.s:2525   .text.nRF24_get_STATUS:0000000000000000 nRF24_get_STATUS
     /tmp/cc0cESOd.s:2555   .text.nRF24_receive_packet:0000000000000000 $t
     /tmp/cc0cESOd.s:2562   .text.nRF24_receive_packet:0000000000000000 nRF24_receive_packet
     /tmp/cc0cESOd.s:2673   .text.nRF24_receive_packet:0000000000000078 $d
     /tmp/cc0cESOd.s:2680   .text.nRF24_get_OBSERVE_TX:0000000000000000 $t
     /tmp/cc0cESOd.s:2687   .text.nRF24_get_OBSERVE_TX:0000000000000000 nRF24_get_OBSERVE_TX
     /tmp/cc0cESOd.s:2717   .text.nRF24_get_RPD:0000000000000000 $t
     /tmp/cc0cESOd.s:2724   .text.nRF24_get_RPD:0000000000000000 nRF24_get_RPD
     /tmp/cc0cESOd.s:2754   .text.nRF24_set_RX_ADDR_P0:0000000000000000 $t
     /tmp/cc0cESOd.s:2761   .text.nRF24_set_RX_ADDR_P0:0000000000000000 nRF24_set_RX_ADDR_P0
     /tmp/cc0cESOd.s:2786   .text.nRF24_get_RX_ADDR_P0:0000000000000000 $t
     /tmp/cc0cESOd.s:2793   .text.nRF24_get_RX_ADDR_P0:0000000000000000 nRF24_get_RX_ADDR_P0
     /tmp/cc0cESOd.s:2818   .text.nRF24_set_RX_ADDR_P1:0000000000000000 $t
     /tmp/cc0cESOd.s:2825   .text.nRF24_set_RX_ADDR_P1:0000000000000000 nRF24_set_RX_ADDR_P1
     /tmp/cc0cESOd.s:2850   .text.nRF24_get_RX_ADDR_P1:0000000000000000 $t
     /tmp/cc0cESOd.s:2857   .text.nRF24_get_RX_ADDR_P1:0000000000000000 nRF24_get_RX_ADDR_P1
     /tmp/cc0cESOd.s:2882   .text.nRF24_set_RX_ADDR_P2:0000000000000000 $t
     /tmp/cc0cESOd.s:2889   .text.nRF24_set_RX_ADDR_P2:0000000000000000 nRF24_set_RX_ADDR_P2
     /tmp/cc0cESOd.s:2922   .text.nRF24_get_RX_ADDR_P2:0000000000000000 $t
     /tmp/cc0cESOd.s:2929   .text.nRF24_get_RX_ADDR_P2:0000000000000000 nRF24_get_RX_ADDR_P2
     /tmp/cc0cESOd.s:2954   .text.nRF24_set_RX_ADDR_P3:0000000000000000 $t
     /tmp/cc0cESOd.s:2961   .text.nRF24_set_RX_ADDR_P3:0000000000000000 nRF24_set_RX_ADDR_P3
     /tmp/cc0cESOd.s:2994   .text.nRF24_get_RX_ADDR_P3:0000000000000000 $t
ARM GAS  /tmp/cc0cESOd.s 			page 111


     /tmp/cc0cESOd.s:3001   .text.nRF24_get_RX_ADDR_P3:0000000000000000 nRF24_get_RX_ADDR_P3
     /tmp/cc0cESOd.s:3026   .text.nRF24_set_RX_ADDR_P4:0000000000000000 $t
     /tmp/cc0cESOd.s:3033   .text.nRF24_set_RX_ADDR_P4:0000000000000000 nRF24_set_RX_ADDR_P4
     /tmp/cc0cESOd.s:3066   .text.nRF24_get_RX_ADDR_P4:0000000000000000 $t
     /tmp/cc0cESOd.s:3073   .text.nRF24_get_RX_ADDR_P4:0000000000000000 nRF24_get_RX_ADDR_P4
     /tmp/cc0cESOd.s:3098   .text.nRF24_set_RX_ADDR_P5:0000000000000000 $t
     /tmp/cc0cESOd.s:3105   .text.nRF24_set_RX_ADDR_P5:0000000000000000 nRF24_set_RX_ADDR_P5
     /tmp/cc0cESOd.s:3138   .text.nRF24_get_RX_ADDR_P5:0000000000000000 $t
     /tmp/cc0cESOd.s:3145   .text.nRF24_get_RX_ADDR_P5:0000000000000000 nRF24_get_RX_ADDR_P5
     /tmp/cc0cESOd.s:3170   .text.nRF24_set_TX_ADDR:0000000000000000 $t
     /tmp/cc0cESOd.s:3177   .text.nRF24_set_TX_ADDR:0000000000000000 nRF24_set_TX_ADDR
     /tmp/cc0cESOd.s:3202   .text.nRF24_config_normal_tx_mode:0000000000000000 $t
     /tmp/cc0cESOd.s:3209   .text.nRF24_config_normal_tx_mode:0000000000000000 nRF24_config_normal_tx_mode
     /tmp/cc0cESOd.s:3298   .text.nRF24_config_normal_tx_mode:000000000000007c $d
     /tmp/cc0cESOd.s:3303   .text.nRF24_config_enhanced_shockburst_tx_mode:0000000000000000 $t
     /tmp/cc0cESOd.s:3310   .text.nRF24_config_enhanced_shockburst_tx_mode:0000000000000000 nRF24_config_enhanced_shockburst_tx_mode
     /tmp/cc0cESOd.s:3410   .text.nRF24_config_enhanced_shockburst_tx_mode:000000000000008c $d
     /tmp/cc0cESOd.s:3415   .text.nRF24_get_TX_ADDR:0000000000000000 $t
     /tmp/cc0cESOd.s:3422   .text.nRF24_get_TX_ADDR:0000000000000000 nRF24_get_TX_ADDR
     /tmp/cc0cESOd.s:3447   .text.nRF24_set_RX_PW_P0:0000000000000000 $t
     /tmp/cc0cESOd.s:3454   .text.nRF24_set_RX_PW_P0:0000000000000000 nRF24_set_RX_PW_P0
     /tmp/cc0cESOd.s:3487   .text.nRF24_config_normal_rx_mode:0000000000000000 $t
     /tmp/cc0cESOd.s:3494   .text.nRF24_config_normal_rx_mode:0000000000000000 nRF24_config_normal_rx_mode
     /tmp/cc0cESOd.s:3592   .text.nRF24_config_normal_rx_mode:0000000000000088 $d
     /tmp/cc0cESOd.s:3597   .text.nRF24_get_RX_PW_P0:0000000000000000 $t
     /tmp/cc0cESOd.s:3604   .text.nRF24_get_RX_PW_P0:0000000000000000 nRF24_get_RX_PW_P0
     /tmp/cc0cESOd.s:3634   .text.nRF24_set_RX_PW_P1:0000000000000000 $t
     /tmp/cc0cESOd.s:3641   .text.nRF24_set_RX_PW_P1:0000000000000000 nRF24_set_RX_PW_P1
     /tmp/cc0cESOd.s:3674   .text.nRF24_get_RX_PW_P1:0000000000000000 $t
     /tmp/cc0cESOd.s:3681   .text.nRF24_get_RX_PW_P1:0000000000000000 nRF24_get_RX_PW_P1
     /tmp/cc0cESOd.s:3711   .text.nRF24_set_RX_PW_P2:0000000000000000 $t
     /tmp/cc0cESOd.s:3718   .text.nRF24_set_RX_PW_P2:0000000000000000 nRF24_set_RX_PW_P2
     /tmp/cc0cESOd.s:3751   .text.nRF24_get_RX_PW_P2:0000000000000000 $t
     /tmp/cc0cESOd.s:3758   .text.nRF24_get_RX_PW_P2:0000000000000000 nRF24_get_RX_PW_P2
     /tmp/cc0cESOd.s:3788   .text.nRF24_set_RX_PW_P3:0000000000000000 $t
     /tmp/cc0cESOd.s:3795   .text.nRF24_set_RX_PW_P3:0000000000000000 nRF24_set_RX_PW_P3
     /tmp/cc0cESOd.s:3828   .text.nRF24_get_RX_PW_P3:0000000000000000 $t
     /tmp/cc0cESOd.s:3835   .text.nRF24_get_RX_PW_P3:0000000000000000 nRF24_get_RX_PW_P3
     /tmp/cc0cESOd.s:3865   .text.nRF24_set_RX_PW_P4:0000000000000000 $t
     /tmp/cc0cESOd.s:3872   .text.nRF24_set_RX_PW_P4:0000000000000000 nRF24_set_RX_PW_P4
     /tmp/cc0cESOd.s:3905   .text.nRF24_get_RX_PW_P4:0000000000000000 $t
     /tmp/cc0cESOd.s:3912   .text.nRF24_get_RX_PW_P4:0000000000000000 nRF24_get_RX_PW_P4
     /tmp/cc0cESOd.s:3942   .text.nRF24_set_RX_PW_P5:0000000000000000 $t
     /tmp/cc0cESOd.s:3949   .text.nRF24_set_RX_PW_P5:0000000000000000 nRF24_set_RX_PW_P5
     /tmp/cc0cESOd.s:3982   .text.nRF24_get_RX_PW_P5:0000000000000000 $t
     /tmp/cc0cESOd.s:3989   .text.nRF24_get_RX_PW_P5:0000000000000000 nRF24_get_RX_PW_P5
     /tmp/cc0cESOd.s:4019   .text.nRF24_get_FIFO_STATUS:0000000000000000 $t
     /tmp/cc0cESOd.s:4026   .text.nRF24_get_FIFO_STATUS:0000000000000000 nRF24_get_FIFO_STATUS
     /tmp/cc0cESOd.s:4056   .text.nRF24_release_payload:0000000000000000 $t
     /tmp/cc0cESOd.s:4063   .text.nRF24_release_payload:0000000000000000 nRF24_release_payload
     /tmp/cc0cESOd.s:4088   .text.nRF24_send_packet:0000000000000000 $t
     /tmp/cc0cESOd.s:4095   .text.nRF24_send_packet:0000000000000000 nRF24_send_packet
     /tmp/cc0cESOd.s:4225   .text.nRF24_send_packet:00000000000000a4 $d
     /tmp/cc0cESOd.s:4235   .rodata:0000000000000000 $d
     /tmp/cc0cESOd.s:4249   .rodata.nRF24_print_all_registers.str1.4:0000000000000000 $d
     /tmp/cc0cESOd.s:4293   .rodata.nRF24_receive_packet.str1.4:0000000000000000 $d
     /tmp/cc0cESOd.s:4300   .rodata.nRF24_tx_self_test.str1.4:0000000000000000 $d
ARM GAS  /tmp/cc0cESOd.s 			page 112


     /tmp/cc0cESOd.s:4328   .rodata.nRF24_verified_write_register.str1.4:0000000000000000 $d
     /tmp/cc0cESOd.s:4338   .rodata.print_bytearray.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_ReadPin
strlen
HAL_UART_Transmit
huart2
HAL_Delay
sprintf
memcpy
